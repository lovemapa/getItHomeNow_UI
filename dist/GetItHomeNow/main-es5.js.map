{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/commonmethod/common-method.ts","webpack:///src/app/componentPackage/add-adds/add-adds.component.ts","webpack:///src/app/componentPackage/add-adds/add-adds.component.html","webpack:///src/app/componentPackage/dashboard/dashboard.component.ts","webpack:///src/app/componentPackage/dashboard/dashboard.component.html","webpack:///src/app/componentPackage/login/login.component.ts","webpack:///src/app/componentPackage/login/login.component.html","webpack:///src/app/componentPackage/profile-setting-change/profile-setting-change.component.ts","webpack:///src/app/componentPackage/profile-setting-change/profile-setting-change.component.html","webpack:///src/app/componentPackage/show-profile/show-profile.component.ts","webpack:///src/app/componentPackage/show-profile/show-profile.component.html","webpack:///src/app/layout/blank/blank.component.ts","webpack:///src/app/layout/blank/blank.component.html","webpack:///src/app/layout/full/full.component.ts","webpack:///src/app/layout/full/full.component.html","webpack:///src/app/material/material.ts","webpack:///src/app/modalPackages/advertisement.ts","webpack:///src/app/modalPackages/cookies.ts","webpack:///src/app/modalPackages/login.ts","webpack:///src/app/modalPackages/sidenavBar.ts","webpack:///src/app/services/admin-service.service.ts","webpack:///src/app/services/sidebar.service.ts","webpack:///src/app/utillpackage/constant.ts","webpack:///src/app/utillpackage/my-cookies.ts","webpack:///src/app/utillpackage/my-routing-methods.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","AppModule","provide","useValue","useClass","declarations","providers","bootstrap","CommonMethods","tag","message","console","log","snackBar","open","duration","verticalPosition","horizontalPosition","panelClass","AddAddsComponent","router","adminServiceService","advertisementModel","name","mainContent","mHeading","cHeading","body","phone","contectNo","createAdvertisement","subscribe","response","success","showSuccessDialog","gotoAds","showErrorDialog","DashboardComponent","spinner","cookiesService","modalService","Tag","searchString","adsList","showTable","currentSelectedAdId","methodToCall","modalHeading","showbutton","checkLoginMethod","logincheck","checkLoginStatus","getAdvertisment","gotoLogin","searchTerm","show","getAdvertisement","data","length","deletecookies","hide","content","contentArray","split","context","modalReference","centered","match","result","reson","reset","close","onclickButton","ad","setSelectedAd","openModal","JoinAndClose","setTimeout","deleteAdvertisement","deletemodal","deleteId","deleteModal","currentSelectedAdModel","_id","mainContentArray","createContent","advertiseId","updateAdvertisement","methodName","updateSelectedAd","AddModalFuntion","LoginComponent","loginModel","document","getElementById","type","className","EMAIL_REGEXP","email","trim","test","password","validation","adminLoginAPI","forgotPassword","callLoginApi","CallModalForm","ProfileSettingChangeComponent","newPwd","toString","toUpperCase","confirmPwd","adminDetails","oldPassword","oldPwd","newPassword","updateDetails","updateAdminDetails","ShowProfileComponent","spiner","selectedImageUrl","imageurl","get","serverURL","getEmaild","event","target","files","reader","FileReader","readAsDataURL","onload","innerEvent","FormData","append","setCurrentProfilePic","onSelectFile","showProileModal","BlankComponent","FullComponent","navBarService","ngzone","showprofile","showSideBar","showBackButtun","mobileView","menu","user_Name","getMenuList","events","value","checkAndSetValue","currentProfilePic","profilePicUrl","profilePic","run","topHeading","currentUrl","url","matched","forEach","element","index","status","navigate","toggleButton","logout","menueToggle","MaterialModule","AdvertisementModel","CookiesModel","user","token","contact","LoginModel","SideNavigationMain","icon","urlTitleList","activeicon","SideNavigationUrlTitle","AdminServiceService","http","cookiesServices","loginUrl","BASEURL","createAdvertisementUrl","updateAdvertisementUrl","deleteAdvertisementUrl","getAdvertisementUrl","userForgotPasswordUrl","updateAdminPwdUrl","asObservable","next","userId","getId","getToken","header","userIdRequestParam","set","username","post","pipe","saveLoginDataInCookies","adData","setHeader","httpOptions","headers","patch","searchurl","providedIn","SidebarService","cookiesservice","toggled","pageName","menus","accountType","pageInnerUrls","push","addSideOption","MyConstants","MyCookies","cookieService","cookiesModel","cookieExists","check","date","Date","setDate","getDate","deleteAll","MyRoutingMethods","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from \"./componentPackage/dashboard/dashboard.component\"\nimport { LoginComponent } from \"./componentPackage/login/login.component\"\nimport { FullComponent } from \"./layout/full/full.component\"\nimport { BlankComponent } from \"./layout/blank/blank.component\"\nimport { AddAddsComponent } from \"./componentPackage/add-adds/add-adds.component\"\nimport { ProfileSettingChangeComponent } from \"./componentPackage/profile-setting-change/profile-setting-change.component\"\nimport{ShowProfileComponent} from\"./componentPackage/show-profile/show-profile.component\"\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: LoginComponent },\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      { path: 'advertisment', component: DashboardComponent },\n      { path: 'add/advertisment', component: AddAddsComponent },\n      { path: 'settings', component: ProfileSettingChangeComponent },\n      { path: 'show/profile', component: ShowProfileComponent },\n\n    ]\n  },\n  {\n    path: '',\n    component: BlankComponent,\n    children: [\n      { path: 'login', component: LoginComponent }\n    ]\n\n  },\n  { path: '**', redirectTo: 'login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GetItHomeNow';\n}\n","<ngx-spinner bdOpacity=0.1 bdColor=\"rgba(209, 127, 161, 0.26)\" size=\"medium\" color=\"#ff586b\" type=\"ball-clip-rotate-pulse\" fullScreen=\"true\">\n</ngx-spinner>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './componentPackage/login/login.component';\nimport { DashboardComponent } from './componentPackage/dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialModule } from './material/material';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { LocationStrategy, HashLocationStrategy, DatePipe } from '@angular/common';\nimport { FullComponent } from './layout/full/full.component';\nimport { BlankComponent } from './layout/blank/blank.component';\nimport { AddAddsComponent } from './componentPackage/add-adds/add-adds.component';\nimport { ProfileSettingChangeComponent } from './componentPackage/profile-setting-change/profile-setting-change.component';\nimport { ShowProfileComponent } from './componentPackage/show-profile/show-profile.component';\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    FullComponent,\n    BlankComponent,\n    AddAddsComponent,\n    ProfileSettingChangeComponent,\n    ShowProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    PerfectScrollbarModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    },\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    CookieService,\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MatSnackBar } from '@angular/material/snack-bar';\n\nexport class CommonMethods {\n\n\n\n    public static showconsole(tag: string, message: string) {\n        console.log(tag, message);\n    }\n\n\n   /*\n    *Show Error Dialog Message Common Method\n    */\n\n   static showErrorDialog(snackBar: MatSnackBar, message: string) {\n    snackBar.open(message, \"\", {\n        duration: 3000,\n        verticalPosition: 'top',\n        horizontalPosition: 'end',\n        panelClass: ['blue-snackbar']\n    });\n}\n\n/*\n      Show Success Dialog Message Common Method\n*/\n\nstatic showSuccessDialog(snackBar: MatSnackBar, message: string) {\n    snackBar.open(message, \"\", {\n        duration: 3000,\n        panelClass: ['sucess-snackbar'],\n        verticalPosition: 'top',\n        horizontalPosition: 'end',\n    });\n}\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\n\n@Component({\n  selector: 'app-add-adds',\n  templateUrl: './add-adds.component.html',\n  styleUrls: ['./add-adds.component.css']\n})\nexport class AddAddsComponent implements OnInit {\n\n  public title:string;\n  public mHeading:string;\n  public cHeading:string;\n  public body:string;\n  public contectNo:number;\n  public advertisementModel:AdvertisementModel;\n\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  createAdvertisement(){\n    \n    this.advertisementModel= new AdvertisementModel();\n    this.advertisementModel.name=this.title;\n    this.advertisementModel.mainContent=this.mHeading+\"%\"+this.cHeading+\"%\"+this.body;\n    this.advertisementModel.phone=this.contectNo;\n    this.adminServiceService.createAdvertisement(this.advertisementModel).subscribe(response =>{\n      if(response.success){\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\n        MyRoutingMethods.gotoAds(this.router);\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\n      }\n    })\n\n    \n  }\n}\n","<div class=\"add-more\" routerLink=\"/advertisment\">\n    <i class=\"mdi mdi-arrow-left\"></i>\n</div>\n<div class=\"form-outer\">\n    <div class=\"form-element\">\n        <label for=\"title\">Title</label>\n        <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-element\">\n        <label for=\"mHeading\">Main Heading</label>\n        <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-element\">\n        <label for=\"cHeading\">Sub Heading</label>\n        <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-element\">\n        <label for=\"body\">Body</label>\n        <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-element\">\n        <label for=\"contectNo\">Contact Number</label>\n        <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\n    </div>\n    <div class=\"form-element\" style=\"text-align: center;\">\n        <a (click)=\"createAdvertisement()\" class=\"submit-btn\">Submit</a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  Tag=\"DashboardComponent\"\n  public searchString: string = \"\";\n  modalReference: NgbModalRef;\n  public adsList: Array<AdvertisementModel> = [];\n  showTable = false\n  public title:string;\n  public mHeading:string;\n  public cHeading:string;\n  public body:string;\n  public contectNo:number;\n  public modalHeading:string;\n  public showbutton:string;\n  public currentSelectedAdId:string = '';\n  public methodToCall:string = '';\n\n\n  constructor(public snackBar: MatSnackBar, public spinner: NgxSpinnerService,\n    public cookiesService: CookieService, public router: Router, public adminServiceService: AdminServiceService, public modalService: NgbModal) {\n    this.showTable = false;\n    this.adsList=[]\n    this.modalHeading=\"\";\n    this.showbutton=\"\";\n    this.checkLoginMethod();\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  /**Check Login */\n  checkLoginMethod() {\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\n    if (logincheck) {\n      this.getAdvertisment();\n    } else {\n      MyRoutingMethods.gotoLogin(this.router);\n    }\n  }\n\n/**GEt AdverTisMEnt List */\n  getAdvertisment(searchTerm?:string){\n    if(searchTerm || searchTerm == ''){\n      this.searchString=searchTerm;\n    }\n    this.spinner.show();\n    this.adminServiceService.getAdvertisement(this.searchString).subscribe(response => {\n      if (response.success) {\n        this.adsList = response.data;\n        this.showTable = true;\n        if(this.adsList.length==0){\n          this.showTable=false;\n        }\n      }\n      else {\n        MyCookies.deletecookies(this.cookiesService);\n        MyRoutingMethods.gotoLogin(this.router);\n      }\n      this.spinner.hide();\n    });\n  }\n\n  createContent(content: string): Array<string> {\n    let contentArray: Array<string> = content.split(\"%\");\n    return contentArray;\n  }\n\n  /**\n    * \n    * Open  Modal Function \n    */\n  openModal(content, context?: string) {\n    this.modalReference = this.modalService.open(content, { centered: true });\n    if (this.modalHeading.match(\"Update Advertisement\")) {\n      this.modalReference.result.then((result) => { }, (reson) => {\n        this.reset();\n      });\n    }\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\n  }\n  deleteModal(content) {\n    this.modalReference = this.modalService.open(content, { centered: true });\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\n  }\n\n  /**\n   * \n   * close Modal Function \n   */\n\n  JoinAndClose() {\n    this.modalReference.close();\n    this.reset();\n  }\n\n\n  /**CallIng Modal Function */\n\n  AddModalFuntion(content,onclickButton:string,ad?:AdvertisementModel) \n  {\n     if(onclickButton == 'addAddvertisment'){\n      this.modalHeading=\"Add Advertisement\";\n      this.showbutton=\"Add\";\n      this.methodToCall='createAdvertisement()';\n     }else{\n      this.setSelectedAd(ad);\n      this.modalHeading=\"Update Advertisement\";\n      this.showbutton=\"Update\";\n      this.methodToCall='updateSelectedAd()';\n     }\n    this.openModal(content);\n  }\n\n\n  /**\n   * method to Add Advertismnet\n   */\n  createAdvertisement(){\n    this.spinner.show();\n    let advertisementModel= new AdvertisementModel();\n    advertisementModel.name=this.title;\n    advertisementModel.mainContent=this.mHeading+\"%\"+this.cHeading+\"%\"+this.body;\n    advertisementModel.phone=this.contectNo;\n    this.adminServiceService.createAdvertisement(advertisementModel).subscribe(response =>{\n      if(response.success){\n        this.JoinAndClose()\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\n        this.reset();\n        setTimeout(() => {\n          this.getAdvertisment()\n        }, 100);\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\n      }\n      this.spinner.hide();\n    });\n  }\n\n  /**\n   * method to delete selected Ad\n   */\n  deleteAdvertisement(){\n    this.spinner.show();\n    this.adminServiceService.deleteAdvertisement(this.currentSelectedAdId).subscribe(response => {\n      this.JoinAndClose()\n      if (response.success) {\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\n        this.getAdvertisment();\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\n      }\n      this.spinner.hide();\n    });\n  }\n\n  /**\n   * method to call delete modal\n   * @param deletemodal delete modal content\n   * @param deleteId selected ad id\n   */\n  deleteModalCall(deletemodal,deleteId:any){\n    this.deleteModal(deletemodal);\n    this.currentSelectedAdId = deleteId;\n  }\n\n  /**\n   * method to reset all variables of add ad modal\n   */\n  reset(){\n    this.title='';\n    this.mHeading='';\n    this.cHeading='';\n    this.body='';\n    this.contectNo=null;\n  }\n\n  /**\n   * method to set current selected advertisement\n   * @param currentSelectedAdModel selected ad\n   */\n  setSelectedAd(currentSelectedAdModel:AdvertisementModel){\n    this.currentSelectedAdId=currentSelectedAdModel._id;\n    this.title=currentSelectedAdModel.name;\n    let mainContentArray=this.createContent(currentSelectedAdModel.mainContent);\n    this.mHeading=mainContentArray[0];\n    this.cHeading=mainContentArray[1];\n    this.body=mainContentArray[2];\n    this.contectNo=currentSelectedAdModel.phone;\n  }\n\n  /**\n   * method to update current selected Ad\n   */\n  updateSelectedAd(){\n    this.spinner.show();\n    let advertisementModel= new AdvertisementModel();\n    advertisementModel.advertiseId=this.currentSelectedAdId;\n    advertisementModel.name=this.title;\n    advertisementModel.mainContent=this.mHeading+\"%\"+this.cHeading+\"%\"+this.body;\n    advertisementModel.phone=this.contectNo;\n    this.adminServiceService.updateAdvertisement(advertisementModel).subscribe(response =>{\n      if(response.success){\n        this.JoinAndClose()\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\n        this.reset();\n        setTimeout(() => {\n          this.getAdvertisment()\n        }, 100);\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\n      }\n      this.spinner.hide();\n    });\n  }\n\n  /**\n   * method to call specific method\n   * @param methodName method to call\n   */\n  hitRequiredFunction(methodName: string) {\n    if (methodName != '') {\n      if (methodName.match('update')) {\n        this.updateSelectedAd();\n      }\n      else {\n        this.createAdvertisement();\n      }\n    }\n  }\n}\n","<div class=\"search-box-outer\">\n    \n    <input name=\"searchBar\"  id=\"searchBarforAds\" class=\"search-box\" value=\"\" placeholder=\"Search..\" type=\"text\" [(ngModel)]=\"searchString\" (keyup.enter)=\"getAdvertisment()\" (keyup)=\"getAdvertisment()\" autocomplete=\"off\">\n    <button id=\"search-box-icon\" type=\"submit\" class=\"search btn btn-link text-danger\" (click)=\"getAdvertisment()\"><i class=\"fa fa-search search-icon\"></i></button>\n    <div class=\"float-right getAllAd-btn\" *ngIf=\"searchString != ''\">\n        <button  type=\"button\" class=\"btn btn-outline-danger\" (click)=\"getAdvertisment('')\">Show All Ads</button>\n    </div>\n</div>\n<div  *ngIf=\"!showTable\">\n    <h1>No Advertisement Found</h1>\n</div>\n<div class=\"card-wrapper\" *ngIf=\"showTable\">\n    <div class=\" card\" *ngFor=\"let ads of adsList\">\n        <div class=\"topStatic\">\n            <h2>Store,Estate,Garage Sales</h2>\n\n            <div class=\"Image\">\n                <img src=\"./assets/imgs/logoSmall3.png\" alt=\"\" class=\"imageLogo\">\n            </div>\n            <div class=\"bodyCenter\">\n                <h4 class=\"big-stuff\">{{ads.name}}</h4>\n                <ng-container>\n                    <p class=\"title-1\">{{createContent(ads.mainContent)[0]}} </p>\n                    <p class=\"title-2\">{{createContent(ads.mainContent)[1]}}</p>\n                    <p class=\"title-3\">{{createContent(ads.mainContent)[2]}}</p>\n                </ng-container>\n            </div>\n        </div>\n        <div class=\"bottom\">\n            <div class=\"imageBottom\">\n                <img src=\"./assets/imgs/contact.png\" alt=\"\">\n            </div>\n            <p class=\"bottom-title\">The Uber® of Moving Stuff</p>\n        </div>\n        <div class=\"action-btn\">\n            <div class=\"btns\">\n                <a class=\"edit-btn\" (click)=\"AddModalFuntion(content,'updateAddvertisment',ads)\"> <i class=\"mdi mdi-border-color\"></i></a>\n                <a class=\"delete-btn\" (click)=\"deleteModalCall(deleteModal,ads._id)\"><i class=\"mdi mdi-delete\"></i></a>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n\n    <div class=\"add-more\" (click)=\"AddModalFuntion(content,'addAddvertisment')\">\n        <i class=\"mdi mdi-plus\"></i>\n    </div>\n\n\n\n    <ng-template #content>\n        <div class=\"modal-body\" style=\"text-align: center; \">\n            <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\n            <div class=\"title-heading\">\n                <h3>{{modalHeading}}</h3>\n            </div>\n            <div class=\"form-outer\">\n                <div class=\"form-element\">\n                    <label for=\"title\">Title</label>\n                    <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-element\">\n                        <label for=\"mHeading\">Main Heading</label>\n                        <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\n                    </div>\n                    <div class=\"form-element\">\n                        <label for=\"cHeading\">Sub Heading</label>\n                        <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-element\">\n                        <label for=\"body\">Body</label>\n                        <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\n                    </div>\n                    <div class=\"form-element\">\n                        <label for=\"contectNo\">Contact Number</label>\n                        <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\n                    </div>\n                </div>\n\n                <div class=\"form-element submit-btn\" style=\"text-align: center;\">\n                    <a (click)=\"hitRequiredFunction(methodToCall)\" class=\"submit-btn\">{{showbutton}}</a>\n                </div>\n            </div>\n        </div>\n    </ng-template>\n\n\n    <ng-template #deleteModal>\n        <div class=\"modal-body\" style=\"text-align: center; \">\n            <!-- <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div> -->\n            <div class=\"title-heading\">\n                <h3>Delete</h3>\n            </div>\n            <div class=\"modal-content\">\n                <p>Are you sure, you want to Delete?</p>\n                <div class=\"modal-btns\">\n                    <a class=\"cancel-btn\" (click)=\"JoinAndClose()\">Cancel</a>\n                    <a class=\"submit-btn\" (click)=\"deleteAdvertisement()\">Submit</a>\n                </div>\n            </div>\n        </div>\n    </ng-template>","import { Component, OnInit } from '@angular/core';\nimport { LoginModel } from 'src/app/modalPackages/login';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\nimport { Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  Tag = \"LoginComponent\";\n  modalReference: NgbModalRef\n  loginModel: LoginModel;\n\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\n    public spinner: NgxSpinnerService, public cookiesService: CookieService, public modalService: NgbModal) {\n    this.loginModel = new LoginModel(\"\", \"\");\n    this.checkLoginMethod();\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**Check Login */\n  checkLoginMethod() {\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\n    if (logincheck) {\n      MyRoutingMethods.gotoAds(this.router);\n    } else {\n      MyRoutingMethods.gotoLogin(this.router);\n    }\n  }\n\n  /**\n   * show Password Icon Click Function \n   */\n  showPassword() {\n    if ((document.getElementById('password') as HTMLInputElement).type == 'password') {\n      (document.getElementById('password') as HTMLInputElement).type = 'text';\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye\";\n    }\n    else {\n      (document.getElementById('password') as HTMLInputElement).type = \"password\";\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye-slash\";\n    }\n  }\n  /**\n   end\n   */\n\n  /**\n   * Validation Function\n   */\n  validation() {\n    var EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (this.loginModel.email.trim().length == 0) {\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter email\");\n      return false;\n    } else if (!EMAIL_REGEXP.test(this.loginModel.email.trim())) {\n      CommonMethods.showErrorDialog(this.snackBar, \"Email is invalid\");\n      return false;\n    } else if (this.loginModel.password.trim().length == 0) {\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter password\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n  /**End */\n\n  /**\n   * Login Api Call \n   */\n  callLoginApi() {\n    if (this.validation()) {\n      this.spinner.show();\n      this.adminServiceService.adminLoginAPI(this.loginModel.email, this.loginModel.password).subscribe(response => {\n        if (response.success) {\n          this.spinner.hide();\n          // Calling Routing Function Goto TO Dashborad \n          MyRoutingMethods.gotoAds(this.router);\n        }\n        else {\n          this.spinner.hide();\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\n        }\n      });\n    }\n  }\n  /**End */\n\n  /**\n        * \n        * Open  Modal Function \n        */\n  openModal(content) {\n    this.modalReference = this.modalService.open(content, { centered: true });\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\n  }\n\n  /**\n   * \n   * close Modal Function \n   */\n  JoinAndClose() {\n    this.modalReference.close();\n  }\n\n  /**CallIng Modal Function */\n  CallModalForm(content) {\n    this.openModal(content)\n  }\n\n  /**\n   * method to send revocery mail on specific email\n   * @param email email to send recovery link\n   */\n  forgetPassword(email:string){\n    this.spinner.show();\n    this.adminServiceService.forgotPassword(email).subscribe(response => {\n      this.spinner.hide();\n      this.JoinAndClose();\n      if (response.success) {\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\n      }\n      else {\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\n      }\n    });\n  }\n}\n","<main id=\"wrapper\">\n\n    <div class=\"backlayer\">\n        <div class=\"layerLeft\"\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\n        </div>\n        <div class=\"layerRight\"\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\n        </div>\n    </div>\n    <div class=\"panels\">\n        <div class=\"innerpanel\">\n            <!-- <div class=\"left\">\n                <div class=\"formcontainer\">\n                    <h5>Forgot your password? </h5>\n                    <h6>Enter The E-mail Address Associated With Your Account.</h6>\n                    <form class=\"web_form\" action=\"\">\n                        <div class=\"field_control fieldicon mail\">\n                            <label class=\"field_label\">Email <span class=\"mandatory\">*</span></label>\n                            <div class=\"field_cover\">\n                                <input type=\"text\">\n                            </div>\n                        </div>\n\n\n                        <a href=\"\" class=\"circlebutton\">Sign In</a>\n                        <a id=\"moveright\" href=\"javascript:void(0)\" class=\"linkright linkslide\">Back to Login</a>\n                    </form>\n                </div>\n            </div> -->\n            <div class=\"right\">\n                <div class=\"formcontainer\">\n                    <h5>login</h5>\n                    <!-- <h6>Lorem ipsum dolor sit amet, consectetur adipiscing</h6> -->\n\n                    <form class=\"login100-form\">\n                        <div class=\"field\">\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\" \" autocomplete=\"off\"\n                                [(ngModel)]=\"loginModel.email\" required>\n                            <label for=\"email\">Email</label>\n                            <i class=\"fieldIcon fa fa-user\" aria-hidden=\"true\"></i>\n                        </div>\n\n                        <div class=\"field\">\n                            <input type=\"password\" name=\"password\" id=password placeholder=\" \"\n                                [(ngModel)]=\"loginModel.password\" required>\n                            <label for=\"password\">Password</label>\n                            <i class=\"fieldIcon fa fa-lock\" aria-hidden=\"true\"></i>\n                            <!-- <i class=\"fieldIcon password \" id=\"myiconconfirm\" aria-hidden=\"true\" (click)=\"showPassword()\"></i> -->\n                        </div>\n\n                        <div class=\"field\">\n                            <button type=\"submit\" class=\"submit button\" (click)=\"callLoginApi()\"><span></span>Log\n                                In</button>\n                        </div>\n\n                        <div class=\"field d-flex spcl-field\">\n                            <!-- <label class=\"checkbox leftlabel\"><input type=\"checkbox\"><i\n                                    class=\"input-helper\"></i>Remember me</label> -->\n                            <a id=\"moveleft\" href=\"javascript:void(0)\" class=\"linkright linkslide\"\n                                (click)=\"CallModalForm(content)\">Forgot Password?</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</main>\n\n\n\n<ng-template #content>\n    <div class=\"modal-body\" style=\"text-align: center; \">\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\n        <div class=\"title-heading\">\n            <h3>Forgot Password?</h3>\n            <!-- <p>Lorem ipsum dolor sit amet, consectetur adipisicing</p> -->\n        </div>\n        <form class=\"login100-form\">\n            <div class=\"form-element\">\n                <label>Email</label>\n                <input placeholder=\"Enter Email\" type=\"email\" #inputEmail autocomplete=\"off\" />\n            </div>\n\n            <div class=\"field\" style=\"margin-bottom: 0;\">\n                <button type=\"submit\" class=\"submit button\" (click)=\"forgetPassword(inputEmail.value)\">Submit</button>\n            </div>\n        </form>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\n\n@Component({\n  selector: 'app-profile-setting-change',\n  templateUrl: './profile-setting-change.component.html',\n  styleUrls: ['./profile-setting-change.component.css']\n})\nexport class ProfileSettingChangeComponent implements OnInit {\n\n  public oldPwd:string;\n  public newPwd:string;\n  public confirmPwd:string;\n\n  \n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  updateAdminDetails(){\n    if(this.newPwd.toString()!='' && this.newPwd.toUpperCase().match(this.confirmPwd.toUpperCase())){\n      let adminDetails:any={};\n      adminDetails.oldPassword=this.oldPwd;\n      adminDetails.newPassword=this.newPwd;\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\n        if(response.success){\n          CommonMethods.showSuccessDialog(this.snackBar,response.message);\n          MyRoutingMethods.gotoAds(this.router);\n        }\n        else{\n          CommonMethods.showErrorDialog(this.snackBar,response.message);\n        }\n      });\n    }else{\n      if(this.newPwd.toString()==''){\n        CommonMethods.showErrorDialog(this.snackBar,\"Password field can't be empty.\")\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,\"Oops, that's not the same password as the first one\");\n      }\n    }\n\n  }\n}\n","<div class=\"form-outer\">\n    <div class=\"form-element\">\n        <label for=\"oldpassword\">Old Password</label>\n        <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\"/>\n    </div>\n    <div class=\"form-element\">\n        <label for=\"npassword\">New password</label>\n        <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\"/>\n    </div>\n    <div class=\"form-element\">\n        <label for=\"cpassword\">Confirm password</label>\n        <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" autocomplete=\"off\"/>\n    </div>\n    <div class=\"form-element\" style=\"text-align: center;\">\n        <a (click)=\"updateAdminDetails()\" class=\"submit-btn\">Submit</a>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\nimport { CookiesModel } from 'src/app/modalPackages/cookies';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { MyConstants } from 'src/app/utillpackage/constant';\n\n@Component({\n  selector: 'app-show-profile',\n  templateUrl: './show-profile.component.html',\n  styleUrls: ['./show-profile.component.css']\n})\nexport class ShowProfileComponent implements OnInit {\n\n  Tag=\"ShowProfileComponent\";\n  imageurl:any;\n  modalReference:NgbModalRef;\n  selectedImageUrl:File ;\n  public oldPwd:string;\n  public newPwd:string;\n  public confirmPwd:string;\n\n  public userName:string;\n  public email:string;\n\n  constructor(public modalService:NgbModal,public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\n    public cookiesService:CookieService,public spiner:NgxSpinnerService) {\n    this.selectedImageUrl=null;\n    this.checkLoginMethod();\n    this.imageurl=this.cookiesService.get('profilePic');\n    if(!this.imageurl){\n      this.imageurl=\"./assets/imgs/default-admin.jpg\";\n    }\n    else{\n      this.imageurl=MyConstants.serverURL+this.imageurl;\n    }\n   }\n  \n  ngOnInit(): void {\n  }\n\n  /**Check Login */\n  checkLoginMethod() {\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\n    if (logincheck) {\n      this.email=MyCookies.getEmaild(this.cookiesService);\n      // this.email=MyCookies\n    } else {\n      MyRoutingMethods.gotoLogin(this.router);\n    }\n  }\n\n\n  onSelectFile(event) {\n  \n    if (event.target.files) {\n      var reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (innerEvent) => {\n        this.imageurl = (<FileReader>innerEvent.target).result;\n\n        this.selectedImageUrl = event.target.files[0];\n        const adminDetails: FormData = new FormData();\n        adminDetails.append('file', this.selectedImageUrl, this.selectedImageUrl.name);\n        this.updateAdminDetails(adminDetails);\n      }\n    }\n  }\n\n  /**\n        * \n        * Open  Modal Function \n        */\n  openModal(content) {\n    this.modalReference = this.modalService.open(content, { centered: true });\n    this.modalReference.result.then((result) => { }, (reson) => {\n      this.reset();\n    });\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\n  }\n\n  /**\n   * \n   * close Modal Function \n   */\n  JoinAndClose() {\n    if (this.modalReference) {\n      this.reset();\n      this.modalReference.close();\n    }\n  }\n\n  showProileModal(content){\n    this.openModal(content);\n  }\n\n\n  // CHnage Proilfe \n  updatePassword() {\n    if (this.newPwd.toString() != '' && this.newPwd.toUpperCase() == this.confirmPwd.toUpperCase()\n      &&  this.oldPwd !='' && this.newPwd.toUpperCase() != this.oldPwd.toUpperCase()) {\n      this.spiner.show();\n      let adminDetails: any = {};\n      adminDetails.oldPassword = this.oldPwd;\n      adminDetails.newPassword = this.newPwd;\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response => {\n        this.JoinAndClose();\n        if (response.success) {\n          this.spiner.hide();\n          CommonMethods.showSuccessDialog(this.snackBar, response.message);\n          MyCookies.deletecookies(this.cookiesService);\n          MyRoutingMethods.gotoLogin(this.router);\n          CommonMethods.showSuccessDialog(this.snackBar, response.message + \" please Login Again\");\n        }\n        else {\n          this.spiner.hide();\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\n        }\n      });\n    } else {\n      if (this.newPwd.toString() == '') {\n        CommonMethods.showErrorDialog(this.snackBar, \"Password field can't be empty.\");\n      }\n      else if(this.newPwd.toUpperCase() == this.oldPwd.toUpperCase()){\n        CommonMethods.showErrorDialog(this.snackBar, \"New Password can't be same as Old Password\");\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar, \"Oops, New Password & Confirm Password are not same\");\n      }\n      this.JoinAndClose();\n    }\n\n  }\n\n  /**\n   * method to update admin details\n   * @param adminDetails updated admin details object\n   */\n  updateAdminDetails(adminDetails:any){\n    this.spiner.show();\n    this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\n      this.spiner.hide();\n      if(response.success){\n        this.adminServiceService.setCurrentProfilePic(this.cookiesService.get('profilePic'));\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\n      }\n      else{\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\n      }\n    });\n  }\n\n  /**\n   * method to reset all variables of admindetail object\n   */\n  reset(){\n    this.oldPwd = '';\n    this.newPwd = '';\n    this.confirmPwd = '';\n  }\n}\n","<div class=\"card profile-section\">\n    <div class=\"card-body\">\n        <label class=\"cabinet center-block\">\n            <figure>\n            <img src=\"{{imageurl}}\" class=\"gambar img-responsive img-thumbnail\" id=\"item-img-output\" />\n          <figcaption><i class=\"fa fa-camera\"></i></figcaption>\n         </figure>\n        <input type=\"file\" class=\"item-img file center-block\"  (change)=\"onSelectFile($event)\" accept=\"image/*\" name=\"file_photo\"/>\n        </label>\n    </div>\n\n    <div class=\"profile-name\">\n        <h2>Admin</h2>\n        <p>{{email}}</p>\n        <a (click)=\"showProileModal(content)\">Change Password</a>\n    </div>\n</div>\n\n\n<ng-template #content>\n    <div class=\"modal-body\" style=\"text-align: center; \">\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\n        <div class=\"title-heading\">\n            <h3>Change Password</h3>\n        </div>\n        <div class=\"form-outer\">\n            <div class=\"form-element\">\n                <label for=\"oldpassword\">Old Password</label>\n                <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\" />\n            </div>\n            <div class=\"form-element\">\n                <label for=\"npassword\">New password</label>\n                <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\" />\n            </div>\n            <div class=\"form-element\">\n                <label for=\"cpassword\">Confirm password</label>\n                <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" (keyup.enter)=\"updatePassword()\" autocomplete=\"off\" />\n            </div>\n            <div class=\"form-element\" style=\"text-align: center;\">\n                <a (click)=\"updatePassword()\" class=\"submit-btn\">Submit</a>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: ['./blank.component.css']\n})\nexport class BlankComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet>\n</router-outlet>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SidebarService } from 'src/app/services/sidebar.service';\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\nimport { MyConstants } from 'src/app/utillpackage/constant';\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\n\n@Component({\n  selector: 'app-full',\n  templateUrl: './full.component.html',\n  styleUrls: ['./full.component.css']\n})\nexport class FullComponent implements OnInit {\n\n  Tag = \"FullComponent\";\n\n  showprofile = false;\n  showSideBar = false;\n  topHeading: string;\n  menu: Array<any>;\n  user_Name: any;\n  showBackButtun = false;\n  searchTerm: string = \"\";\n  profilePic: any;\n  mobileView = false;\n\n  constructor(public router: Router, public cookiesService: CookieService, public navBarService: SidebarService, public adminServiceService: AdminServiceService,\n    public ngzone: NgZone) {\n    this.showprofile = false\n    this.showSideBar = false\n    this.showBackButtun = false;\n    this.mobileView = false;\n    this.menu = [];\n    this.user_Name = \"\";\n    // Set Menu List From Side Bar Service \n    this.menu = this.navBarService.getMenuList()\n    this.router.events.subscribe(value => {\n      if (value instanceof NavigationEnd) {\n\n        this.checkAndSetValue()\n\n      }\n    });\n    this.user_Name = \"Admin\"\n  }\n\n\n  ngOnInit(): void {\n    this.adminServiceService.currentProfilePic.subscribe(profilePicUrl => {\n      this.profilePic = profilePicUrl;\n      if (profilePicUrl == '') {\n        this.profilePic = this.cookiesService.get('profilePic');\n      }\n      if (!this.profilePic) {\n        this.profilePic = \"./assets/imgs/default-admin.jpg\";\n      }\n      else {\n        this.profilePic = MyConstants.serverURL + this.profilePic;\n      }\n    });\n  }\n\n  /**\n   * \n   * Profile Dialog Show Image\n   * \n   */\n  showProflieDown() {\n    this.showprofile = !this.showprofile;\n  }\n  /**End */\n\n  /**\n * \n * Menue Toggle Image\n * \n */\n\n  menueToggle() {\n    if (this.showSideBar == false) {\n      this.showSideBar = true;\n    } else {\n      this.showSideBar = false;\n    }\n  }\n\n  toggleButton() {\n    this.mobileView = !this.mobileView;\n\n  }\n\n\n  /**\n   * \n   * Get Top HEading Function \n   * \n   */\n\n  checkAndSetValue() {\n    this.showprofile = false\n    this.ngzone.run(() => {\n      this.topHeading = \"\"\n      var currentUrl = this.router.url\n      var matched = false\n      this.menu.forEach((element, index) => {\n        element.status = \"inactive\"\n        if (!matched) {\n          if (currentUrl == element.url) {\n            matched = true\n            // this.toggleButton();\n            this.topHeading = element.title\n            element.status = \"active\"\n\n          }\n        } else {\n          element.status = \"inactive\"\n        }\n        // element.urlTitleList.forEach(pageInnerUrls => {\n        //   if (!matched) {\n        //     if (currentUrl.includes(pageInnerUrls.url)) {\n        //       matched = true\n        //       this.topHeading = pageInnerUrls.title\n        //       element.status = \"active\"\n        //     }\n        //   }\n        // });\n        // element.innerOptions.forEach((innerElement, innerIndex) => {\n        //   innerElement.status = \"inactive\"\n\n\n        //   if (!matched) {\n\n        //     if (currentUrl == \"/\" + innerElement.url) {\n        //       matched = true\n        //       this.topHeading = innerElement.title\n        //       innerElement.status = \"active\"\n        //       element.status = \"active\"\n        //       this.currentInnermenuIndex = innerIndex\n        //       this.currentmenuIndex = index\n        //       // CommonMethods.showconsole(this.Tag, \"Status:- \" + element.status)\n        //       CommonMethods.showconsole(this.Tag, \"Current main Menu Index :- \" + index)\n        //       CommonMethods.showconsole(this.Tag, \"Current main inner Menu Index :- \" + innerIndex)\n        //     }\n        //   }\n        //   innerElement.urlTitleList.forEach(pageInnerUrls => {\n        //     if (!matched) {\n        //       if (currentUrl.includes(pageInnerUrls.url) ) {\n        //         matched = true\n        //         this.topHeading = pageInnerUrls.title\n        //         innerElement.status = \"active\"\n        //         element.status = \"active\"\n        //       }\n        //     }\n        //   });\n        // })\n      })\n\n    })\n  }\n\n  /**End */\n\n\n\n\n  gotoRouting(index) {\n    this.router.navigate([this.menu[index].url]);\n    this.topHeading = this.menu[index].title\n  }\n  // gotoSubmenuPage(oterindex: number, innerindex: number) {\n\n  //   this.router.navigate(['/' + this.menus[oterindex].innerOptions[innerindex].url])\n  //   this.topHeading = this.menus[oterindex].innerOptions[innerindex].title\n  // }\n\n\n\n\n\n\n  /**\n   * Logout Function\n   */\n  logout() {\n    MyCookies.deletecookies(this.cookiesService);\n    MyRoutingMethods.gotoLogin(this.router);\n  }\n  /**End */\n\n\n  /**\n   * Toggle Css CHnage \n   */\n  getCustomCss() {\n    if (this.showSideBar == true) {\n      return 'fa-toggle-off'\n\n    } else {\n      return 'fa-toggle-on'\n    }\n  }\n\n  /**Ng Class Icon Set */\n  setNgClass(className) {\n    return className;\n  }\n  /**End */\n\n}\n","<div [ngClass]=\"{'slide': showSideBar}\">\n    <div class=\"wrapper\" [ngClass]=\"{'mobile-slide': mobileView}\">\n        <div class=\"top-bar\">\n            <div class=\"left-section\">\n                <div class='left-side-section'>\n                    <div class=\"toggle-btn\" (click)=\"toggleButton()\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\n                </div>\n            </div>\n            <div class=\"right-section\">\n                <ul>\n                    <!-- <li>\n                        <div class=\"notification\">\n                            <div class=\"navdrop-box custom-tooltip\" data-name=\"Notification\">\n                                <i class=\"mdi mdi-bell-ring\"></i>\n                                <span class=\"count-notification\">21</span>\n                            </div>\n                            <div class=\"dropdown-menu broadcast-notification\">\n                                <div class=\"notification-header\">\n                                    <h5>Notifications</h5>\n                                    <p>you have <span>21</span> unread Messages</p>\n\n                                </div>\n                                <div class=\"notification-message\">\n                                    <ul>\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\n                                                Message<span>11:00PM</span></a></li>\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\n                                                Message<span>11:00PM</span></a></li>\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\n                                                Message<span>11:00PM</span></a></li>\n                                    </ul>\n                                </div>\n                                <div class=\"notification-footer\">\n                                    <a href=\"javascript:;\">View All Notifications</a>\n                                </div>\n                            </div>\n                        </div>\n                    </li> -->\n                    <li>\n                        <div class=\"profile-settings\">\n                            <div class=\"navdrop-box\" style=\"display: flex;\n                            justify-content: center;\">\n                                <img src=\"{{profilePic}}\">\n                                <h5 style=\"position: relative;\n                                top: 3px;\n                                margin: 2px;\n                                font-weight: bold;\n                                font-size: 16px;\">{{user_Name}}</h5>\n                                <i style=\"position: relative;top: 9px;\n                                margin-left: 9px;\" class=\"fa fa-chevron-down\"></i>\n                            </div>\n                            <div class=\"dropdown-menu\">\n                                <!-- <h5>{{user_Name}}</h5> -->\n                                <a routerLink=\"/show/profile\">View Profile</a>\n                                <!-- <a routerLink=\"/settings\">Settings</a> -->\n                                <div class=\"dropdown-menu-footer\">\n                                    <a (click)=\"logout()\"> Logout </a>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div class=\"side-bar\">\n            <div class=\"backlayer-sidebar\" (click)=\"toggleButton()\"></div>\n            <div class=\"side-header\">\n                <a href=\"\" class=\"logo-text\">\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/Logo_car_black_and_white.png\" /></div>\n                    <span class=\"logo-name\">GetItHomeNow</span>\n                </a>\n                <i class=\"toggle-switch fa \" [ngClass]=\"getCustomCss()\" (click)=\"menueToggle()\"></i>\n\n                <div class=\"sidebar-header\">\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\n                    <a (click)=\"toggleButton()\"><i class=\"fa fa-times\"></i></a>\n                </div>\n            </div>\n            <perfect-scrollbar>\n                <ul class=\"nav-bar\">\n                    <!-- <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\n                        <a>{{menuList.title}}</a>\n                    </li> -->\n                    <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\n                        <a><i class='side-icon' [ngClass]=\"setNgClass(menuList.icon)\"></i>\n                            <span>{{menuList.title}}</span></a>\n                    </li>\n                    <!-- <li class=\"active\">\n                        <a><i class='side-icon fa fa-home'></i> <span>Dashboard</span></a>\n                    </li>\n                    <li>\n                        <a><i class='side-icon fa fa-list'></i><span>Orders</span></a>\n                    </li>\n                    <li>\n                        <a><i class='side-icon fa fa-exchange-alt'></i> <span>Transactions</span></a>\n                    </li>\n                    <li>\n                        <a><i class='side-icon fa fa-shopping-cart'></i> <span>E- Commerce Sites</span></a>\n                    </li> -->\n                    <!-- <li class=\"child-menu\">\n                        <a>Users</a>\n                        <div class=\"menu-wrap\">\n                            <ul>\n                                <li><a>News &amp; Article</a></li>\n                                <li><a>Athletes</a></li>\n                                <li><a>Coach</a></li>\n                                <li><a>video</a></li>\n\n                            </ul>\n                        </div>\n                    </li> -->\n                </ul>\n            </perfect-scrollbar>\n        </div>\n        <div class=\"main-container dashboard\">\n            <div class=\"main-title\">\n                <h1>{{topHeading}}</h1>\n            </div>\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import {NgModule} from'@angular/core'\nimport { CommonModule } from '@angular/common';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\n@NgModule({\n    imports: [\n      CommonModule,\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule\n  \n    \n    ],\n    exports: [\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule\n    ],\n    declarations: []\n  })\n  export class MaterialModule { }","export class AdvertisementModel{\n    public _id:string;\n    public advertiseId:string;\n    public name:string;\n    public mainContent:string;\n    public phone: number;\n\n    constructor(){}\n}","export class CookiesModel {\n    public _id: string;\n    public email: string;\n    public token: string;\n    public profilePic: any;\n    public contact: string;\n\n    constructor(user: any) {\n        this._id = user._id;\n        this.email = user.email;\n        this.token = user.token;\n        this.profilePic = user.profilePic;\n        this.contact = user.contact;\n    }\n}\n","export class LoginModel{\n    constructor(\n        public email:string,\n        public password:string\n    )\n    {\n\n    }\n}","export class SideNavigationMain {\n    constructor(public id: string,\n        public title: string,\n        public url: string,\n        public icon: string,\n        public status: string,\n        public type: string,\n        public urlTitleList: Array<SideNavigationUrlTitle>,\n        public activeicon:any) {\n    }\n}\n\n\nexport class SideNavigationUrlTitle {\n    constructor(public url: string,\n        public title: string) {\n    }\n}","import { Injectable } from '@angular/core';\nimport { MyCookies } from '../utillpackage/my-cookies';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { MyConstants } from '../utillpackage/constant';\nimport { CommonMethods } from '../commonmethod/common-method';\nimport { CookiesModel } from '../modalPackages/cookies';\nimport { AdvertisementModel } from '../modalPackages/advertisement';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminServiceService {\n\n  private loginUrl: string = MyConstants.BASEURL + \"admin/login\";\n  private createAdvertisementUrl: string = MyConstants.BASEURL + \"admin/createAdvertisement\";\n  private updateAdvertisementUrl: string = MyConstants.BASEURL + \"admin/updateAdvertisment\";\n  private deleteAdvertisementUrl: string = MyConstants.BASEURL + \"admin/deleteAdvertisment\";\n  private getAdvertisementUrl: string = MyConstants.BASEURL + \"admin/getAdvertisments?name=\";\n  private userForgotPasswordUrl: string = MyConstants.BASEURL + \"admin/forget-password\";\n  private updateAdminPwdUrl: string = MyConstants.BASEURL + \"admin/updateProfile\";\n\n\n  private userId: string;\n  private token: string;\n  header: HttpHeaders;\n  userIdRequestParam: HttpParams;\n\n  private profilePic = new BehaviorSubject<string>('');\n  readonly currentProfilePic=this.profilePic.asObservable();\n\n  constructor(private http: HttpClient, public cookiesServices: CookieService) { }\n\n\n  setCurrentProfilePic(profilePicUrl:string){\n    this.profilePic.next(profilePicUrl);\n  }\n\n  getCurrentProfilePic(): Observable<string>{\n    return this.profilePic.asObservable();\n  }\n\n  /**\n    * method to set token for header\n    */\n  setHeader() {\n    this.userId = MyCookies.getId(this.cookiesServices);\n    this.token = MyCookies.getToken(this.cookiesServices);\n    this.header = new HttpHeaders().append('token', this.token);\n    this.userIdRequestParam = new HttpParams().set(\"_id\", this.userId);\n  }\n\n  /**\n   * method to login for admin\n   * @param username username to login\n   * @param password password to login\n   */\n  adminLoginAPI(username: string, password: string): Observable<any> {\n    let data: any = {};\n    data.email = username;\n    data.password = password;\n    return this.http.post<any>(this.loginUrl, data)\n      .pipe(map(response => {\n        // login successful if there's a token in thedata response\n        if (response.success && response.data.token) {\n          MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\n          this.profilePic.next(this.cookiesServices.get('profilePic'));\n        }\n        return response;\n      }));\n  }\n\n  /**\n   * method to create new advertisement\n   * @param adData AdvertisementModel\n   */\n  createAdvertisement(adData: AdvertisementModel): Observable<any> {\n    //for setting token in headers\n    this.setHeader();\n    const httpOptions = {\n      headers: this.header\n    };\n    return this.http.post(this.createAdvertisementUrl, adData, httpOptions);\n  }\n\n  /**\n    * method to update advertisement\n    * @param adData AdvertisementModel\n  */\n  updateAdvertisement(adData: AdvertisementModel): Observable<any> {\n    //for setting token in headers\n    this.setHeader();\n    const httpOptions = {\n      headers: this.header\n    };\n    return this.http.patch(this.updateAdvertisementUrl, adData, httpOptions);\n  }\n\n  /**\n    * mw=ethod to create new advertisement\n    * @param advertiseId advertisement Id\n   */\n  deleteAdvertisement(advertiseId: string): Observable<any> {\n    //for setting token in headers\n    this.setHeader();\n    const httpOptions = {\n      headers: this.header\n    };\n    let data: any = {};\n    data.advertiseId = advertiseId;\n    return this.http.patch(this.deleteAdvertisementUrl, data, httpOptions);\n  }\n\n  /**\n    * mw=ethod to create new advertisement\n    * @param searchString string to search in advertisements\n  */\n  getAdvertisement(searchString: string): Observable<any> {\n    //for setting token in headers\n    this.setHeader();\n    const httpOptions = {\n      headers: this.header\n    };\n    let searchurl:string='';\n    searchurl=this.getAdvertisementUrl+searchString;\n    return this.http.get(searchurl, httpOptions);\n  }\n\n  /**\n    * method to update admin details\n    * @param adminDetails admin details to update\n   */\n  updateDetails(adminDetails: any): Observable<any> {\n    //for setting token in headers\n    this.setHeader();\n    const httpOptions = {\n      headers: this.header\n    };\n    return this.http.patch<any>(this.updateAdminPwdUrl, adminDetails, httpOptions).pipe(map(response=>{\n      if (response.success && response.data.token) {\n        MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\n        this.profilePic.next(this.cookiesServices.get('profilePic'));\n      }\n      return response;\n    }));\n\n  }\n\n  /**\n    * method for forgotpassword \n    * @param email email id to send reset link\n  */\n  forgotPassword(email: string): Observable<any> {\n    let data: any = {};\n    data.email = email;\n    return this.http.post<any>(this.userForgotPasswordUrl, data)\n      .pipe(map(data => {\n        return data;\n      }));\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { SideNavigationMain, SideNavigationUrlTitle } from '../modalPackages/sidenavBar';\nimport { CommonMethods } from '../commonmethod/common-method';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SidebarService {\n\n  tag = \"SidebarService\"\n  toggled = false;\n  pageName = \"\"\n  accountType: string\n  menus: Array<SideNavigationMain> = []\n  storeid: string\n  constructor(public ngzone: NgZone, public router: Router, public cookiesservice: CookieService) {\n    this.accountType = \"\"\n  }\n\n\n  /**\n   * \n   * Add Side Bar Into Menu\n   * \n   */\n\n  addSideOption() {\n    this.menus = []\n \n         var pageInnerUrls: Array<SideNavigationUrlTitle> = []\n          this.menus.push(new SideNavigationMain(\"Advertisment\", \"All Advertisments\", '/advertisment', \"fa fa-puzzle-piece\", \"inactive\", \"header\", pageInnerUrls, \"\"));  \n          this.menus.push(new SideNavigationMain(\"View Profile\", \"View Profile\", '/show/profile', \"fa fa-cog\", \"inactive\", \"header\", [], \"\")); \n  }\n\n\n  getMenuList() {\n    this.addSideOption();\n    return this.menus;\n  }\n}\n","export class MyConstants {\n    static BASEURL = \"http://3.21.83.36:8081/api/\";\n    static serverURL = \"http://3.21.83.36:8081\";\n}","import { CookieService } from \"ngx-cookie-service\";\nimport { CommonMethods } from '../commonmethod/common-method';\nimport { CookiesModel } from '../modalPackages/cookies';\n\n\nexport class MyCookies {\n \n    static saveLoginDataInCookies(cookieService: CookieService, cookiesModel:CookiesModel) {\n        cookieService.set('_id',cookiesModel._id,1,'/');\n        cookieService.set('email',cookiesModel.email,1,'/');\n        cookieService.set('token',cookiesModel.token,1,'/');\n        cookieService.set('profilePic',cookiesModel.profilePic,1,'/');\n        cookieService.set('contact',cookiesModel.contact,1,'/');\n        \n    }\n  \n\n    static checkLoginStatus(cookieService: CookieService): boolean {\n        var cookieExists: boolean = cookieService.check('_id');\n        cookieExists = cookieService.get('_id') != \"\";\n        if (cookieExists) {\n            cookieExists = cookieService.check('email');\n            cookieExists = cookieService.get('email') != \"\";\n            if (cookieExists) {\n                cookieExists = cookieService.check('token');\n                cookieExists = cookieService.get('token') != \"\";\n                if (cookieExists) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    static getId(cookieService: CookieService): string {\n        return cookieService.get('_id');\n    }\n    static getEmaild(cookieService: CookieService): string {\n        return cookieService.get('email');\n    }\n    static getToken(cookieService: CookieService): string {\n        return cookieService.get('token');\n    }\n       \n\n    static getExpiryTime() {\n        let date = new Date();\n        date.setDate(date.getDate() +1);\n        return date;\n    }\n\n    static deletecookies(cookieService: CookieService) {\n        cookieService.deleteAll();\n\n    }\n}","\nimport { Router } from '@angular/router';\n\n\nexport class MyRoutingMethods {\n    static gotoLogin(router: Router) {\n        router.navigate(['home']);\n    }\n    static gotoAds(router: Router) {\n        router.navigate(['advertisment']);\n    }\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}