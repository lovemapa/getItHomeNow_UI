{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/commonmethod/common-method.ts","webpack:///src/app/componentPackage/add-adds/add-adds.component.ts","webpack:///src/app/componentPackage/add-adds/add-adds.component.html","webpack:///src/app/componentPackage/dashboard/dashboard.component.ts","webpack:///src/app/componentPackage/dashboard/dashboard.component.html","webpack:///src/app/componentPackage/login/login.component.ts","webpack:///src/app/componentPackage/login/login.component.html","webpack:///src/app/componentPackage/profile-setting-change/profile-setting-change.component.ts","webpack:///src/app/componentPackage/profile-setting-change/profile-setting-change.component.html","webpack:///src/app/componentPackage/show-profile/show-profile.component.ts","webpack:///src/app/componentPackage/show-profile/show-profile.component.html","webpack:///src/app/layout/blank/blank.component.ts","webpack:///src/app/layout/blank/blank.component.html","webpack:///src/app/layout/full/full.component.ts","webpack:///src/app/layout/full/full.component.html","webpack:///src/app/material/material.ts","webpack:///src/app/modalPackages/advertisement.ts","webpack:///src/app/modalPackages/cookies.ts","webpack:///src/app/modalPackages/login.ts","webpack:///src/app/modalPackages/sidenavBar.ts","webpack:///src/app/services/admin-service.service.ts","webpack:///src/app/services/sidebar.service.ts","webpack:///src/app/utillpackage/constant.ts","webpack:///src/app/utillpackage/my-cookies.ts","webpack:///src/app/utillpackage/my-routing-methods.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","AppModule","provide","useValue","declarations","providers","bootstrap","CommonMethods","tag","message","snackBar","open","duration","verticalPosition","horizontalPosition","panelClass","AddAddsComponent","router","adminServiceService","advertisementModel","name","mainContent","mHeading","cHeading","body","phone","contectNo","createAdvertisement","subscribe","response","success","showSuccessDialog","gotoAds","showErrorDialog","DashboardComponent","spinner","cookiesService","modalService","Tag","searchString","adsList","showTable","currentSelectedAdId","methodToCall","nextButton","previousButton","isLoadingPaggition","modalHeading","showbutton","pageNumber","pageLimit","paggination","lastPageNumber","checkLoginMethod","logincheck","checkLoginStatus","getAdvertisment","gotoLogin","searchTerm","show","getAdvertisement","showconsole","JSON","stringify","countDocument","data","length","totalPages","i","state","push","hide","deletecookies","setTimeout","content","contentArray","split","context","modalReference","centered","match","result","reson","reset","close","onclickButton","ad","setSelectedAd","openModal","JoinAndClose","deleteAdvertisement","deletemodal","deleteId","deleteModal","currentSelectedAdModel","_id","mainContentArray","createContent","advertiseId","updateAdvertisement","methodName","updateSelectedAd","pageNumberClick","currentPageNumber","pageNo","status","onKeypressSearch","AddModalFuntion","LoginComponent","loginModel","document","getElementById","type","className","EMAIL_REGEXP","email","trim","test","password","validation","adminLoginAPI","forgotPassword","callLoginApi","CallModalForm","ProfileSettingChangeComponent","newPwd","toString","toUpperCase","confirmPwd","adminDetails","oldPassword","oldPwd","newPassword","updateDetails","updateAdminDetails","ShowProfileComponent","spiner","selectedImageUrl","imageurl","get","serverURL","getEmaild","event","target","files","reader","FileReader","readAsDataURL","onload","innerEvent","FormData","append","setCurrentProfilePic","onSelectFile","showProileModal","BlankComponent","FullComponent","navBarService","ngzone","showprofile","showSideBar","showBackButtun","mobileView","menu","user_Name","getMenuList","events","value","checkAndSetValue","currentProfilePic","profilePicUrl","profilePic","run","topHeading","currentUrl","url","matched","forEach","element","index","toggleButton","navigate","logout","menueToggle","MaterialModule","AdvertisementModel","CookiesModel","user","token","contact","LoginModel","SideNavigationMain","icon","urlTitleList","activeicon","SideNavigationUrlTitle","AdminServiceService","http","cookiesServices","loginUrl","BASEURL","createAdvertisementUrl","updateAdvertisementUrl","deleteAdvertisementUrl","getAdvertisementUrl","userForgotPasswordUrl","updateAdminPwdUrl","asObservable","next","userId","getId","getToken","header","userIdRequestParam","set","username","post","pipe","saveLoginDataInCookies","adData","setHeader","httpOptions","headers","patch","searchurl","providedIn","SidebarService","cookiesservice","toggled","pageName","menus","accountType","pageInnerUrls","addSideOption","MyConstants","MyCookies","cookieService","cookiesModel","getExpiryTime","cookieExists","check","date","Date","setDate","getDate","deleteAll","MyRoutingMethods","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from \"./componentPackage/dashboard/dashboard.component\"\nimport { LoginComponent } from \"./componentPackage/login/login.component\"\nimport { FullComponent } from \"./layout/full/full.component\"\nimport { BlankComponent } from \"./layout/blank/blank.component\"\nimport { AddAddsComponent } from \"./componentPackage/add-adds/add-adds.component\"\nimport { ProfileSettingChangeComponent } from \"./componentPackage/profile-setting-change/profile-setting-change.component\"\nimport{ShowProfileComponent} from\"./componentPackage/show-profile/show-profile.component\"\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: LoginComponent },\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      { path: 'advertisement', component: DashboardComponent },\n      { path: 'add/advertisment', component: AddAddsComponent },\n      { path: 'settings', component: ProfileSettingChangeComponent },\n      { path: 'show/profile', component: ShowProfileComponent },\n\n    ]\n  },\n  {\n    path: '',\n    component: BlankComponent,\n    children: [\n      { path: 'login', component: LoginComponent }\n    ]\n\n  },\n  { path: '**', redirectTo: 'login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GetItHomeNow';\n}\n","<ngx-spinner bdOpacity=0.1 bdColor=\"rgba(209, 127, 161, 0.26)\" size=\"medium\" color=\"#ff586b\" type=\"ball-clip-rotate-pulse\" fullScreen=\"true\">\r\n</ngx-spinner>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './componentPackage/login/login.component';\nimport { DashboardComponent } from './componentPackage/dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialModule } from './material/material';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { LocationStrategy, HashLocationStrategy, DatePipe } from '@angular/common';\nimport { FullComponent } from './layout/full/full.component';\nimport { BlankComponent } from './layout/blank/blank.component';\nimport { AddAddsComponent } from './componentPackage/add-adds/add-adds.component';\nimport { ProfileSettingChangeComponent } from './componentPackage/profile-setting-change/profile-setting-change.component';\nimport { ShowProfileComponent } from './componentPackage/show-profile/show-profile.component';\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    FullComponent,\n    BlankComponent,\n    AddAddsComponent,\n    ProfileSettingChangeComponent,\n    ShowProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    PerfectScrollbarModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    },\n    // { provide: LocationStrategy, useClass: HashLocationStrategy },\n    CookieService,\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport class CommonMethods {\r\n\r\n\r\n\r\n    public static showconsole(tag: string, message: string) {\r\n        // console.log(tag, message);\r\n    }\r\n\r\n\r\n   /*\r\n    *Show Error Dialog Message Common Method\r\n    */\r\n\r\n   static showErrorDialog(snackBar: MatSnackBar, message: string) {\r\n    snackBar.open(message, \"\", {\r\n        duration: 3000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'end',\r\n        panelClass: ['blue-snackbar']\r\n    });\r\n}\r\n\r\n/*\r\n      Show Success Dialog Message Common Method\r\n*/\r\n\r\nstatic showSuccessDialog(snackBar: MatSnackBar, message: string) {\r\n    snackBar.open(message, \"\", {\r\n        duration: 3000,\r\n        panelClass: ['sucess-snackbar'],\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'end',\r\n    });\r\n}\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\n\r\n@Component({\r\n  selector: 'app-add-adds',\r\n  templateUrl: './add-adds.component.html',\r\n  styleUrls: ['./add-adds.component.css']\r\n})\r\nexport class AddAddsComponent implements OnInit {\r\n\r\n  public title:string;\r\n  public mHeading:string;\r\n  public cHeading:string;\r\n  public body:string;\r\n  public contectNo:number;\r\n  public advertisementModel:AdvertisementModel;\r\n\r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createAdvertisement(){\r\n    \r\n    this.advertisementModel= new AdvertisementModel();\r\n    this.advertisementModel.name=this.title;\r\n    this.advertisementModel.mainContent=this.mHeading+\"%\"+this.cHeading+\"%\"+this.body;\r\n    this.advertisementModel.phone=this.contectNo;\r\n    this.adminServiceService.createAdvertisement(this.advertisementModel).subscribe(response =>{\r\n      if(response.success){\r\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n        MyRoutingMethods.gotoAds(this.router);\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n      }\r\n    })\r\n\r\n    \r\n  }\r\n}\r\n","<div class=\"add-more\" routerLink=\"/advertisment\">\r\n    <i class=\"mdi mdi-arrow-left\"></i>\r\n</div>\r\n<div class=\"form-outer\">\r\n    <div class=\"form-element\">\r\n        <label for=\"title\">Title</label>\r\n        <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"mHeading\">Main Heading</label>\r\n        <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"cHeading\">Sub Heading</label>\r\n        <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"body\">Body</label>\r\n        <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"contectNo\">Contact Number</label>\r\n        <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\" style=\"text-align: center;\">\r\n        <a (click)=\"createAdvertisement()\" class=\"submit-btn\">Submit</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  Tag = \"DashboardComponent\"\r\n  public searchString: string = \"\";\r\n  modalReference: NgbModalRef;\r\n  public adsList: Array<AdvertisementModel> = [];\r\n  showTable = false\r\n  public title: string;\r\n  public mHeading: string;\r\n  public cHeading: string;\r\n  public body: string;\r\n  public contectNo: number;\r\n  public modalHeading: string;\r\n  public showbutton: string;\r\n  public currentSelectedAdId: string = '';\r\n  public methodToCall: string = '';\r\n  public nextButton = false;\r\n  public previousButton = false;\r\n  public pageNumber: number;\r\n  public pageLimit: number;\r\n  public paggination: Array<any>;\r\n  public isLoadingPaggition = false;\r\n  public lastPageNumber:number;\r\n\r\n\r\n  constructor(public snackBar: MatSnackBar, public spinner: NgxSpinnerService,\r\n    public cookiesService: CookieService, public router: Router, public adminServiceService: AdminServiceService, public modalService: NgbModal) {\r\n    this.showTable = false;\r\n    this.adsList = [];\r\n    this.modalHeading = \"\";\r\n    this.showbutton = \"\";\r\n    this.previousButton = true;\r\n    this.nextButton = false;\r\n    this.pageNumber = 1;\r\n    this.pageLimit = 6;\r\n    this.paggination = [];\r\n    this.lastPageNumber=0;\r\n    this.isLoadingPaggition = false\r\n\r\n    this.checkLoginMethod();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      this.getAdvertisment();\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n  /**GEt AdverTisMEnt List */\r\n  getAdvertisment(searchTerm?: string) {\r\n    this.adsList = [];\r\n    // if (searchTerm || searchTerm == '') {\r\n    //   this.searchString = searchTerm;\r\n    // }\r\n\r\n    //  if(this.searchString.trim().length !=0)\r\n    //  {\r\n    //   this.isLoadingPaggition=false;\r\n    //  }\r\n    this.spinner.show();\r\n    this.adminServiceService.getAdvertisement(this.searchString, this.pageNumber).subscribe(response => {\r\n      if (response.success) {\r\n        CommonMethods.showconsole(this.Tag, \"array:- \" + JSON.stringify(response.countDocument))\r\n        this.adsList = response.data;\r\n        this.showTable = true;\r\n        if (this.adsList.length == 0) {\r\n          this.showTable = false;\r\n        }\r\n\r\n        if (this.pageNumber == response.totalPages) {\r\n          this.nextButton = true\r\n        }\r\n        else {\r\n          this.nextButton = false\r\n        }\r\n        this.lastPageNumber=response.totalPages;\r\n        if (this.isLoadingPaggition == false) {\r\n          this.paggination=[];\r\n           CommonMethods.showconsole(this.Tag,\"Function Is woking Once Time \")\r\n          \r\n          for (var i = 0; i < response.totalPages; i++) {\r\n            // CommonMethods.showconsole(this.Tag, \"Paggition \" + i)\r\n            var state = false;\r\n            if (i == 0) {\r\n              state = true\r\n            }\r\n            this.paggination.push({\r\n              \"pageNo\": i + 1,\r\n              \"status\": state\r\n            });\r\n          }\r\n          this.isLoadingPaggition = true;\r\n        }\r\n        CommonMethods.showconsole(this.Tag, \"Array :- \" + JSON.stringify(this.paggination))\r\n        this.spinner.hide();\r\n      }\r\n      else {\r\n        MyCookies.deletecookies(this.cookiesService);\r\n        MyRoutingMethods.gotoLogin(this.router);\r\n      }\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n\r\n  clickOnshowAll(){\r\n    this.pageNumber=1;\r\n    this.searchString=\"\"\r\n     CommonMethods.showconsole(this.Tag,\"isLoadingPaggition:- \"+this.isLoadingPaggition)\r\n     this.isLoadingPaggition=false;\r\n     CommonMethods.showconsole(this.Tag,\"after isLoadingPaggition:- \"+this.isLoadingPaggition)\r\n    this.getAdvertisment(\"\");\r\n  }\r\n  \r\nonKeypressSearch(){\r\n  this.pageNumber=1;\r\n  this.isLoadingPaggition=false;\r\n  CommonMethods.showconsole(this.Tag,\"after isLoadingPaggition:- Function IS working  \"+this.isLoadingPaggition)\r\n  this.getAdvertisment(\"\");\r\n}\r\n\r\n  createContent(content: string): Array<string> {\r\n    let contentArray: Array<string> = content.split(\"%\");\r\n    return contentArray;\r\n  }\r\n\r\n  /**\r\n    * \r\n    * Open  Modal Function \r\n    */\r\n  openModal(content, context?: string) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    if (this.modalHeading.match(\"Update Advertisement\")) {\r\n      this.modalReference.result.then((result) => { }, (reson) => {\r\n        this.reset();\r\n      });\r\n    }\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n  deleteModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n\r\n  JoinAndClose() {\r\n    this.modalReference.close();\r\n    this.reset();\r\n  }\r\n\r\n\r\n  /**CallIng Modal Function */\r\n\r\n  AddModalFuntion(content, onclickButton: string, ad?: AdvertisementModel) {\r\n    if (onclickButton == 'addAddvertisment') {\r\n      this.modalHeading = \"Add Advertisement\";\r\n      this.showbutton = \"Add\";\r\n      this.methodToCall = 'createAdvertisement()';\r\n    } else {\r\n      this.setSelectedAd(ad);\r\n      this.modalHeading = \"Update Advertisement\";\r\n      this.showbutton = \"Update\";\r\n      this.methodToCall = 'updateSelectedAd()';\r\n    }\r\n    this.openModal(content);\r\n  }\r\n\r\n\r\n  /**\r\n   * method to Add Advertismnet\r\n   */\r\n  createAdvertisement() {\r\n    this.spinner.show();\r\n    let advertisementModel = new AdvertisementModel();\r\n    advertisementModel.name = this.title;\r\n    advertisementModel.mainContent = this.mHeading + \"%\" + this.cHeading + \"%\" + this.body;\r\n    advertisementModel.phone = this.contectNo;\r\n    this.adminServiceService.createAdvertisement(advertisementModel).subscribe(response => {\r\n      if (response.success) {\r\n        this.JoinAndClose()\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.reset();\r\n        setTimeout(() => {\r\n          this.isLoadingPaggition=false;\r\n          this.getAdvertisment()\r\n        }, 100);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to delete selected Ad\r\n   */\r\n  deleteAdvertisement() {\r\n    this.spinner.show();\r\n    this.adminServiceService.deleteAdvertisement(this.currentSelectedAdId).subscribe(response => {\r\n      this.JoinAndClose()\r\n      if (response.success) {\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.isLoadingPaggition=false\r\n        this.getAdvertisment();\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to call delete modal\r\n   * @param deletemodal delete modal content\r\n   * @param deleteId selected ad id\r\n   */\r\n  deleteModalCall(deletemodal, deleteId: any) {\r\n    this.deleteModal(deletemodal);\r\n    this.currentSelectedAdId = deleteId;\r\n  }\r\n\r\n  /**\r\n   * method to reset all variables of add ad modal\r\n   */\r\n  reset() {\r\n    this.title = '';\r\n    this.mHeading = '';\r\n    this.cHeading = '';\r\n    this.body = '';\r\n    this.contectNo = null;\r\n  }\r\n\r\n  /**\r\n   * method to set current selected advertisement\r\n   * @param currentSelectedAdModel selected ad\r\n   */\r\n  setSelectedAd(currentSelectedAdModel: AdvertisementModel) {\r\n    this.currentSelectedAdId = currentSelectedAdModel._id;\r\n    this.title = currentSelectedAdModel.name;\r\n    let mainContentArray = this.createContent(currentSelectedAdModel.mainContent);\r\n    this.mHeading = mainContentArray[0];\r\n    this.cHeading = mainContentArray[1];\r\n    this.body = mainContentArray[2];\r\n    this.contectNo = currentSelectedAdModel.phone;\r\n  }\r\n\r\n  /**\r\n   * method to update current selected Ad\r\n   */\r\n  updateSelectedAd() {\r\n    this.spinner.show();\r\n    let advertisementModel = new AdvertisementModel();\r\n    advertisementModel.advertiseId = this.currentSelectedAdId;\r\n    advertisementModel.name = this.title;\r\n    advertisementModel.mainContent = this.mHeading + \"%\" + this.cHeading + \"%\" + this.body;\r\n    advertisementModel.phone = this.contectNo;\r\n    this.adminServiceService.updateAdvertisement(advertisementModel).subscribe(response => {\r\n      if (response.success) {\r\n        this.JoinAndClose()\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.reset();\r\n        setTimeout(() => {\r\n          this.getAdvertisment()\r\n        }, 100);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to call specific method\r\n   * @param methodName method to call\r\n   */\r\n  hitRequiredFunction(methodName: string) {\r\n    if (methodName != '') {\r\n      if (methodName.match('update')) {\r\n        this.updateSelectedAd();\r\n      }\r\n      else {\r\n        this.createAdvertisement();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *   Previous  Click Function\r\n   */\r\n  previous() {\r\n    this.pageNumber--;\r\n    this.pageNumberClick(this.pageNumber)\r\n  }\r\n  /**\r\n   * End\r\n   */\r\n  /**\r\n   *   next  Click Function\r\n   */\r\n  next() {\r\n    this.previousButton = false;\r\n    this.pageNumber++;\r\n    this.pageNumberClick(this.pageNumber)\r\n  }\r\n  /**\r\n   * End\r\n   */\r\n\r\n  /**\r\n   * Page Number Click\r\n   */\r\n  pageNumberClick(currentPageNumber: number) {\r\n    this.pageNumber = 0;\r\n\r\n    CommonMethods.showconsole(this.Tag, \"Page Number :- \" + currentPageNumber);\r\n    for (var i = 0; i < this.paggination.length; i++) {\r\n      if (this.paggination[i].pageNo == currentPageNumber) {\r\n        this.paggination[i].status = true;\r\n      } else {\r\n        this.paggination[i].status = false;\r\n      }\r\n    }\r\n    this.pageNumber = currentPageNumber;\r\n     if(this.pageNumber == 1)\r\n     {\r\n        this.previousButton =true;\r\n     }else{\r\n      this.previousButton =false;\r\n     }\r\n      if(this.pageNumber  ==  this.lastPageNumber)\r\n      {\r\n        this.nextButton = true\r\n      }else{\r\n        this.nextButton=false\r\n      }\r\n    this.getAdvertisment();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"header-left-outer\">\r\n    <div class=\"getAllAd-btn\" *ngIf=\"searchString != ''\">\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"clickOnshowAll()\">Show All Ads</button>\r\n    </div>\r\n    <div class=\"search-box-outer\">\r\n        <input name=\"searchBar\" id=\"searchBarforAds\" class=\"search-box\" value=\"\" placeholder=\"Search..\" type=\"text\" [(ngModel)]=\"searchString\" (keyup.enter)=\"onKeypressSearch()\" (keyup)=\"onKeypressSearch()\" autocomplete=\"off\">\r\n        <button id=\"search-box-icon\" type=\"submit\" class=\"search btn btn-link text-danger\" (click)=\"onKeypressSearch()\"><i class=\"fa fa-search search-icon\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"!showTable\">\r\n    <h1>No Advertisement Found</h1>\r\n</div>\r\n\r\n<div class=\"card-wrapper\" *ngIf=\"showTable\">\r\n\r\n    <div class=\" card\" *ngFor=\"let ads of adsList\">\r\n        <div class=\"topStatic\">\r\n            <h2>Store,Estate,Garage Sales</h2>\r\n\r\n            <div class=\"Image\">\r\n                <img src=\"./assets/imgs/logoSmall3.png\" alt=\"\" class=\"imageLogo\">\r\n            </div>\r\n            <div class=\"bodyCenter\">\r\n                <h4 class=\"big-stuff\">{{ads.name}}</h4>\r\n                <ng-container>\r\n                    <p class=\"title-1\">{{createContent(ads.mainContent)[0]}} </p>\r\n                    <p class=\"title-2\">{{createContent(ads.mainContent)[1]}}</p>\r\n                    <p class=\"title-3\" [ngStyle]=\"createContent(ads.mainContent)[2].length > 25 && { 'font-size': '9px' }\">{{createContent(ads.mainContent)[2]}}</p>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div class=\"imageBottom\">\r\n                <img src=\"./assets/imgs/contact.png\" alt=\"\">\r\n            </div>\r\n            <p class=\"bottom-title\">The Uber® of Moving Stuff</p>\r\n        </div>\r\n        <div class=\"action-btn\">\r\n            <div class=\"btns\">\r\n                <a class=\"edit-btn\" (click)=\"AddModalFuntion(content,'updateAddvertisment',ads)\"> <i class=\"mdi mdi-border-color\"></i></a>\r\n                <a class=\"delete-btn\" (click)=\"deleteModalCall(deleteModal,ads._id)\"><i class=\"mdi mdi-delete\"></i></a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!-- Pagination -->\r\n<div class=\"pagination-wrapper\" *ngIf=\"adsList.length != 0\">\r\n    <button class=\"paginate_btn previous \" (click)=\"previous()\" [ngClass]=\"{'disabled': previousButton}\" [disabled]=\"previousButton\">Previous</button>\r\n    <a class=\"paginate_btn \" *ngFor=\" let page of paggination\" [ngClass]=\"{'current': page.status == true}\" (click)=\"pageNumberClick(page.pageNo)\">{{page.pageNo}}</a>\r\n    <button class=\"paginate_btn next\" (click)=\"next()\" [ngClass]=\"{'disabled': nextButton}\" [disabled]=\"nextButton\">Next</button>\r\n</div>\r\n\r\n\r\n<div class=\"add-more\" (click)=\"AddModalFuntion(content,'addAddvertisment')\">\r\n    <i class=\"mdi mdi-plus\"></i>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>{{modalHeading}}</h3>\r\n        </div>\r\n        <div class=\"form-outer\">\r\n            <div class=\"form-element\">\r\n                <label for=\"title\">Title</label>\r\n                <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-element\">\r\n                    <label for=\"mHeading\">Main Heading</label>\r\n                    <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"form-element\">\r\n                    <label for=\"cHeading\">Sub Heading</label>\r\n                    <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-element\">\r\n                    <label for=\"body\">Body</label>\r\n                    <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"form-element\">\r\n                    <label for=\"contectNo\">Contact Number</label>\r\n                    <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-element submit-btn\" style=\"text-align: center;\">\r\n                <a (click)=\"hitRequiredFunction(methodToCall)\" class=\"submit-btn\">{{showbutton}}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #deleteModal>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <!-- <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div> -->\r\n        <div class=\"title-heading\">\r\n            <h3>Delete</h3>\r\n        </div>\r\n        <div class=\"modal-content\">\r\n            <p>Are you sure, you want to Delete?</p>\r\n            <div class=\"modal-btns\">\r\n                <a class=\"cancel-btn\" (click)=\"JoinAndClose()\">Cancel</a>\r\n                <a class=\"submit-btn\" (click)=\"deleteAdvertisement()\">Submit</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from 'src/app/modalPackages/login';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  Tag = \"LoginComponent\";\r\n  modalReference: NgbModalRef\r\n  loginModel: LoginModel;\r\n\r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\r\n    public spinner: NgxSpinnerService, public cookiesService: CookieService, public modalService: NgbModal) {\r\n    this.loginModel = new LoginModel(\"\", \"\");\r\n    this.checkLoginMethod();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      MyRoutingMethods.gotoAds(this.router);\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * show Password Icon Click Function \r\n   */\r\n  showPassword() {\r\n    if ((document.getElementById('password') as HTMLInputElement).type == 'password') {\r\n      (document.getElementById('password') as HTMLInputElement).type = 'text';\r\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye\";\r\n    }\r\n    else {\r\n      (document.getElementById('password') as HTMLInputElement).type = \"password\";\r\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye-slash\";\r\n    }\r\n  }\r\n  /**\r\n   end\r\n   */\r\n\r\n  /**\r\n   * Validation Function\r\n   */\r\n  validation() {\r\n    var EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.loginModel.email.trim().length == 0) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter email\");\r\n      return false;\r\n    } else if (!EMAIL_REGEXP.test(this.loginModel.email.trim())) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Email is invalid\");\r\n      return false;\r\n    } else if (this.loginModel.password.trim().length == 0) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter password\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n   * Login Api Call \r\n   */\r\n  callLoginApi() {\r\n    if (this.validation()) {\r\n      this.spinner.show();\r\n      this.adminServiceService.adminLoginAPI(this.loginModel.email, this.loginModel.password).subscribe(response => {\r\n        if (response.success) {\r\n          this.spinner.hide();\r\n          // Calling Routing Function Goto TO Dashborad \r\n          MyRoutingMethods.gotoAds(this.router);\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n        * \r\n        * Open  Modal Function \r\n        */\r\n  openModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n  JoinAndClose() {\r\n    this.modalReference.close();\r\n  }\r\n\r\n  /**CallIng Modal Function */\r\n  CallModalForm(content) {\r\n    this.openModal(content)\r\n  }\r\n\r\n  /**\r\n   * method to send revocery mail on specific email\r\n   * @param email email to send recovery link\r\n   */\r\n  forgetPassword(email:string){\r\n    this.spinner.show();\r\n    this.adminServiceService.forgotPassword(email).subscribe(response => {\r\n      this.spinner.hide();\r\n      this.JoinAndClose();\r\n      if (response.success) {\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<main id=\"wrapper\">\r\n\r\n    <div class=\"backlayer\">\r\n        <div class=\"layerLeft\"\r\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\r\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\r\n        </div>\r\n        <div class=\"layerRight\"\r\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\r\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\r\n        </div>\r\n    </div>\r\n    <div class=\"panels\">\r\n        <div class=\"innerpanel\">\r\n            <!-- <div class=\"left\">\r\n                <div class=\"formcontainer\">\r\n                    <h5>Forgot your password? </h5>\r\n                    <h6>Enter The E-mail Address Associated With Your Account.</h6>\r\n                    <form class=\"web_form\" action=\"\">\r\n                        <div class=\"field_control fieldicon mail\">\r\n                            <label class=\"field_label\">Email <span class=\"mandatory\">*</span></label>\r\n                            <div class=\"field_cover\">\r\n                                <input type=\"text\">\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <a href=\"\" class=\"circlebutton\">Sign In</a>\r\n                        <a id=\"moveright\" href=\"javascript:void(0)\" class=\"linkright linkslide\">Back to Login</a>\r\n                    </form>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"right\">\r\n                <div class=\"formcontainer\">\r\n                    <h5>login</h5>\r\n                    <!-- <h6>Lorem ipsum dolor sit amet, consectetur adipiscing</h6> -->\r\n\r\n                    <form class=\"login100-form\">\r\n                        <div class=\"field\">\r\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\" \" autocomplete=\"off\"\r\n                                [(ngModel)]=\"loginModel.email\" required>\r\n                            <label for=\"email\">Email</label>\r\n                            <i class=\"fieldIcon fa fa-user\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <input type=\"password\" name=\"password\" id=password placeholder=\" \"\r\n                                [(ngModel)]=\"loginModel.password\" required>\r\n                            <label for=\"password\">Password</label>\r\n                            <i class=\"fieldIcon fa fa-lock\" aria-hidden=\"true\"></i>\r\n                            <!-- <i class=\"fieldIcon password \" id=\"myiconconfirm\" aria-hidden=\"true\" (click)=\"showPassword()\"></i> -->\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <button type=\"submit\" class=\"submit button\" (click)=\"callLoginApi()\"><span></span>Log\r\n                                In</button>\r\n                        </div>\r\n\r\n                        <div class=\"field d-flex spcl-field\">\r\n                            <!-- <label class=\"checkbox leftlabel\"><input type=\"checkbox\"><i\r\n                                    class=\"input-helper\"></i>Remember me</label> -->\r\n                            <a id=\"moveleft\" href=\"javascript:void(0)\" class=\"linkright linkslide\"\r\n                                (click)=\"CallModalForm(content)\">Forgot Password?</a>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>Forgot Password?</h3>\r\n            <!-- <p>Lorem ipsum dolor sit amet, consectetur adipisicing</p> -->\r\n        </div>\r\n        <form class=\"login100-form\">\r\n            <div class=\"form-element\">\r\n                <label>Email</label>\r\n                <input placeholder=\"Enter Email\" type=\"email\" #inputEmail autocomplete=\"off\" />\r\n            </div>\r\n\r\n            <div class=\"field\" style=\"margin-bottom: 0;\">\r\n                <button type=\"submit\" class=\"submit button\" (click)=\"forgetPassword(inputEmail.value)\">Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\n\r\n@Component({\r\n  selector: 'app-profile-setting-change',\r\n  templateUrl: './profile-setting-change.component.html',\r\n  styleUrls: ['./profile-setting-change.component.css']\r\n})\r\nexport class ProfileSettingChangeComponent implements OnInit {\r\n\r\n  public oldPwd:string;\r\n  public newPwd:string;\r\n  public confirmPwd:string;\r\n\r\n  \r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateAdminDetails(){\r\n    if(this.newPwd.toString()!='' && this.newPwd.toUpperCase().match(this.confirmPwd.toUpperCase())){\r\n      let adminDetails:any={};\r\n      adminDetails.oldPassword=this.oldPwd;\r\n      adminDetails.newPassword=this.newPwd;\r\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\r\n        if(response.success){\r\n          CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n          MyRoutingMethods.gotoAds(this.router);\r\n        }\r\n        else{\r\n          CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n        }\r\n      });\r\n    }else{\r\n      if(this.newPwd.toString()==''){\r\n        CommonMethods.showErrorDialog(this.snackBar,\"Password field can't be empty.\")\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,\"Oops, that's not the same password as the first one\");\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"form-outer\">\r\n    <div class=\"form-element\">\r\n        <label for=\"oldpassword\">Old Password</label>\r\n        <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"npassword\">New password</label>\r\n        <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"cpassword\">Confirm password</label>\r\n        <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\" style=\"text-align: center;\">\r\n        <a (click)=\"updateAdminDetails()\" class=\"submit-btn\">Submit</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookiesModel } from 'src/app/modalPackages/cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyConstants } from 'src/app/utillpackage/constant';\r\n\r\n@Component({\r\n  selector: 'app-show-profile',\r\n  templateUrl: './show-profile.component.html',\r\n  styleUrls: ['./show-profile.component.css']\r\n})\r\nexport class ShowProfileComponent implements OnInit {\r\n\r\n  Tag=\"ShowProfileComponent\";\r\n  imageurl:any;\r\n  modalReference:NgbModalRef;\r\n  selectedImageUrl:File ;\r\n  public oldPwd:string;\r\n  public newPwd:string;\r\n  public confirmPwd:string;\r\n\r\n  public userName:string;\r\n  public email:string;\r\n\r\n  constructor(public modalService:NgbModal,public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\r\n    public cookiesService:CookieService,public spiner:NgxSpinnerService) {\r\n    this.selectedImageUrl=null;\r\n    this.checkLoginMethod();\r\n    this.imageurl=this.cookiesService.get('profilePic');\r\n    if(!this.imageurl){\r\n      this.imageurl=\"./assets/imgs/default-admin.jpg\";\r\n    }\r\n    else{\r\n      this.imageurl=MyConstants.serverURL+this.imageurl;\r\n    }\r\n   }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      this.email=MyCookies.getEmaild(this.cookiesService);\r\n      // this.email=MyCookies\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n\r\n  onSelectFile(event) {\r\n  \r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (innerEvent) => {\r\n        this.imageurl = (<FileReader>innerEvent.target).result;\r\n\r\n        this.selectedImageUrl = event.target.files[0];\r\n        const adminDetails: FormData = new FormData();\r\n        adminDetails.append('file', this.selectedImageUrl, this.selectedImageUrl.name);\r\n        this.updateAdminDetails(adminDetails);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n        * \r\n        * Open  Modal Function \r\n        */\r\n  openModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    this.modalReference.result.then((result) => { }, (reson) => {\r\n      this.reset();\r\n    });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n  JoinAndClose() {\r\n    if (this.modalReference) {\r\n      this.reset();\r\n      this.modalReference.close();\r\n    }\r\n  }\r\n\r\n  showProileModal(content){\r\n    this.openModal(content);\r\n  }\r\n\r\n\r\n  // CHnage Proilfe \r\n  updatePassword() {\r\n    if (this.newPwd.toString() != '' && this.newPwd.toUpperCase() == this.confirmPwd.toUpperCase()\r\n      &&  this.oldPwd !='' && this.newPwd.toUpperCase() != this.oldPwd.toUpperCase()) {\r\n      this.spiner.show();\r\n      let adminDetails: any = {};\r\n      adminDetails.oldPassword = this.oldPwd;\r\n      adminDetails.newPassword = this.newPwd;\r\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response => {\r\n        this.JoinAndClose();\r\n        if (response.success) {\r\n          this.spiner.hide();\r\n          CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n          MyCookies.deletecookies(this.cookiesService);\r\n          MyRoutingMethods.gotoLogin(this.router);\r\n          CommonMethods.showSuccessDialog(this.snackBar, response.message + \" please Login Again\");\r\n        }\r\n        else {\r\n          this.spiner.hide();\r\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n        }\r\n      });\r\n    } else {\r\n      if (this.newPwd.toString() == '') {\r\n        CommonMethods.showErrorDialog(this.snackBar, \"Password field can't be empty.\");\r\n      }\r\n      else if(this.newPwd.toUpperCase() == this.oldPwd.toUpperCase()){\r\n        CommonMethods.showErrorDialog(this.snackBar, \"New Password can't be same as Old Password\");\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar, \"Oops, New Password & Confirm Password are not same\");\r\n      }\r\n      this.JoinAndClose();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * method to update admin details\r\n   * @param adminDetails updated admin details object\r\n   */\r\n  updateAdminDetails(adminDetails:any){\r\n    this.spiner.show();\r\n    this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\r\n      this.spiner.hide();\r\n      if(response.success){\r\n        this.adminServiceService.setCurrentProfilePic(this.cookiesService.get('profilePic'));\r\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to reset all variables of admindetail object\r\n   */\r\n  reset(){\r\n    this.oldPwd = '';\r\n    this.newPwd = '';\r\n    this.confirmPwd = '';\r\n  }\r\n}\r\n","<div class=\"card profile-section\">\r\n    <div class=\"card-body\">\r\n        <label class=\"cabinet center-block\">\r\n            <figure>\r\n            <img src=\"{{imageurl}}\" class=\"gambar img-responsive img-thumbnail\" id=\"item-img-output\" />\r\n          <figcaption><i class=\"fa fa-camera\"></i></figcaption>\r\n         </figure>\r\n        <input type=\"file\" class=\"item-img file center-block\"  (change)=\"onSelectFile($event)\" accept=\"image/*\" name=\"file_photo\"/>\r\n        </label>\r\n    </div>\r\n\r\n    <div class=\"profile-name\">\r\n        <h2>Admin</h2>\r\n        <p>{{email}}</p>\r\n        <a (click)=\"showProileModal(content)\">Change Password</a>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>Change Password</h3>\r\n        </div>\r\n        <div class=\"form-outer\">\r\n            <div class=\"form-element\">\r\n                <label for=\"oldpassword\">Old Password</label>\r\n                <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\">\r\n                <label for=\"npassword\">New password</label>\r\n                <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\">\r\n                <label for=\"cpassword\">Confirm password</label>\r\n                <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" (keyup.enter)=\"updatePassword()\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\" style=\"text-align: center;\">\r\n                <a (click)=\"updatePassword()\" class=\"submit-btn\">Submit</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: ['./blank.component.css']\n})\nexport class BlankComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet>\n</router-outlet>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { SidebarService } from 'src/app/services/sidebar.service';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { MyConstants } from 'src/app/utillpackage/constant';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\n\r\n@Component({\r\n  selector: 'app-full',\r\n  templateUrl: './full.component.html',\r\n  styleUrls: ['./full.component.css']\r\n})\r\nexport class FullComponent implements OnInit {\r\n\r\n  Tag = \"FullComponent\";\r\n\r\n  showprofile = false;\r\n  showSideBar = false;\r\n  topHeading: string;\r\n  menu: Array<any>;\r\n  user_Name: any;\r\n  showBackButtun = false;\r\n  searchTerm: string = \"\";\r\n  profilePic: any;\r\n  mobileView = false;\r\n\r\n  constructor(public router: Router, public cookiesService: CookieService, public navBarService: SidebarService, public adminServiceService: AdminServiceService,\r\n    public ngzone: NgZone) {\r\n    this.showprofile = false\r\n    this.showSideBar = false\r\n    this.showBackButtun = false;\r\n    this.mobileView = false;\r\n    this.menu = [];\r\n    this.user_Name = \"\";\r\n    // Set Menu List From Side Bar Service \r\n    this.menu = this.navBarService.getMenuList()\r\n    this.router.events.subscribe(value => {\r\n      if (value instanceof NavigationEnd) {\r\n\r\n        this.checkAndSetValue()\r\n\r\n      }\r\n    });\r\n    this.user_Name = \"Admin\"\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.adminServiceService.currentProfilePic.subscribe(profilePicUrl => {\r\n      this.profilePic = profilePicUrl;\r\n      if (profilePicUrl == '') {\r\n        this.profilePic = this.cookiesService.get('profilePic');\r\n      }\r\n      if (!this.profilePic) {\r\n        this.profilePic = \"./assets/imgs/default-admin.jpg\";\r\n      }\r\n      else {\r\n        this.profilePic = MyConstants.serverURL + this.profilePic;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Profile Dialog Show Image\r\n   * \r\n   */\r\n  showProflieDown() {\r\n    this.showprofile = !this.showprofile;\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n * \r\n * Menue Toggle Image\r\n * \r\n */\r\n\r\n  menueToggle() {\r\n    if (this.showSideBar == false) {\r\n      this.showSideBar = true;\r\n    } else {\r\n      this.showSideBar = false;\r\n    }\r\n  }\r\n\r\n  toggleButton() {\r\n    this.mobileView = !this.mobileView;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * Get Top HEading Function \r\n   * \r\n   */\r\n\r\n  checkAndSetValue() {\r\n    this.showprofile = false\r\n    this.ngzone.run(() => {\r\n      this.topHeading = \"\"\r\n      var currentUrl = this.router.url\r\n      var matched = false\r\n      this.menu.forEach((element, index) => {\r\n        element.status = \"inactive\"\r\n        if (!matched) {\r\n          if (currentUrl == element.url) {\r\n            matched = true\r\n            // this.toggleButton();\r\n            this.topHeading = element.title\r\n            element.status = \"active\"\r\n\r\n          }\r\n        } else {\r\n          element.status = \"inactive\"\r\n        }\r\n        // element.urlTitleList.forEach(pageInnerUrls => {\r\n        //   if (!matched) {\r\n        //     if (currentUrl.includes(pageInnerUrls.url)) {\r\n        //       matched = true\r\n        //       this.topHeading = pageInnerUrls.title\r\n        //       element.status = \"active\"\r\n        //     }\r\n        //   }\r\n        // });\r\n        // element.innerOptions.forEach((innerElement, innerIndex) => {\r\n        //   innerElement.status = \"inactive\"\r\n\r\n\r\n        //   if (!matched) {\r\n\r\n        //     if (currentUrl == \"/\" + innerElement.url) {\r\n        //       matched = true\r\n        //       this.topHeading = innerElement.title\r\n        //       innerElement.status = \"active\"\r\n        //       element.status = \"active\"\r\n        //       this.currentInnermenuIndex = innerIndex\r\n        //       this.currentmenuIndex = index\r\n        //       // CommonMethods.showconsole(this.Tag, \"Status:- \" + element.status)\r\n        //       CommonMethods.showconsole(this.Tag, \"Current main Menu Index :- \" + index)\r\n        //       CommonMethods.showconsole(this.Tag, \"Current main inner Menu Index :- \" + innerIndex)\r\n        //     }\r\n        //   }\r\n        //   innerElement.urlTitleList.forEach(pageInnerUrls => {\r\n        //     if (!matched) {\r\n        //       if (currentUrl.includes(pageInnerUrls.url) ) {\r\n        //         matched = true\r\n        //         this.topHeading = pageInnerUrls.title\r\n        //         innerElement.status = \"active\"\r\n        //         element.status = \"active\"\r\n        //       }\r\n        //     }\r\n        //   });\r\n        // })\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  /**End */\r\n\r\n\r\n\r\n\r\n  gotoRouting(index) {\r\n    this.toggleButton()\r\n    this.router.navigate([this.menu[index].url]);\r\n    this.topHeading = this.menu[index].title\r\n  }\r\n  // gotoSubmenuPage(oterindex: number, innerindex: number) {\r\n\r\n  //   this.router.navigate(['/' + this.menus[oterindex].innerOptions[innerindex].url])\r\n  //   this.topHeading = this.menus[oterindex].innerOptions[innerindex].title\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Logout Function\r\n   */\r\n  logout() {\r\n    MyCookies.deletecookies(this.cookiesService);\r\n    MyRoutingMethods.gotoLogin(this.router);\r\n  }\r\n  /**End */\r\n\r\n\r\n  /**\r\n   * Toggle Css CHnage \r\n   */\r\n  getCustomCss() {\r\n    if (this.showSideBar == true) {\r\n      return 'fa-toggle-off'\r\n\r\n    } else {\r\n      return 'fa-toggle-on'\r\n    }\r\n  }\r\n\r\n  /**Ng Class Icon Set */\r\n  setNgClass(className) {\r\n    return className;\r\n  }\r\n  /**End */\r\n\r\n}\r\n","<div [ngClass]=\"{'slide': showSideBar}\">\r\n    <div class=\"wrapper\" [ngClass]=\"{'mobile-slide': mobileView}\">\r\n        <div class=\"top-bar\">\r\n            <div class=\"left-section\">\r\n                <div class='left-side-section'>\r\n                    <div class=\"toggle-btn\" (click)=\"toggleButton()\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-section\">\r\n                <ul>\r\n                    <!-- <li>\r\n                        <div class=\"notification\">\r\n                            <div class=\"navdrop-box custom-tooltip\" data-name=\"Notification\">\r\n                                <i class=\"mdi mdi-bell-ring\"></i>\r\n                                <span class=\"count-notification\">21</span>\r\n                            </div>\r\n                            <div class=\"dropdown-menu broadcast-notification\">\r\n                                <div class=\"notification-header\">\r\n                                    <h5>Notifications</h5>\r\n                                    <p>you have <span>21</span> unread Messages</p>\r\n\r\n                                </div>\r\n                                <div class=\"notification-message\">\r\n                                    <ul>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"notification-footer\">\r\n                                    <a href=\"javascript:;\">View All Notifications</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li> -->\r\n                    <li>\r\n                        <div class=\"profile-settings\">\r\n                            <div class=\"navdrop-box\" style=\"display: flex;\r\n                            justify-content: center;\">\r\n                                <img src=\"{{profilePic}}\">\r\n                                <h5 style=\"position: relative;\r\n                                top: 3px;\r\n                                margin: 2px;\r\n                                font-weight: bold;\r\n                                font-size: 16px;\">{{user_Name}}</h5>\r\n                                <i style=\"position: relative;top: 9px;\r\n                                margin-left: 9px;\" class=\"fa fa-chevron-down\"></i>\r\n                            </div>\r\n                            <div class=\"dropdown-menu\">\r\n                                <!-- <h5>{{user_Name}}</h5> -->\r\n                                <a routerLink=\"/show/profile\">View Profile</a>\r\n                                <!-- <a routerLink=\"/settings\">Settings</a> -->\r\n                                <div class=\"dropdown-menu-footer\">\r\n                                    <a (click)=\"logout()\"> Logout </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"side-bar\">\r\n            <div class=\"backlayer-sidebar\" (click)=\"toggleButton()\"></div>\r\n            <div class=\"side-header\">\r\n                <a href=\"\" class=\"logo-text\">\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/Logo_car_black_and_white.png\" /></div>\r\n                    <span class=\"logo-name\">GetItHomeNow</span>\r\n                </a>\r\n                <i class=\"toggle-switch fa \" [ngClass]=\"getCustomCss()\" (click)=\"menueToggle()\"></i>\r\n\r\n                <div class=\"sidebar-header\">\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\r\n                    <a (click)=\"toggleButton()\"><i class=\"fa fa-times\"></i></a>\r\n                </div>\r\n            </div>\r\n            <perfect-scrollbar>\r\n                <ul class=\"nav-bar\">\r\n                    <!-- <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\r\n                        <a>{{menuList.title}}</a>\r\n                    </li> -->\r\n                    <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\r\n                        <a><i class='side-icon' [ngClass]=\"setNgClass(menuList.icon)\"></i>\r\n                            <span>{{menuList.title}}</span></a>\r\n                    </li>\r\n                    <!-- <li class=\"active\">\r\n                        <a><i class='side-icon fa fa-home'></i> <span>Dashboard</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-list'></i><span>Orders</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-exchange-alt'></i> <span>Transactions</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-shopping-cart'></i> <span>E- Commerce Sites</span></a>\r\n                    </li> -->\r\n                    <!-- <li class=\"child-menu\">\r\n                        <a>Users</a>\r\n                        <div class=\"menu-wrap\">\r\n                            <ul>\r\n                                <li><a>News &amp; Article</a></li>\r\n                                <li><a>Athletes</a></li>\r\n                                <li><a>Coach</a></li>\r\n                                <li><a>video</a></li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </li> -->\r\n                </ul>\r\n            </perfect-scrollbar>\r\n        </div>\r\n        <div class=\"main-container dashboard\">\r\n            <div class=\"main-title\">\r\n                <h1>{{topHeading}}</h1>\r\n            </div>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import {NgModule} from'@angular/core'\nimport { CommonModule } from '@angular/common';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n@NgModule({\n    imports: [\n      CommonModule,\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule,\n      MatPaginatorModule\n  \n    \n    ],\n    exports: [\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule,\n      MatPaginatorModule\n    ],\n    declarations: []\n  })\n  export class MaterialModule { }","export class AdvertisementModel{\r\n    public _id:string;\r\n    public advertiseId:string;\r\n    public name:string;\r\n    public mainContent:string;\r\n    public phone: number;\r\n\r\n    constructor(){}\r\n}","export class CookiesModel {\r\n    public _id: string;\r\n    public email: string;\r\n    public token: string;\r\n    public profilePic: any;\r\n    public contact: string;\r\n\r\n    constructor(user: any) {\r\n        this._id = user._id;\r\n        this.email = user.email;\r\n        this.token = user.token;\r\n        this.profilePic = user.profilePic;\r\n        this.contact = user.contact;\r\n    }\r\n}\r\n","export class LoginModel{\r\n    constructor(\r\n        public email:string,\r\n        public password:string\r\n    )\r\n    {\r\n\r\n    }\r\n}","export class SideNavigationMain {\r\n    constructor(public id: string,\r\n        public title: string,\r\n        public url: string,\r\n        public icon: string,\r\n        public status: string,\r\n        public type: string,\r\n        public urlTitleList: Array<SideNavigationUrlTitle>,\r\n        public activeicon:any) {\r\n    }\r\n}\r\n\r\n\r\nexport class SideNavigationUrlTitle {\r\n    constructor(public url: string,\r\n        public title: string) {\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MyCookies } from '../utillpackage/my-cookies';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { MyConstants } from '../utillpackage/constant';\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { CookiesModel } from '../modalPackages/cookies';\r\nimport { AdvertisementModel } from '../modalPackages/advertisement';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminServiceService {\r\n\r\n  private loginUrl: string = MyConstants.BASEURL + \"admin/login\";\r\n  private createAdvertisementUrl: string = MyConstants.BASEURL + \"admin/createAdvertisement\";\r\n  private updateAdvertisementUrl: string = MyConstants.BASEURL + \"admin/updateAdvertisment\";\r\n  private deleteAdvertisementUrl: string = MyConstants.BASEURL + \"admin/deleteAdvertisment\";\r\n  private getAdvertisementUrl: string = MyConstants.BASEURL + \"admin/getAdvertisments?name=\";\r\n  private userForgotPasswordUrl: string = MyConstants.BASEURL + \"admin/forget-password\";\r\n  private updateAdminPwdUrl: string = MyConstants.BASEURL + \"admin/updateProfile\";\r\n\r\n\r\n  private userId: string;\r\n  private token: string;\r\n  header: HttpHeaders;\r\n  userIdRequestParam: HttpParams;\r\n\r\n  private profilePic = new BehaviorSubject<string>('');\r\n  readonly currentProfilePic=this.profilePic.asObservable();\r\n\r\n  constructor(private http: HttpClient, public cookiesServices: CookieService) { }\r\n\r\n\r\n  setCurrentProfilePic(profilePicUrl:string){\r\n    this.profilePic.next(profilePicUrl);\r\n  }\r\n\r\n  getCurrentProfilePic(): Observable<string>{\r\n    return this.profilePic.asObservable();\r\n  }\r\n\r\n  /**\r\n    * method to set token for header\r\n    */\r\n  setHeader() {\r\n    this.userId = MyCookies.getId(this.cookiesServices);\r\n    this.token = MyCookies.getToken(this.cookiesServices);\r\n    this.header = new HttpHeaders().append('token', this.token);\r\n    this.userIdRequestParam = new HttpParams().set(\"_id\", this.userId);\r\n  }\r\n\r\n  /**\r\n   * method to login for admin\r\n   * @param username username to login\r\n   * @param password password to login\r\n   */\r\n  adminLoginAPI(username: string, password: string): Observable<any> {\r\n    let data: any = {};\r\n    data.email = username;\r\n    data.password = password;\r\n    return this.http.post<any>(this.loginUrl, data)\r\n      .pipe(map(response => {\r\n        // login successful if there's a token in thedata response\r\n        if (response.success && response.data.token) {\r\n          MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\r\n          this.profilePic.next(this.cookiesServices.get('profilePic'));\r\n        }\r\n        return response;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * method to create new advertisement\r\n   * @param adData AdvertisementModel\r\n   */\r\n  createAdvertisement(adData: AdvertisementModel): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.post(this.createAdvertisementUrl, adData, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * method to update advertisement\r\n    * @param adData AdvertisementModel\r\n  */\r\n  updateAdvertisement(adData: AdvertisementModel): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.patch(this.updateAdvertisementUrl, adData, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * mw=ethod to create new advertisement\r\n    * @param advertiseId advertisement Id\r\n   */\r\n  deleteAdvertisement(advertiseId: string): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    let data: any = {};\r\n    data.advertiseId = advertiseId;\r\n    return this.http.patch(this.deleteAdvertisementUrl, data, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * mw=ethod to create new advertisement\r\n    * @param searchString string to search in advertisements\r\n  */\r\n  getAdvertisement(searchString:string,pageNo:number): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    let searchurl:string='';\r\n    searchurl=this.getAdvertisementUrl+searchString+\"&page=\"+pageNo;\r\n    return this.http.get(searchurl, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * method to update admin details\r\n    * @param adminDetails admin details to update\r\n   */\r\n  updateDetails(adminDetails: any): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.patch<any>(this.updateAdminPwdUrl, adminDetails, httpOptions).pipe(map(response=>{\r\n      if (response.success && response.data.token) {\r\n        MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\r\n        this.profilePic.next(this.cookiesServices.get('profilePic'));\r\n      }\r\n      return response;\r\n    }));\r\n\r\n  }\r\n\r\n  /**\r\n    * method for forgotpassword \r\n    * @param email email id to send reset link\r\n  */\r\n  forgotPassword(email: string): Observable<any> {\r\n    let data: any = {};\r\n    data.email = email;\r\n    return this.http.post<any>(this.userForgotPasswordUrl, data)\r\n      .pipe(map(data => {\r\n        return data;\r\n      }));\r\n  }\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { SideNavigationMain, SideNavigationUrlTitle } from '../modalPackages/sidenavBar';\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarService {\r\n\r\n  tag = \"SidebarService\"\r\n  toggled = false;\r\n  pageName = \"\"\r\n  accountType: string\r\n  menus: Array<SideNavigationMain> = []\r\n  storeid: string\r\n  constructor(public ngzone: NgZone, public router: Router, public cookiesservice: CookieService) {\r\n    this.accountType = \"\"\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * Add Side Bar Into Menu\r\n   * \r\n   */\r\n\r\n  addSideOption() {\r\n    this.menus = []\r\n \r\n         var pageInnerUrls: Array<SideNavigationUrlTitle> = []\r\n          this.menus.push(new SideNavigationMain(\"Advertisement\", \"All Advertisement\", '/advertisement', \"fa fa-puzzle-piece\", \"inactive\", \"header\", pageInnerUrls, \"\"));  \r\n          this.menus.push(new SideNavigationMain(\"View Profile\", \"View Profile\", '/show/profile', \"fa fa-cog\", \"inactive\", \"header\", [], \"\")); \r\n  }\r\n\r\n\r\n  getMenuList() {\r\n    this.addSideOption();\r\n    return this.menus;\r\n  }\r\n}\r\n","export class MyConstants {\r\n    // static BASEURL = \"http://localhost:8081/api/\";\r\n    // static serverURL = \"http://localhost:8081\";\r\n    static BASEURL = \"http://3.21.83.36:8081/api/\";\r\n    static serverURL = \"http://3.21.83.36:8081\";\r\n}","import { CookieService } from \"ngx-cookie-service\";\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { CookiesModel } from '../modalPackages/cookies';\r\n\r\n\r\nexport class MyCookies {\r\n \r\n    static saveLoginDataInCookies(cookieService: CookieService, cookiesModel:CookiesModel) {\r\n        cookieService.set('_id',cookiesModel._id,this.getExpiryTime(),'');\r\n        cookieService.set('email',cookiesModel.email,this.getExpiryTime(),'');\r\n        cookieService.set('token',cookiesModel.token,this.getExpiryTime(),'');\r\n        cookieService.set('profilePic',cookiesModel.profilePic,this.getExpiryTime(),'');\r\n        cookieService.set('contact',cookiesModel.contact,this.getExpiryTime(),'');\r\n        \r\n    }\r\n  \r\n\r\n    static checkLoginStatus(cookieService: CookieService): boolean {\r\n        var cookieExists: boolean = cookieService.check('_id');\r\n        cookieExists = cookieService.get('_id') != \"\";\r\n        if (cookieExists) {\r\n            cookieExists = cookieService.check('email');\r\n            cookieExists = cookieService.get('email') != \"\";\r\n            if (cookieExists) {\r\n                cookieExists = cookieService.check('token');\r\n                cookieExists = cookieService.get('token') != \"\";\r\n                if (cookieExists) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static getId(cookieService: CookieService): string {\r\n        return cookieService.get('_id');\r\n    }\r\n    static getEmaild(cookieService: CookieService): string {\r\n        return cookieService.get('email');\r\n    }\r\n    static getToken(cookieService: CookieService): string {\r\n        return cookieService.get('token');\r\n    }\r\n       \r\n\r\n    static getExpiryTime() {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() +1);\r\n        return date;\r\n    }\r\n\r\n    static deletecookies(cookieService: CookieService) {\r\n        cookieService.deleteAll();\r\n\r\n    }\r\n}","\nimport { Router } from '@angular/router';\n\n\nexport class MyRoutingMethods {\n    static gotoLogin(router: Router) {\n        router.navigate(['home']);\n    }\n    static gotoAds(router: Router) {\n        router.navigate(['advertisement']);\n    }\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}