{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/commonmethod/common-method.ts","./src/app/componentPackage/add-adds/add-adds.component.ts","./src/app/componentPackage/add-adds/add-adds.component.html","./src/app/componentPackage/dashboard/dashboard.component.ts","./src/app/componentPackage/dashboard/dashboard.component.html","./src/app/componentPackage/login/login.component.ts","./src/app/componentPackage/login/login.component.html","./src/app/componentPackage/profile-setting-change/profile-setting-change.component.ts","./src/app/componentPackage/profile-setting-change/profile-setting-change.component.html","./src/app/componentPackage/show-profile/show-profile.component.ts","./src/app/componentPackage/show-profile/show-profile.component.html","./src/app/layout/blank/blank.component.ts","./src/app/layout/blank/blank.component.html","./src/app/layout/full/full.component.ts","./src/app/layout/full/full.component.html","./src/app/material/material.ts","./src/app/modalPackages/advertisement.ts","./src/app/modalPackages/cookies.ts","./src/app/modalPackages/login.ts","./src/app/modalPackages/sidenavBar.ts","./src/app/services/admin-service.service.ts","./src/app/services/sidebar.service.ts","./src/app/utillpackage/constant.ts","./src/app/utillpackage/my-cookies.ts","./src/app/utillpackage/my-routing-methods.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC8B;AACZ;AACb;AACG;AACkB;AACyC;AACjC;;;AACzF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,sFAAc,EAAE;IAC3C;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAa;QACxB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,kGAAkB,EAAE;YACxD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,8FAAgB,EAAE;YACzD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,uIAA6B,EAAE;YAC9D,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0GAAoB,EAAE;SAE1D;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAc;QACzB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sFAAc,EAAE;SAC7C;KAEF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE;CACpC,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,4EACc;QACd,2EAA+B;;6FDKlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACgC;AACL;AACY;AACpB;AACV;AACH;AACA;AACU;AACE;AAElB;AACI;AACgC;AACtB;AACG;AACkB;AACyC;AAC7B;;AAC9F,MAAM,gCAAgC,GAAoC;IACxE,eAAe,EAAE,IAAI;CACtB,CAAC;AAmCK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAXT;QACT;YACE,OAAO,EAAE,+EAAwB;YACjC,QAAQ,EAAE,gCAAgC;SAC3C;QACD,EAAE,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAE;QAC7D,iEAAa;QACb,yDAAQ;KACT,YApBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,6EAAsB;YACtB,kEAAc;YACd,0DAAW;YACX,kEAAmB;YACnB,6DAAgB;YAChB,qEAAgB;YAChB,oEAAS;SACV;mIAYU,SAAS,mBAhClB,2DAAY;QACZ,sFAAc;QACd,kGAAkB;QAClB,0EAAa;QACb,6EAAc;QACd,+FAAgB;QAChB,wIAA6B;QAC7B,2GAAoB,aAGpB,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,6EAAsB;QACtB,kEAAc;QACd,0DAAW;QACX,kEAAmB;QACnB,6DAAgB;QAChB,qEAAgB;QAChB,oEAAS;6FAaA,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sFAAc;oBACd,kGAAkB;oBAClB,0EAAa;oBACb,6EAAc;oBACd,+FAAgB;oBAChB,wIAA6B;oBAC7B,2GAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,6EAAsB;oBACtB,kEAAc;oBACd,0DAAW;oBACX,kEAAmB;oBACnB,6DAAgB;oBAChB,qEAAgB;oBAChB,oEAAS;iBACV;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,+EAAwB;wBACjC,QAAQ,EAAE,gCAAgC;qBAC3C;oBACD,EAAE,OAAO,EAAE,iEAAgB,EAAE,QAAQ,EAAE,qEAAoB,EAAE;oBAC7D,iEAAa;oBACb,yDAAQ;iBACT;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACzDD;AAAA;AAAO,MAAM,aAAa;IAIf,MAAM,CAAC,WAAW,CAAC,GAAW,EAAE,OAAe;QAClD,6BAA6B;IACjC,CAAC;IAGF;;OAEG;IAEH,MAAM,CAAC,eAAe,CAAC,QAAqB,EAAE,OAAe;QAC5D,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE;YACvB,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,KAAK;YACvB,kBAAkB,EAAE,KAAK;YACzB,UAAU,EAAE,CAAC,eAAe,CAAC;SAChC,CAAC,CAAC;IACP,CAAC;IAED;;MAEE;IAEF,MAAM,CAAC,iBAAiB,CAAC,QAAqB,EAAE,OAAe;QAC3D,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,EAAE;YACvB,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,CAAC,iBAAiB,CAAC;YAC/B,gBAAgB,EAAE,KAAK;YACvB,kBAAkB,EAAE,KAAK;SAC5B,CAAC,CAAC;IACP,CAAC;CAGA;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIuB;AACN;AACQ;;;;;;AAOpE,MAAM,gBAAgB;IAS3B,YAAmB,QAAqB,EAAS,MAAc,EAAS,mBAAwC;QAA7F,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAI,CAAC;IAErH,QAAQ;IACR,CAAC;IAED,mBAAmB;QAEjB,IAAI,CAAC,kBAAkB,GAAE,IAAI,sFAAkB,EAAE,CAAC;QAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAC,IAAI,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,GAAC,IAAI,CAAC,IAAI,CAAC;QAClF,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAC,IAAI,CAAC,SAAS,CAAC;QAC7C,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzF,IAAG,QAAQ,CAAC,OAAO,EAAC;gBAClB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAChE,wFAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvC;iBACG;gBACF,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC;IAGJ,CAAC;;gFA/BU,gBAAgB;gGAAhB,gBAAgB;QCb7B,yEACI;QAAA,kEAAkC;QACtC,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EAAmB;QAAA,gEAAK;QAAA,4DAAQ;QAChC,2EACJ;QADsD,mLAAmB;QAArE,4DACJ;QAAA,4DAAM;QACN,yEACI;QAAA,2EAAsB;QAAA,uEAAY;QAAA,4DAAQ;QAC1C,4EACJ;QADqC,uLAAsB;QAAvD,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,4EAAsB;QAAA,uEAAW;QAAA,4DAAQ;QACzC,4EACJ;QADqC,uLAAsB;QAAvD,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAkB;QAAA,gEAAI;QAAA,4DAAQ;QAC9B,6EACJ;QADiC,mLAAkB;QAA/C,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,6EAAuB;QAAA,0EAAc;QAAA,4DAAQ;QAC7C,6EACJ;QADqC,wLAAuB;QAAxD,4DACJ;QAAA,4DAAM;QACN,2EACI;QAAA,yEAAsD;QAAnD,oIAAS,yBAAqB,IAAC;QAAoB,kEAAM;QAAA,4DAAI;QACpE,4DAAM;QACV,4DAAM;;QArBoD,0DAAmB;QAAnB,8EAAmB;QAIpC,0DAAsB;QAAtB,iFAAsB;QAItB,0DAAsB;QAAtB,iFAAsB;QAI1B,0DAAkB;QAAlB,6EAAkB;QAId,0DAAuB;QAAvB,kFAAuB;;6FDTnD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIuB;AACN;AACQ;AAEf;;;;;;;;;;;;ICPxD,0EACI;IAAA,6EAAgF;IAA3B,2TAA0B;IAAC,uEAAY;IAAA,4DAAS;IACzG,4DAAM;;;IAOV,sEACI;IAAA,qEAAI;IAAA,iFAAsB;IAAA,4DAAK;IACnC,4DAAM;;;;;IAIF,0EACI;IAAA,0EACI;IAAA,qEAAI;IAAA,oFAAyB;IAAA,4DAAK;IAElC,0EACI;IAAA,qEACJ;IAAA,4DAAM;IACN,0EACI;IAAA,yEAAsB;IAAA,uDAAY;IAAA,4DAAK;IACvC,wEACI;IAAA,yEAAmB;IAAA,wDAAsC;IAAA,4DAAI;IAC7D,yEAAmB;IAAA,wDAAqC;IAAA,4DAAI;IAC5D,yEAAuG;IAAA,wDAAqC;IAAA,4DAAI;IACpJ,qEAAe;IACnB,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,sEACJ;IAAA,4DAAM;IACN,yEAAwB;IAAA,0FAAyB;IAAA,4DAAI;IACzD,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,yEAAkF;IAA9D,4aAAiC,qBAAqB,cAAM;IAAE,oEAAoC;IAAA,4DAAI;IAC1H,yEAAqE;IAA/C,4bAA8C;IAAC,oEAA8B;IAAA,4DAAI;IAC3G,4DAAM;IACV,4DAAM;IAEV,4DAAM;;;;IArB4B,0DAAY;IAAZ,6EAAY;IAEX,0DAAsC;IAAtC,wHAAsC;IACtC,0DAAqC;IAArC,8GAAqC;IACrC,0DAAmF;IAAnF,uMAAmF;IAAC,0DAAqC;IAArC,8GAAqC;;;IAdhK,0EAEI;IAAA,sHACI;IA6BR,4DAAM;;;IA9BiB,0DAA2B;IAA3B,mFAA2B;;;;;IAkC9C,wEAA+I;IAAvC,8WAAsC;IAAC,uDAAe;IAAA,4DAAI;;;IAAvG,mKAA4C;IAAwC,0DAAe;IAAf,gFAAe;;;;;IAFlK,0EACI;IAAA,6EAAiI;IAA1F,wTAAoB;IAAsE,mEAAQ;IAAA,4DAAS;IAClJ,iHAA+I;IAC/I,6EAAgH;IAA9E,oTAAgB;IAA8D,+DAAI;IAAA,4DAAS;IACjI,4DAAM;;;IAH0D,0DAAwC;IAAxC,iKAAwC;IAC3E,0DAAiC;IAAjC,uFAAiC;IACP,0DAAoC;IAApC,6JAAoC;;;;IAWvF,0EACI;IAAA,0EAAiD;IAAzB,kUAAwB;IAAC,mEAA2B;IAAA,4DAAM;IAClF,0EACI;IAAA,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IAC7B,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,4EAAmB;IAAA,gEAAK;IAAA,4DAAQ;IAChC,6EACJ;IADsD,2VAAmB;IAArE,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAsB;IAAA,wEAAY;IAAA,4DAAQ;IAC1C,6EACJ;IADqC,8VAAsB;IAAvD,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,6EAAsB;IAAA,uEAAW;IAAA,4DAAQ;IACzC,6EACJ;IADqC,8VAAsB;IAAvD,4DACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EACI;IAAA,2EACI;IAAA,6EAAkB;IAAA,gEAAI;IAAA,4DAAQ;IAC9B,6EACJ;IADiC,0VAAkB;IAA/C,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,6EAAuB;IAAA,0EAAc;IAAA,4DAAQ;IAC7C,6EACJ;IADqC,+VAAuB;IAAxD,4DACJ;IAAA,4DAAM;IACV,4DAAM;IAEN,2EACI;IAAA,yEAAkE;IAA/D,4VAA2C;IAAoB,wDAAc;IAAA,4DAAI;IACxF,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAhCM,0DAAgB;IAAhB,oFAAgB;IAKkC,0DAAmB;IAAnB,iFAAmB;IAKhC,0DAAsB;IAAtB,oFAAsB;IAItB,0DAAsB;IAAtB,oFAAsB;IAM1B,0DAAkB;IAAlB,gFAAkB;IAId,0DAAuB;IAAvB,qFAAuB;IAKM,0DAAc;IAAd,kFAAc;;;;IAQ5F,0EACI;IACA,0EACI;IAAA,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IACnB,4DAAM;IACN,0EACI;IAAA,oEAAG;IAAA,4FAAiC;IAAA,4DAAI;IACxC,0EACI;IAAA,wEAA+C;IAAzB,gUAAwB;IAAC,iEAAM;IAAA,4DAAI;IACzD,yEAAsD;IAAhC,wUAA+B;IAAC,kEAAM;IAAA,4DAAI;IACpE,4DAAM;IACV,4DAAM;IACV,4DAAM;;ADjGH,MAAM,kBAAkB;IAwB7B,YAAmB,QAAqB,EAAS,OAA0B,EAClE,cAA6B,EAAS,MAAc,EAAS,mBAAwC,EAAS,YAAsB;QAD1H,aAAQ,GAAR,QAAQ,CAAa;QAAS,YAAO,GAAP,OAAO,CAAmB;QAClE,mBAAc,GAAd,cAAc,CAAe;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAS,iBAAY,GAAZ,YAAY,CAAU;QAxB7I,QAAG,GAAG,oBAAoB;QACnB,iBAAY,GAAW,EAAE,CAAC;QAE1B,YAAO,GAA8B,EAAE,CAAC;QAC/C,cAAS,GAAG,KAAK;QAQV,wBAAmB,GAAW,EAAE,CAAC;QACjC,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QAIvB,uBAAkB,GAAG,KAAK,CAAC;QAMhC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,GAAC,CAAC,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,KAAK;QAE/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ;IAER,CAAC;IAED,iBAAiB;IACjB,gBAAgB;QACd,IAAI,UAAU,GAAG,yEAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;aAAM;YACL,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;IACH,CAAC;IAED,2BAA2B;IAC3B,eAAe,CAAC,UAAmB;QACjC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,wCAAwC;QACxC,oCAAoC;QACpC,IAAI;QAEJ,2CAA2C;QAC3C,KAAK;QACL,mCAAmC;QACnC,KAAK;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjG,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBACxF,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;gBAED,IAAI,IAAI,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,EAAE;oBAC1C,IAAI,CAAC,UAAU,GAAG,IAAI;iBACvB;qBACI;oBACH,IAAI,CAAC,UAAU,GAAG,KAAK;iBACxB;gBACD,IAAI,CAAC,cAAc,GAAC,QAAQ,CAAC,UAAU,CAAC;gBACxC,IAAI,IAAI,CAAC,kBAAkB,IAAI,KAAK,EAAE;oBACpC,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;oBACnB,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC,+BAA+B,CAAC;oBAEpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;wBAC5C,wDAAwD;wBACxD,IAAI,KAAK,GAAG,KAAK,CAAC;wBAClB,IAAI,CAAC,IAAI,CAAC,EAAE;4BACV,KAAK,GAAG,IAAI;yBACb;wBACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;4BACpB,QAAQ,EAAE,CAAC,GAAG,CAAC;4BACf,QAAQ,EAAE,KAAK;yBAChB,CAAC,CAAC;qBACJ;oBACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAChC;gBACD,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACnF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;aACrB;iBACI;gBACH,yEAAS,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC7C,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACzC;YACD,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,EAAE,GAAG,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;QAClB,IAAI,CAAC,YAAY,GAAC,EAAE;QACnB,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC,uBAAuB,GAAC,IAAI,CAAC,kBAAkB,CAAC;QACnF,IAAI,CAAC,kBAAkB,GAAC,KAAK,CAAC;QAC9B,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC,6BAA6B,GAAC,IAAI,CAAC,kBAAkB,CAAC;QAC1F,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAEH,gBAAgB;QACd,IAAI,CAAC,UAAU,GAAC,CAAC,CAAC;QAClB,IAAI,CAAC,kBAAkB,GAAC,KAAK,CAAC;QAC9B,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAC,kDAAkD,GAAC,IAAI,CAAC,kBAAkB,CAAC;QAC9G,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAEC,aAAa,CAAC,OAAe;QAC3B,IAAI,YAAY,GAAkB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;;QAGI;IACJ,SAAS,CAAC,OAAO,EAAE,OAAgB;QACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE;YACnD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;gBACzD,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;SACJ;QACD,8EAA8E;IAChF,CAAC;IACD,WAAW,CAAC,OAAO;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,8EAA8E;IAChF,CAAC;IAED;;;OAGG;IAEH,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAGD,4BAA4B;IAE5B,eAAe,CAAC,OAAO,EAAE,aAAqB,EAAE,EAAuB;QACrE,IAAI,aAAa,IAAI,kBAAkB,EAAE;YACvC,IAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;SAC1C;QACD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAGD;;OAEG;IACH,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,kBAAkB,GAAG,IAAI,sFAAkB,EAAE,CAAC;QAClD,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACvF,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpF,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,IAAI,CAAC,YAAY,EAAE;gBACnB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,kBAAkB,GAAC,KAAK,CAAC;oBAC9B,IAAI,CAAC,eAAe,EAAE;gBACxB,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;iBACI;gBACH,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC1F,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,CAAC,kBAAkB,GAAC,KAAK;gBAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;iBACI;gBACH,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,WAAW,EAAE,QAAa;QACxC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,sBAA0C;QACtD,IAAI,CAAC,mBAAmB,GAAG,sBAAsB,CAAC,GAAG,CAAC;QACtD,IAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC,IAAI,CAAC;QACzC,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC,KAAK,CAAC;IAChD,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,kBAAkB,GAAG,IAAI,sFAAkB,EAAE,CAAC;QAClD,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAC1D,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACrC,kBAAkB,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACvF,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpF,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,IAAI,CAAC,YAAY,EAAE;gBACnB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;gBACjE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,eAAe,EAAE;gBACxB,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;iBACI;gBACH,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChE;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAC,UAAkB;QACpC,IAAI,UAAU,IAAI,EAAE,EAAE;YACpB,IAAI,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;gBAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBACI;gBACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SACF;IACH,CAAC;IAGD;;OAEG;IACH,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IACD;;OAEG;IACH;;OAEG;IACH,IAAI;QACF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC;IACvC,CAAC;IACD;;OAEG;IAEH;;OAEG;IACH,eAAe,CAAC,iBAAyB;QACvC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,gFAAa,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,iBAAiB,GAAG,iBAAiB,CAAC,CAAC;QAC3E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAChD,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,iBAAiB,EAAE;gBACnD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;aACpC;SACF;QACD,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QACnC,IAAG,IAAI,CAAC,UAAU,IAAI,CAAC,EACvB;YACG,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC;SAC5B;aAAI;YACJ,IAAI,CAAC,cAAc,GAAE,KAAK,CAAC;SAC3B;QACA,IAAG,IAAI,CAAC,UAAU,IAAM,IAAI,CAAC,cAAc,EAC3C;YACE,IAAI,CAAC,UAAU,GAAG,IAAI;SACvB;aAAI;YACH,IAAI,CAAC,UAAU,GAAC,KAAK;SACtB;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAEzB,CAAC;;oFAlWU,kBAAkB;kGAAlB,kBAAkB;;QCjB/B,yEACI;QAAA,8GACI;QAEJ,yEACI;QAAA,2EACA;QAD4G,4LAA0B,6FAAgB,sBAAkB,IAAlC,iFAA6C,sBAAkB,IAA/D;QAAtI,4DACA;QAAA,4EAAgH;QAA7B,0IAAS,sBAAkB,IAAC;QAAC,kEAAwC;QAAA,4DAAS;QACrK,4DAAM;QAEV,4DAAM;QACN,8GACI;QAGJ,8GAEI;QAgCJ,8GACI;QAMJ,yEACI;QADkB,qRAAS,yBAAwB,kBAAkB,CAAC,IAAC;QACvE,oEAA4B;QAChC,4DAAM;QAIN,8MACI;QAuCJ,8MACI;;QArG0B,0DAA0B;QAA1B,wFAA0B;QAI4D,0DAA0B;QAA1B,qFAA0B;QAKzI,0DAAkB;QAAlB,gFAAkB;QAIG,0DAAiB;QAAjB,+EAAiB;QAkCX,0DAA2B;QAA3B,yFAA2B;;6FD/B9C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACO;AACU;AAEQ;AAIf;;;;;;;;;;;ICmExD,0EACI;IAAA,0EAAiD;IAAzB,8TAAwB;IAAC,mEAA2B;IAAA,4DAAM;IAClF,0EACI;IAAA,qEAAI;IAAA,2EAAgB;IAAA,4DAAK;IAE7B,4DAAM;IACN,2EACI;IAAA,0EACI;IAAA,wEAAO;IAAA,gEAAK;IAAA,4DAAQ;IACpB,4EACJ;IAAA,4DAAM;IAEN,2EACI;IAAA,8EAAuF;IAA3C,0ZAA0C;IAAC,kEAAM;IAAA,4DAAS;IAC1G,4DAAM;IACV,4DAAO;IACX,4DAAM;;AD1EH,MAAM,cAAc;IAMzB,YAAmB,QAAqB,EAAS,MAAc,EAAS,mBAAwC,EACvG,OAA0B,EAAS,cAA6B,EAAS,YAAsB;QADrF,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvG,YAAO,GAAP,OAAO,CAAmB;QAAS,mBAAc,GAAd,cAAc,CAAe;QAAS,iBAAY,GAAZ,YAAY,CAAU;QALxG,QAAG,GAAG,gBAAgB,CAAC;QAMrB,IAAI,CAAC,UAAU,GAAG,IAAI,sEAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,iBAAiB;IACjB,gBAAgB;QACd,IAAI,UAAU,GAAG,yEAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,UAAU,EAAE;YACd,wFAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;aAAM;YACL,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;IACH,CAAC;IAED;;OAEG;IACH,YAAY;QACV,IAAK,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,IAAI,IAAI,UAAU,EAAE;YAC/E,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,IAAI,GAAG,MAAM,CAAC;YACvE,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAsB,CAAC,SAAS,GAAG,WAAW,CAAC;SACxF;aACI;YACF,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAsB,CAAC,IAAI,GAAG,UAAU,CAAC;YAC3E,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAsB,CAAC,SAAS,GAAG,iBAAiB,CAAC;SAC9F;IACH,CAAC;IACD;;OAEG;IAEH;;OAEG;IACH,UAAU;QACR,IAAI,YAAY,GAAG,wJAAwJ,CAAC;QAC5K,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5C,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAC5D,OAAO,KAAK,CAAC;SACd;aAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE;YAC3D,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;YACjE,OAAO,KAAK,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;YACtD,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YAC/D,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IACD,SAAS;IAET;;OAEG;IACH,YAAY;QACV,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC3G,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,8CAA8C;oBAC9C,wFAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACvC;qBACI;oBACH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACpB,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,SAAS;IAET;;;YAGQ;IACR,SAAS,CAAC,OAAO;QACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,8EAA8E;IAChF,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,4BAA4B;IAC5B,aAAa,CAAC,OAAO;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IACzB,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,KAAY;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,QAAQ,CAAC,OAAO,EAAE;gBACpB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aAClE;iBACI;gBACH,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;aAChE;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4EAzHU,cAAc;8FAAd,cAAc;;QCjB3B,0EAEI;QAAA,yEACI;QAAA,yEAEI;QAAA,4EAAqB;QAAA,oEAAsD;QAA3E,4DAAqB;QACzB,4DAAM;QACN,yEAEI;QAAA,4EAAqB;QAAA,oEAAsD;QAA3E,4DAAqB;QACzB,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAkBA,0EACI;QAAA,0EACI;QAAA,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAGd,4EACI;QAAA,2EACI;QAAA,6EAEA;QADI,6LAA8B;QADlC,4DAEA;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,oEAAuD;QAC3D,4DAAM;QAEN,2EACI;QAAA,6EAEA;QADI,gMAAiC;QADrC,4DAEA;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,oEAAuD;QAE3D,4DAAM;QAEN,2EACI;QAAA,8EAAqE;QAAzB,uIAAS,kBAAc,IAAC;QAAC,mEAAa;QAAA,kEAC5E;QAAA,4DAAS;QACnB,4DAAM;QAEN,2EACI;QAEA,yEACqC;QAAjC,iRAAS,uBAAsB,IAAC;QAAC,4EAAgB;QAAA,4DAAI;QAC7D,4DAAM;QACV,4DAAO;QAEX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;QAIP,0MACI;;QAnC4B,2DAA8B;QAA9B,yFAA8B;QAO9B,0DAAiC;QAAjC,4FAAiC;;6FD9BpD,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIiB;AACQ;;;;;;AAOpE,MAAM,6BAA6B;IAOxC,YAAmB,QAAqB,EAAS,MAAc,EAAS,mBAAwC;QAA7F,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAI,CAAC;IAErH,QAAQ;IACR,CAAC;IAED,kBAAkB;QAChB,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAE,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAC;YAC9F,IAAI,YAAY,GAAK,EAAE,CAAC;YACxB,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,MAAM,CAAC;YACrC,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACxE,IAAG,QAAQ,CAAC,OAAO,EAAC;oBAClB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAChE,wFAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACvC;qBACG;oBACF,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAC/D;YACH,CAAC,CAAC,CAAC;SACJ;aAAI;YACH,IAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAE,EAAE,EAAC;gBAC5B,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC,gCAAgC,CAAC;aAC9E;iBACG;gBACF,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC,qDAAqD,CAAC,CAAC;aACpG;SACF;IAEH,CAAC;;0GAnCU,6BAA6B;6GAA7B,6BAA6B;QCZ1C,yEACI;QAAA,yEACI;QAAA,2EAAyB;QAAA,uEAAY;QAAA,4DAAQ;QAC7C,2EACJ;QADuE,iMAAoB;QAAvF,4DACJ;QAAA,4DAAM;QACN,yEACI;QAAA,2EAAuB;QAAA,uEAAY;QAAA,4DAAQ;QAC3C,2EACJ;QADqE,iMAAoB;QAArF,4DACJ;QAAA,4DAAM;QACN,yEACI;QAAA,4EAAuB;QAAA,4EAAgB;QAAA,4DAAQ;QAC/C,4EACJ;QADyE,sMAAwB;QAA7F,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,wEAAqD;QAAlD,iJAAS,wBAAoB,IAAC;QAAoB,kEAAM;QAAA,4DAAI;QACnE,4DAAM;QACV,4DAAM;;QAbqE,0DAAoB;QAApB,+EAAoB;QAItB,0DAAoB;QAApB,+EAAoB;QAIhB,0DAAwB;QAAxB,mFAAwB;;6FDCxF,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKiB;AACQ;AACf;AAIA;;;;;;;;;;;ICSxD,yEACI;IAAA,0EAAiD;IAAzB,oUAAwB;IAAC,mEAA2B;IAAA,4DAAM;IAClF,0EACI;IAAA,qEAAI;IAAA,0EAAe;IAAA,4DAAK;IAC5B,4DAAM;IACN,0EACI;IAAA,0EACI;IAAA,4EAAyB;IAAA,uEAAY;IAAA,4DAAQ;IAC7C,6EACJ;IADuE,8VAAoB;IAAvF,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,6EAAuB;IAAA,wEAAY;IAAA,4DAAQ;IAC3C,6EACJ;IADqE,8VAAoB;IAArF,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,6EAAuB;IAAA,4EAAgB;IAAA,4DAAQ;IAC/C,6EACJ;IADyE,kWAAwB;IAA7F,4DACJ;IAAA,4DAAM;IACN,2EACI;IAAA,yEAAiD;IAA9C,qUAA0B;IAAoB,kEAAM;IAAA,4DAAI;IAC/D,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAdyE,2DAAoB;IAApB,mFAAoB;IAItB,0DAAoB;IAApB,mFAAoB;IAIhB,0DAAwB;IAAxB,uFAAwB;;ADlBtG,MAAM,oBAAoB;IAa/B,YAAmB,YAAqB,EAAQ,QAAqB,EAAS,MAAc,EAAS,mBAAwC,EACpI,cAA4B,EAAQ,MAAwB;QADlD,iBAAY,GAAZ,YAAY,CAAS;QAAQ,aAAQ,GAAR,QAAQ,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QACpI,mBAAc,GAAd,cAAc,CAAc;QAAQ,WAAM,GAAN,MAAM,CAAkB;QAZrE,QAAG,GAAC,sBAAsB,CAAC;QAazB,IAAI,CAAC,gBAAgB,GAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACpD,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAC;YAChB,IAAI,CAAC,QAAQ,GAAC,iCAAiC,CAAC;SACjD;aACG;YACF,IAAI,CAAC,QAAQ,GAAC,yEAAW,CAAC,SAAS,GAAC,IAAI,CAAC,QAAQ,CAAC;SACnD;IACF,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,iBAAiB;IACjB,gBAAgB;QACd,IAAI,UAAU,GAAG,yEAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjE,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,KAAK,GAAC,yEAAS,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACpD,uBAAuB;SACxB;aAAM;YACL,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzC;IACH,CAAC;IAGD,YAAY,CAAC,KAAK;QAEhB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;YACtB,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,GAAG,CAAC,UAAU,EAAE,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAgB,UAAU,CAAC,MAAO,CAAC,MAAM,CAAC;gBAEvD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,YAAY,GAAa,IAAI,QAAQ,EAAE,CAAC;gBAC9C,YAAY,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBAC/E,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;YACxC,CAAC;SACF;IACH,CAAC;IAED;;;YAGQ;IACR,SAAS,CAAC,OAAO;QACf,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;YACzD,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,8EAA8E;IAChF,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,eAAe,CAAC,OAAO;QACrB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAGD,kBAAkB;IAClB,cAAc;QACZ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;eACxF,IAAI,CAAC,MAAM,IAAG,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE;YAChF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,YAAY,GAAQ,EAAE,CAAC;YAC3B,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YACvC,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YACvC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACxE,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACnB,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;oBACjE,yEAAS,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC7C,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxC,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,GAAG,qBAAqB,CAAC,CAAC;iBAC1F;qBACI;oBACH,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBACnB,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;gBAChC,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;aAChF;iBACI,IAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAC;gBAC7D,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,4CAA4C,CAAC,CAAC;aAC5F;iBACG;gBACF,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,oDAAoD,CAAC,CAAC;aACpG;YACD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;IAEH,CAAC;IAED;;;OAGG;IACH,kBAAkB,CAAC,YAAgB;QACjC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAG,QAAQ,CAAC,OAAO,EAAC;gBAClB,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrF,gFAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACjE;iBACG;gBACF,gFAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;;wFAnJU,oBAAoB;oGAApB,oBAAoB;;QClBjC,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,yEACA;QAAA,oEACF;QAAA,6EAAY;QAAA,kEAA4B;QAAA,4DAAa;QACtD,4DAAS;QACV,2EACA;QADuD,mJAAU,wBAAoB,IAAC;QAAtF,4DACA;QAAA,4DAAQ;QACZ,4DAAM;QAEN,yEACI;QAAA,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,qEAAG;QAAA,wDAAS;QAAA,4DAAI;QAChB,wEAAsC;QAAnC,uRAAS,yBAAwB,IAAC;QAAC,2EAAe;QAAA,4DAAI;QAC7D,4DAAM;QACV,4DAAM;QAGN,+MACI;;QAhBa,0DAAkB;QAAlB,qJAAkB;QASxB,0DAAS;QAAT,0EAAS;;6FDKP,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,cAAc;IAEzB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,2EACgB;;6FDMH,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AAGmB;AACf;AACA;;;;;;;;;;;ICiFxC,yEACI;IAD4C,gVAAwB;IACpE,oEAAG;IAAA,mEAA+D;IAC9D,uEAAM;IAAA,uDAAkB;IAAA,4DAAO;IAAA,4DAAI;IAC3C,4DAAK;;;;IAHoE,2KAAoD;IACjG,0DAAqC;IAArC,0GAAqC;IACnD,0DAAkB;IAAlB,mFAAkB;;;;AD3E7C,MAAM,aAAa;IAcxB,YAAmB,MAAc,EAAS,cAA6B,EAAS,aAA6B,EAAS,mBAAwC,EACrJ,MAAc;QADJ,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAe;QAAS,kBAAa,GAAb,aAAa,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAqB;QACrJ,WAAM,GAAN,MAAM,CAAQ;QAbvB,QAAG,GAAG,eAAe,CAAC;QAEtB,gBAAW,GAAG,KAAK,CAAC;QACpB,gBAAW,GAAG,KAAK,CAAC;QAIpB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAW,EAAE,CAAC;QAExB,eAAU,GAAG,KAAK,CAAC;QAIjB,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,uCAAuC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;QAC5C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACnC,IAAI,KAAK,YAAY,6DAAa,EAAE;gBAElC,IAAI,CAAC,gBAAgB,EAAE;aAExB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,OAAO;IAC1B,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE;YACnE,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;YAChC,IAAI,aAAa,IAAI,EAAE,EAAE;gBACvB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;aACzD;YACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC;aACrD;iBACI;gBACH,IAAI,CAAC,UAAU,GAAG,yEAAW,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;aAC3D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;IACvC,CAAC;IACD,SAAS;IAET;;;;KAIC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK,EAAE;YAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IAErC,CAAC;IAGD;;;;OAIG;IAEH,gBAAgB;QACd,IAAI,CAAC,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,EAAE;YACpB,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG;YAChC,IAAI,OAAO,GAAG,KAAK;YACnB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBACnC,OAAO,CAAC,MAAM,GAAG,UAAU;gBAC3B,IAAI,CAAC,OAAO,EAAE;oBACZ,IAAI,UAAU,IAAI,OAAO,CAAC,GAAG,EAAE;wBAC7B,OAAO,GAAG,IAAI;wBACd,uBAAuB;wBACvB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK;wBAC/B,OAAO,CAAC,MAAM,GAAG,QAAQ;qBAE1B;iBACF;qBAAM;oBACL,OAAO,CAAC,MAAM,GAAG,UAAU;iBAC5B;gBACD,kDAAkD;gBAClD,oBAAoB;gBACpB,oDAAoD;gBACpD,uBAAuB;gBACvB,8CAA8C;gBAC9C,kCAAkC;gBAClC,QAAQ;gBACR,MAAM;gBACN,MAAM;gBACN,+DAA+D;gBAC/D,qCAAqC;gBAGrC,oBAAoB;gBAEpB,kDAAkD;gBAClD,uBAAuB;gBACvB,6CAA6C;gBAC7C,uCAAuC;gBACvC,kCAAkC;gBAClC,gDAAgD;gBAChD,sCAAsC;gBACtC,6EAA6E;gBAC7E,mFAAmF;gBACnF,8FAA8F;gBAC9F,QAAQ;gBACR,MAAM;gBACN,yDAAyD;gBACzD,sBAAsB;gBACtB,uDAAuD;gBACvD,yBAAyB;gBACzB,gDAAgD;gBAChD,yCAAyC;gBACzC,oCAAoC;gBACpC,UAAU;gBACV,QAAQ;gBACR,QAAQ;gBACR,KAAK;YACP,CAAC,CAAC;QAEJ,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;IAKT,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,YAAY,EAAE;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK;IAC1C,CAAC;IACD,2DAA2D;IAE3D,qFAAqF;IACrF,2EAA2E;IAC3E,IAAI;IAOJ;;OAEG;IACH,MAAM;QACJ,yEAAS,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7C,wFAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IACD,SAAS;IAGT;;OAEG;IACH,YAAY;QACV,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,EAAE;YAC5B,OAAO,eAAe;SAEvB;aAAM;YACL,OAAO,cAAc;SACtB;IACH,CAAC;IAED,uBAAuB;IACvB,UAAU,CAAC,SAAS;QAClB,OAAO,SAAS,CAAC;IACnB,CAAC;;0EAlMU,aAAa;6FAAb,aAAa;QCf1B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QADoB,kIAAS,kBAAc,IAAC;QAC5C,kEAAa;QACb,kEAAa;QACb,kEAAa;QACjB,4DAAM;QACN,yEAAsB;QAAA,qEAAoC;QAAA,4DAAM;QACpE,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,sEACI;QA4BA,sEACI;QAAA,0EACI;QAAA,2EAEI;QAAA,sEACA;QAAA,0EAIkB;QAAA,wDAAa;QAAA,4DAAK;QACpC,oEACkD;QACtD,4DAAM;QACN,2EACI;QACA,yEAA8B;QAAA,wEAAY;QAAA,4DAAI;QAE9C,2EACI;QAAA,yEAAuB;QAApB,iIAAS,YAAQ,IAAC;QAAE,oEAAO;QAAA,4DAAI;QACtC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EAA8D;QAA/B,mIAAS,kBAAc,IAAC;QAAC,4DAAM;QAC9D,2EACI;QAAA,yEACI;QAAA,0EAAsB;QAAA,sEAAwD;QAAA,4DAAM;QACpF,4EAAwB;QAAA,wEAAY;QAAA,4DAAO;QAC/C,4DAAI;QACJ,yEAAoF;QAA5B,iIAAS,iBAAa,IAAC;QAAC,4DAAI;QAEpF,2EACI;QAAA,0EAAsB;QAAA,qEAAoC;QAAA,4DAAM;QAChE,yEAA4B;QAAzB,iIAAS,kBAAc,IAAC;QAAC,oEAA2B;QAAA,4DAAI;QAC/D,4DAAM;QACV,4DAAM;QACN,qFACI;QAAA,0EACI;QAGA,0GACI;QA2BR,4DAAK;QACT,4DAAoB;QACxB,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,sEAAI;QAAA,wDAAc;QAAA,4DAAK;QAC3B,4DAAM;QACN,4EAA+B;QACnC,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA9HD,2JAAkC;QACd,0DAAwC;QAAxC,0JAAwC;QA8C5B,2DAAoB;QAApB,uJAAoB;QAKP,0DAAa;QAAb,8EAAa;QAwBlB,2DAA0B;QAA1B,uFAA0B;QAY/C,0DAA2C;QAA3C,6EAA2C;QAiC/C,0DAAc;QAAd,+EAAc;;6FD1GrB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACU;AACY;AACF;AACO;AACP;AACK;AACD;AACN;AACU;;AA2BxD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBAzBhB;YACP,4DAAY;YACZ,0EAAgB;YAChB,wEAAe;YACf,+EAAkB;YAClB,wEAAe;YACf,6EAAiB;YACjB,4EAAiB;YACjB,sEAAc;YACd,8EAAkB;SAGnB;QAEC,0EAAgB;QAChB,wEAAe;QACf,+EAAkB;QAClB,wEAAe;QACf,6EAAiB;QACjB,4EAAiB;QACjB,sEAAc;QACd,8EAAkB;mIAIT,cAAc,cAxBvB,4DAAY;QACZ,0EAAgB;QAChB,wEAAe;QACf,+EAAkB;QAClB,wEAAe;QACf,6EAAiB;QACjB,4EAAiB;QACjB,sEAAc;QACd,8EAAkB,aAKlB,0EAAgB;QAChB,wEAAe;QACf,+EAAkB;QAClB,wEAAe;QACf,6EAAiB;QACjB,4EAAiB;QACjB,sEAAc;QACd,8EAAkB;6FAIT,cAAc;cA1B5B,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACP,4DAAY;oBACZ,0EAAgB;oBAChB,wEAAe;oBACf,+EAAkB;oBAClB,wEAAe;oBACf,6EAAiB;oBACjB,4EAAiB;oBACjB,sEAAc;oBACd,8EAAkB;iBAGnB;gBACD,OAAO,EAAE;oBACP,0EAAgB;oBAChB,wEAAe;oBACf,+EAAkB;oBAClB,wEAAe;oBACf,6EAAiB;oBACjB,4EAAiB;oBACjB,sEAAc;oBACd,8EAAkB;iBACnB;gBACD,YAAY,EAAE,EAAE;aACjB;;;;;;;;;;;;;;ACnCH;AAAA;AAAO,MAAM,kBAAkB;IAO3B,gBAAc,CAAC;CAClB;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,YAAY;IAOrB,YAAY,IAAS;QACjB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAChC,CAAC;CACJ;;;;;;;;;;;;;ACdD;AAAA;AAAO,MAAM,UAAU;IACnB,YACW,KAAY,EACZ,QAAe;QADf,UAAK,GAAL,KAAK,CAAO;QACZ,aAAQ,GAAR,QAAQ,CAAO;IAI1B,CAAC;CACJ;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAO,MAAM,kBAAkB;IAC3B,YAAmB,EAAU,EAClB,KAAa,EACb,GAAW,EACX,IAAY,EACZ,MAAc,EACd,IAAY,EACZ,YAA2C,EAC3C,UAAc;QAPN,OAAE,GAAF,EAAE,CAAQ;QAClB,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;QACZ,iBAAY,GAAZ,YAAY,CAA+B;QAC3C,eAAU,GAAV,UAAU,CAAI;IACzB,CAAC;CACJ;AAGM,MAAM,sBAAsB;IAC/B,YAAmB,GAAW,EACnB,KAAa;QADL,QAAG,GAAH,GAAG,CAAQ;QACnB,UAAK,GAAL,KAAK,CAAQ;IACxB,CAAC;CACJ;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACY;AACoB;AACtC;AAEc;AACI;AAEC;;;;AAMjD,MAAM,mBAAmB;IAmB9B,YAAoB,IAAgB,EAAS,eAA8B;QAAvD,SAAI,GAAJ,IAAI,CAAY;QAAS,oBAAe,GAAf,eAAe,CAAe;QAjBnE,aAAQ,GAAW,kEAAW,CAAC,OAAO,GAAG,aAAa,CAAC;QACvD,2BAAsB,GAAW,kEAAW,CAAC,OAAO,GAAG,2BAA2B,CAAC;QACnF,2BAAsB,GAAW,kEAAW,CAAC,OAAO,GAAG,0BAA0B,CAAC;QAClF,2BAAsB,GAAW,kEAAW,CAAC,OAAO,GAAG,0BAA0B,CAAC;QAClF,wBAAmB,GAAW,kEAAW,CAAC,OAAO,GAAG,8BAA8B,CAAC;QACnF,0BAAqB,GAAW,kEAAW,CAAC,OAAO,GAAG,uBAAuB,CAAC;QAC9E,sBAAiB,GAAW,kEAAW,CAAC,OAAO,GAAG,qBAAqB,CAAC;QAQxE,eAAU,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QAC5C,sBAAiB,GAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IAEqB,CAAC;IAGhF,oBAAoB,CAAC,aAAoB;QACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACtC,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACxC,CAAC;IAED;;QAEI;IACJ,SAAS;QACP,IAAI,CAAC,MAAM,GAAG,kEAAS,CAAC,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,kEAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,GAAG,IAAI,gEAAW,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,kBAAkB,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,QAAgB,EAAE,QAAgB;QAC9C,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC;aAC5C,IAAI,CAAC,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACnB,0DAA0D;YAC1D,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;gBAC3C,kEAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,mEAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9D;YACD,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAC,MAA0B;QAC5C,8BAA8B;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAC1E,CAAC;IAED;;;MAGE;IACF,mBAAmB,CAAC,MAA0B;QAC5C,8BAA8B;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAC3E,CAAC;IAED;;;OAGG;IACH,mBAAmB,CAAC,WAAmB;QACrC,8BAA8B;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;QACF,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACzE,CAAC;IAED;;;MAGE;IACF,gBAAgB,CAAC,YAAmB,EAAC,MAAa;QAChD,8BAA8B;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;QACF,IAAI,SAAS,GAAQ,EAAE,CAAC;QACxB,SAAS,GAAC,IAAI,CAAC,mBAAmB,GAAC,YAAY,GAAC,QAAQ,GAAC,MAAM,CAAC;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IAC/C,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,YAAiB;QAC7B,8BAA8B;QAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,MAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,CAAC,MAAM;SACrB,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAM,IAAI,CAAC,iBAAiB,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,QAAQ,GAAE;YAChG,IAAI,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;gBAC3C,kEAAS,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,mEAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9D;YACD,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IAEN,CAAC;IAED;;;MAGE;IACF,cAAc,CAAC,KAAa;QAC1B,IAAI,IAAI,GAAQ,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC;aACzD,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACf,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;sFAnJU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACsC;;;;AAQlF,MAAM,cAAc;IAQzB,YAAmB,MAAc,EAAS,MAAc,EAAS,cAA6B;QAA3E,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAe;QAN9F,QAAG,GAAG,gBAAgB;QACtB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,EAAE;QAEb,UAAK,GAA8B,EAAE;QAGnC,IAAI,CAAC,WAAW,GAAG,EAAE;IACvB,CAAC;IAGD;;;;OAIG;IAEH,aAAa;QACX,IAAI,CAAC,KAAK,GAAG,EAAE;QAEV,IAAI,aAAa,GAAkC,EAAE;QACpD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,4EAAkB,CAAC,eAAe,EAAE,mBAAmB,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,EAAE,CAAC,CAAC,CAAC;QAC/J,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,4EAAkB,CAAC,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5I,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;;4EA/BU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAO,MAAM,WAAW;;AACpB,iDAAiD;AACjD,8CAA8C;AACvC,mBAAO,GAAG,6BAA6B,CAAC;AACxC,qBAAS,GAAG,wBAAwB,CAAC;;;;;;;;;;;;;ACChD;AAAA;AAAO,MAAM,SAAS;IAElB,MAAM,CAAC,sBAAsB,CAAC,aAA4B,EAAE,YAAyB;QACjF,aAAa,CAAC,GAAG,CAAC,KAAK,EAAC,YAAY,CAAC,GAAG,EAAC,IAAI,CAAC,aAAa,EAAE,EAAC,EAAE,CAAC,CAAC;QAClE,aAAa,CAAC,GAAG,CAAC,OAAO,EAAC,YAAY,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAE,EAAC,EAAE,CAAC,CAAC;QACtE,aAAa,CAAC,GAAG,CAAC,OAAO,EAAC,YAAY,CAAC,KAAK,EAAC,IAAI,CAAC,aAAa,EAAE,EAAC,EAAE,CAAC,CAAC;QACtE,aAAa,CAAC,GAAG,CAAC,YAAY,EAAC,YAAY,CAAC,UAAU,EAAC,IAAI,CAAC,aAAa,EAAE,EAAC,EAAE,CAAC,CAAC;QAChF,aAAa,CAAC,GAAG,CAAC,SAAS,EAAC,YAAY,CAAC,OAAO,EAAC,IAAI,CAAC,aAAa,EAAE,EAAC,EAAE,CAAC,CAAC;IAE9E,CAAC;IAGD,MAAM,CAAC,gBAAgB,CAAC,aAA4B;QAChD,IAAI,YAAY,GAAY,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvD,YAAY,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QAC9C,IAAI,YAAY,EAAE;YACd,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5C,YAAY,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YAChD,IAAI,YAAY,EAAE;gBACd,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC5C,YAAY,GAAG,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBAChD,IAAI,YAAY,EAAE;oBACd,OAAO,IAAI,CAAC;iBACf;qBAAM;oBACH,OAAO,KAAK,CAAC;iBAChB;aACJ;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;aAAM;YACH,OAAO,KAAK,CAAC;SAChB;IACL,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,aAA4B;QACrC,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACD,MAAM,CAAC,SAAS,CAAC,aAA4B;QACzC,OAAO,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,QAAQ,CAAC,aAA4B;QACxC,OAAO,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAGD,MAAM,CAAC,aAAa;QAChB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAE,CAAC,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,aAA4B;QAC7C,aAAa,CAAC,SAAS,EAAE,CAAC;IAE9B,CAAC;CACJ;;;;;;;;;;;;;ACxDD;AAAA;AAAO,MAAM,gBAAgB;IACzB,MAAM,CAAC,SAAS,CAAC,MAAc;QAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9B,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,MAAc;QACzB,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IACvC,CAAC;CAEJ;;;;;;;;;;;;;ACZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from \"./componentPackage/dashboard/dashboard.component\"\nimport { LoginComponent } from \"./componentPackage/login/login.component\"\nimport { FullComponent } from \"./layout/full/full.component\"\nimport { BlankComponent } from \"./layout/blank/blank.component\"\nimport { AddAddsComponent } from \"./componentPackage/add-adds/add-adds.component\"\nimport { ProfileSettingChangeComponent } from \"./componentPackage/profile-setting-change/profile-setting-change.component\"\nimport{ShowProfileComponent} from\"./componentPackage/show-profile/show-profile.component\"\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: LoginComponent },\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      { path: 'advertisement', component: DashboardComponent },\n      { path: 'add/advertisment', component: AddAddsComponent },\n      { path: 'settings', component: ProfileSettingChangeComponent },\n      { path: 'show/profile', component: ShowProfileComponent },\n\n    ]\n  },\n  {\n    path: '',\n    component: BlankComponent,\n    children: [\n      { path: 'login', component: LoginComponent }\n    ]\n\n  },\n  { path: '**', redirectTo: 'login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'GetItHomeNow';\n}\n","<ngx-spinner bdOpacity=0.1 bdColor=\"rgba(209, 127, 161, 0.26)\" size=\"medium\" color=\"#ff586b\" type=\"ball-clip-rotate-pulse\" fullScreen=\"true\">\r\n</ngx-spinner>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './componentPackage/login/login.component';\nimport { DashboardComponent } from './componentPackage/dashboard/dashboard.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MaterialModule } from './material/material';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { CookieService } from 'ngx-cookie-service';\nimport { LocationStrategy, HashLocationStrategy, DatePipe } from '@angular/common';\nimport { FullComponent } from './layout/full/full.component';\nimport { BlankComponent } from './layout/blank/blank.component';\nimport { AddAddsComponent } from './componentPackage/add-adds/add-adds.component';\nimport { ProfileSettingChangeComponent } from './componentPackage/profile-setting-change/profile-setting-change.component';\nimport { ShowProfileComponent } from './componentPackage/show-profile/show-profile.component';\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    FullComponent,\n    BlankComponent,\n    AddAddsComponent,\n    ProfileSettingChangeComponent,\n    ShowProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    PerfectScrollbarModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n    },\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    CookieService,\n    DatePipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nexport class CommonMethods {\r\n\r\n\r\n\r\n    public static showconsole(tag: string, message: string) {\r\n        // console.log(tag, message);\r\n    }\r\n\r\n\r\n   /*\r\n    *Show Error Dialog Message Common Method\r\n    */\r\n\r\n   static showErrorDialog(snackBar: MatSnackBar, message: string) {\r\n    snackBar.open(message, \"\", {\r\n        duration: 3000,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'end',\r\n        panelClass: ['blue-snackbar']\r\n    });\r\n}\r\n\r\n/*\r\n      Show Success Dialog Message Common Method\r\n*/\r\n\r\nstatic showSuccessDialog(snackBar: MatSnackBar, message: string) {\r\n    snackBar.open(message, \"\", {\r\n        duration: 3000,\r\n        panelClass: ['sucess-snackbar'],\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'end',\r\n    });\r\n}\r\n\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\n\r\n@Component({\r\n  selector: 'app-add-adds',\r\n  templateUrl: './add-adds.component.html',\r\n  styleUrls: ['./add-adds.component.css']\r\n})\r\nexport class AddAddsComponent implements OnInit {\r\n\r\n  public title:string;\r\n  public mHeading:string;\r\n  public cHeading:string;\r\n  public body:string;\r\n  public contectNo:number;\r\n  public advertisementModel:AdvertisementModel;\r\n\r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createAdvertisement(){\r\n    \r\n    this.advertisementModel= new AdvertisementModel();\r\n    this.advertisementModel.name=this.title;\r\n    this.advertisementModel.mainContent=this.mHeading+\"%\"+this.cHeading+\"%\"+this.body;\r\n    this.advertisementModel.phone=this.contectNo;\r\n    this.adminServiceService.createAdvertisement(this.advertisementModel).subscribe(response =>{\r\n      if(response.success){\r\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n        MyRoutingMethods.gotoAds(this.router);\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n      }\r\n    })\r\n\r\n    \r\n  }\r\n}\r\n","<div class=\"add-more\" routerLink=\"/advertisment\">\r\n    <i class=\"mdi mdi-arrow-left\"></i>\r\n</div>\r\n<div class=\"form-outer\">\r\n    <div class=\"form-element\">\r\n        <label for=\"title\">Title</label>\r\n        <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"mHeading\">Main Heading</label>\r\n        <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"cHeading\">Sub Heading</label>\r\n        <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"body\">Body</label>\r\n        <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"contectNo\">Contact Number</label>\r\n        <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\r\n    </div>\r\n    <div class=\"form-element\" style=\"text-align: center;\">\r\n        <a (click)=\"createAdvertisement()\" class=\"submit-btn\">Submit</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { AdvertisementModel } from 'src/app/modalPackages/advertisement';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  Tag = \"DashboardComponent\"\r\n  public searchString: string = \"\";\r\n  modalReference: NgbModalRef;\r\n  public adsList: Array<AdvertisementModel> = [];\r\n  showTable = false\r\n  public title: string;\r\n  public mHeading: string;\r\n  public cHeading: string;\r\n  public body: string;\r\n  public contectNo: number;\r\n  public modalHeading: string;\r\n  public showbutton: string;\r\n  public currentSelectedAdId: string = '';\r\n  public methodToCall: string = '';\r\n  public nextButton = false;\r\n  public previousButton = false;\r\n  public pageNumber: number;\r\n  public pageLimit: number;\r\n  public paggination: Array<any>;\r\n  public isLoadingPaggition = false;\r\n  public lastPageNumber:number;\r\n\r\n\r\n  constructor(public snackBar: MatSnackBar, public spinner: NgxSpinnerService,\r\n    public cookiesService: CookieService, public router: Router, public adminServiceService: AdminServiceService, public modalService: NgbModal) {\r\n    this.showTable = false;\r\n    this.adsList = [];\r\n    this.modalHeading = \"\";\r\n    this.showbutton = \"\";\r\n    this.previousButton = true;\r\n    this.nextButton = false;\r\n    this.pageNumber = 1;\r\n    this.pageLimit = 6;\r\n    this.paggination = [];\r\n    this.lastPageNumber=0;\r\n    this.isLoadingPaggition = false\r\n\r\n    this.checkLoginMethod();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      this.getAdvertisment();\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n  /**GEt AdverTisMEnt List */\r\n  getAdvertisment(searchTerm?: string) {\r\n    this.adsList = [];\r\n    // if (searchTerm || searchTerm == '') {\r\n    //   this.searchString = searchTerm;\r\n    // }\r\n\r\n    //  if(this.searchString.trim().length !=0)\r\n    //  {\r\n    //   this.isLoadingPaggition=false;\r\n    //  }\r\n    this.spinner.show();\r\n    this.adminServiceService.getAdvertisement(this.searchString, this.pageNumber).subscribe(response => {\r\n      if (response.success) {\r\n        CommonMethods.showconsole(this.Tag, \"array:- \" + JSON.stringify(response.countDocument))\r\n        this.adsList = response.data;\r\n        this.showTable = true;\r\n        if (this.adsList.length == 0) {\r\n          this.showTable = false;\r\n        }\r\n\r\n        if (this.pageNumber == response.totalPages) {\r\n          this.nextButton = true\r\n        }\r\n        else {\r\n          this.nextButton = false\r\n        }\r\n        this.lastPageNumber=response.totalPages;\r\n        if (this.isLoadingPaggition == false) {\r\n          this.paggination=[];\r\n           CommonMethods.showconsole(this.Tag,\"Function Is woking Once Time \")\r\n          \r\n          for (var i = 0; i < response.totalPages; i++) {\r\n            // CommonMethods.showconsole(this.Tag, \"Paggition \" + i)\r\n            var state = false;\r\n            if (i == 0) {\r\n              state = true\r\n            }\r\n            this.paggination.push({\r\n              \"pageNo\": i + 1,\r\n              \"status\": state\r\n            });\r\n          }\r\n          this.isLoadingPaggition = true;\r\n        }\r\n        CommonMethods.showconsole(this.Tag, \"Array :- \" + JSON.stringify(this.paggination))\r\n        this.spinner.hide();\r\n      }\r\n      else {\r\n        MyCookies.deletecookies(this.cookiesService);\r\n        MyRoutingMethods.gotoLogin(this.router);\r\n      }\r\n      setTimeout(() => {\r\n        this.spinner.hide();\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n\r\n  clickOnshowAll(){\r\n    this.pageNumber=1;\r\n    this.searchString=\"\"\r\n     CommonMethods.showconsole(this.Tag,\"isLoadingPaggition:- \"+this.isLoadingPaggition)\r\n     this.isLoadingPaggition=false;\r\n     CommonMethods.showconsole(this.Tag,\"after isLoadingPaggition:- \"+this.isLoadingPaggition)\r\n    this.getAdvertisment(\"\");\r\n  }\r\n  \r\nonKeypressSearch(){\r\n  this.pageNumber=1;\r\n  this.isLoadingPaggition=false;\r\n  CommonMethods.showconsole(this.Tag,\"after isLoadingPaggition:- Function IS working  \"+this.isLoadingPaggition)\r\n  this.getAdvertisment(\"\");\r\n}\r\n\r\n  createContent(content: string): Array<string> {\r\n    let contentArray: Array<string> = content.split(\"%\");\r\n    return contentArray;\r\n  }\r\n\r\n  /**\r\n    * \r\n    * Open  Modal Function \r\n    */\r\n  openModal(content, context?: string) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    if (this.modalHeading.match(\"Update Advertisement\")) {\r\n      this.modalReference.result.then((result) => { }, (reson) => {\r\n        this.reset();\r\n      });\r\n    }\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n  deleteModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n\r\n  JoinAndClose() {\r\n    this.modalReference.close();\r\n    this.reset();\r\n  }\r\n\r\n\r\n  /**CallIng Modal Function */\r\n\r\n  AddModalFuntion(content, onclickButton: string, ad?: AdvertisementModel) {\r\n    if (onclickButton == 'addAddvertisment') {\r\n      this.modalHeading = \"Add Advertisement\";\r\n      this.showbutton = \"Add\";\r\n      this.methodToCall = 'createAdvertisement()';\r\n    } else {\r\n      this.setSelectedAd(ad);\r\n      this.modalHeading = \"Update Advertisement\";\r\n      this.showbutton = \"Update\";\r\n      this.methodToCall = 'updateSelectedAd()';\r\n    }\r\n    this.openModal(content);\r\n  }\r\n\r\n\r\n  /**\r\n   * method to Add Advertismnet\r\n   */\r\n  createAdvertisement() {\r\n    this.spinner.show();\r\n    let advertisementModel = new AdvertisementModel();\r\n    advertisementModel.name = this.title;\r\n    advertisementModel.mainContent = this.mHeading + \"%\" + this.cHeading + \"%\" + this.body;\r\n    advertisementModel.phone = this.contectNo;\r\n    this.adminServiceService.createAdvertisement(advertisementModel).subscribe(response => {\r\n      if (response.success) {\r\n        this.JoinAndClose()\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.reset();\r\n        setTimeout(() => {\r\n          this.isLoadingPaggition=false;\r\n          this.getAdvertisment()\r\n        }, 100);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to delete selected Ad\r\n   */\r\n  deleteAdvertisement() {\r\n    this.spinner.show();\r\n    this.adminServiceService.deleteAdvertisement(this.currentSelectedAdId).subscribe(response => {\r\n      this.JoinAndClose()\r\n      if (response.success) {\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.isLoadingPaggition=false\r\n        this.getAdvertisment();\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to call delete modal\r\n   * @param deletemodal delete modal content\r\n   * @param deleteId selected ad id\r\n   */\r\n  deleteModalCall(deletemodal, deleteId: any) {\r\n    this.deleteModal(deletemodal);\r\n    this.currentSelectedAdId = deleteId;\r\n  }\r\n\r\n  /**\r\n   * method to reset all variables of add ad modal\r\n   */\r\n  reset() {\r\n    this.title = '';\r\n    this.mHeading = '';\r\n    this.cHeading = '';\r\n    this.body = '';\r\n    this.contectNo = null;\r\n  }\r\n\r\n  /**\r\n   * method to set current selected advertisement\r\n   * @param currentSelectedAdModel selected ad\r\n   */\r\n  setSelectedAd(currentSelectedAdModel: AdvertisementModel) {\r\n    this.currentSelectedAdId = currentSelectedAdModel._id;\r\n    this.title = currentSelectedAdModel.name;\r\n    let mainContentArray = this.createContent(currentSelectedAdModel.mainContent);\r\n    this.mHeading = mainContentArray[0];\r\n    this.cHeading = mainContentArray[1];\r\n    this.body = mainContentArray[2];\r\n    this.contectNo = currentSelectedAdModel.phone;\r\n  }\r\n\r\n  /**\r\n   * method to update current selected Ad\r\n   */\r\n  updateSelectedAd() {\r\n    this.spinner.show();\r\n    let advertisementModel = new AdvertisementModel();\r\n    advertisementModel.advertiseId = this.currentSelectedAdId;\r\n    advertisementModel.name = this.title;\r\n    advertisementModel.mainContent = this.mHeading + \"%\" + this.cHeading + \"%\" + this.body;\r\n    advertisementModel.phone = this.contectNo;\r\n    this.adminServiceService.updateAdvertisement(advertisementModel).subscribe(response => {\r\n      if (response.success) {\r\n        this.JoinAndClose()\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n        this.reset();\r\n        setTimeout(() => {\r\n          this.getAdvertisment()\r\n        }, 100);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to call specific method\r\n   * @param methodName method to call\r\n   */\r\n  hitRequiredFunction(methodName: string) {\r\n    if (methodName != '') {\r\n      if (methodName.match('update')) {\r\n        this.updateSelectedAd();\r\n      }\r\n      else {\r\n        this.createAdvertisement();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *   Previous  Click Function\r\n   */\r\n  previous() {\r\n    this.pageNumber--;\r\n    this.pageNumberClick(this.pageNumber)\r\n  }\r\n  /**\r\n   * End\r\n   */\r\n  /**\r\n   *   next  Click Function\r\n   */\r\n  next() {\r\n    this.previousButton = false;\r\n    this.pageNumber++;\r\n    this.pageNumberClick(this.pageNumber)\r\n  }\r\n  /**\r\n   * End\r\n   */\r\n\r\n  /**\r\n   * Page Number Click\r\n   */\r\n  pageNumberClick(currentPageNumber: number) {\r\n    this.pageNumber = 0;\r\n\r\n    CommonMethods.showconsole(this.Tag, \"Page Number :- \" + currentPageNumber);\r\n    for (var i = 0; i < this.paggination.length; i++) {\r\n      if (this.paggination[i].pageNo == currentPageNumber) {\r\n        this.paggination[i].status = true;\r\n      } else {\r\n        this.paggination[i].status = false;\r\n      }\r\n    }\r\n    this.pageNumber = currentPageNumber;\r\n     if(this.pageNumber == 1)\r\n     {\r\n        this.previousButton =true;\r\n     }else{\r\n      this.previousButton =false;\r\n     }\r\n      if(this.pageNumber  ==  this.lastPageNumber)\r\n      {\r\n        this.nextButton = true\r\n      }else{\r\n        this.nextButton=false\r\n      }\r\n    this.getAdvertisment();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"header-left-outer\">\r\n    <div class=\"getAllAd-btn\" *ngIf=\"searchString != ''\">\r\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"clickOnshowAll()\">Show All Ads</button>\r\n    </div>\r\n    <div class=\"search-box-outer\">\r\n        <input name=\"searchBar\" id=\"searchBarforAds\" class=\"search-box\" value=\"\" placeholder=\"Search..\" type=\"text\" [(ngModel)]=\"searchString\" (keyup.enter)=\"onKeypressSearch()\" (keyup)=\"onKeypressSearch()\" autocomplete=\"off\">\r\n        <button id=\"search-box-icon\" type=\"submit\" class=\"search btn btn-link text-danger\" (click)=\"onKeypressSearch()\"><i class=\"fa fa-search search-icon\"></i></button>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"!showTable\">\r\n    <h1>No Advertisement Found</h1>\r\n</div>\r\n\r\n<div class=\"card-wrapper\" *ngIf=\"showTable\">\r\n\r\n    <div class=\" card\" *ngFor=\"let ads of adsList\">\r\n        <div class=\"topStatic\">\r\n            <h2>Store,Estate,Garage Sales</h2>\r\n\r\n            <div class=\"Image\">\r\n                <img src=\"./assets/imgs/logoSmall3.png\" alt=\"\" class=\"imageLogo\">\r\n            </div>\r\n            <div class=\"bodyCenter\">\r\n                <h4 class=\"big-stuff\">{{ads.name}}</h4>\r\n                <ng-container>\r\n                    <p class=\"title-1\">{{createContent(ads.mainContent)[0]}} </p>\r\n                    <p class=\"title-2\">{{createContent(ads.mainContent)[1]}}</p>\r\n                    <p class=\"title-3\" [ngStyle]=\"createContent(ads.mainContent)[2].length > 25 && { 'font-size': '9px' }\">{{createContent(ads.mainContent)[2]}}</p>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"bottom\">\r\n            <div class=\"imageBottom\">\r\n                <img src=\"./assets/imgs/contact.png\" alt=\"\">\r\n            </div>\r\n            <p class=\"bottom-title\">The Uber® of Moving Stuff</p>\r\n        </div>\r\n        <div class=\"action-btn\">\r\n            <div class=\"btns\">\r\n                <a class=\"edit-btn\" (click)=\"AddModalFuntion(content,'updateAddvertisment',ads)\"> <i class=\"mdi mdi-border-color\"></i></a>\r\n                <a class=\"delete-btn\" (click)=\"deleteModalCall(deleteModal,ads._id)\"><i class=\"mdi mdi-delete\"></i></a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<!-- Pagination -->\r\n<div class=\"pagination-wrapper\" *ngIf=\"adsList.length != 0\">\r\n    <button class=\"paginate_btn previous \" (click)=\"previous()\" [ngClass]=\"{'disabled': previousButton}\" [disabled]=\"previousButton\">Previous</button>\r\n    <a class=\"paginate_btn \" *ngFor=\" let page of paggination\" [ngClass]=\"{'current': page.status == true}\" (click)=\"pageNumberClick(page.pageNo)\">{{page.pageNo}}</a>\r\n    <button class=\"paginate_btn next\" (click)=\"next()\" [ngClass]=\"{'disabled': nextButton}\" [disabled]=\"nextButton\">Next</button>\r\n</div>\r\n\r\n\r\n<div class=\"add-more\" (click)=\"AddModalFuntion(content,'addAddvertisment')\">\r\n    <i class=\"mdi mdi-plus\"></i>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>{{modalHeading}}</h3>\r\n        </div>\r\n        <div class=\"form-outer\">\r\n            <div class=\"form-element\">\r\n                <label for=\"title\">Title</label>\r\n                <input placeholder=\"Title\" type=\"text\" id=\"title\" [(ngModel)]=\"title\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-element\">\r\n                    <label for=\"mHeading\">Main Heading</label>\r\n                    <input type=\"text\" id=\"mHeading\" [(ngModel)]=\"mHeading\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"form-element\">\r\n                    <label for=\"cHeading\">Sub Heading</label>\r\n                    <input type=\"text\" id=\"cHeading\" [(ngModel)]=\"cHeading\" autocomplete=\"off\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-element\">\r\n                    <label for=\"body\">Body</label>\r\n                    <input type=\"text\" id=\"body\" [(ngModel)]=\"body\" autocomplete=\"off\" />\r\n                </div>\r\n                <div class=\"form-element\">\r\n                    <label for=\"contectNo\">Contact Number</label>\r\n                    <input type=\"tel\" id=\"contectNo\" [(ngModel)]=\"contectNo\" autocomplete=\"off\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-element submit-btn\" style=\"text-align: center;\">\r\n                <a (click)=\"hitRequiredFunction(methodToCall)\" class=\"submit-btn\">{{showbutton}}</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #deleteModal>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <!-- <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div> -->\r\n        <div class=\"title-heading\">\r\n            <h3>Delete</h3>\r\n        </div>\r\n        <div class=\"modal-content\">\r\n            <p>Are you sure, you want to Delete?</p>\r\n            <div class=\"modal-btns\">\r\n                <a class=\"cancel-btn\" (click)=\"JoinAndClose()\">Cancel</a>\r\n                <a class=\"submit-btn\" (click)=\"deleteAdvertisement()\">Submit</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { LoginModel } from 'src/app/modalPackages/login';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  Tag = \"LoginComponent\";\r\n  modalReference: NgbModalRef\r\n  loginModel: LoginModel;\r\n\r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\r\n    public spinner: NgxSpinnerService, public cookiesService: CookieService, public modalService: NgbModal) {\r\n    this.loginModel = new LoginModel(\"\", \"\");\r\n    this.checkLoginMethod();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      MyRoutingMethods.gotoAds(this.router);\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * show Password Icon Click Function \r\n   */\r\n  showPassword() {\r\n    if ((document.getElementById('password') as HTMLInputElement).type == 'password') {\r\n      (document.getElementById('password') as HTMLInputElement).type = 'text';\r\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye\";\r\n    }\r\n    else {\r\n      (document.getElementById('password') as HTMLInputElement).type = \"password\";\r\n      (document.getElementById('myiconconfirm') as HTMLInputElement).className = \"fa fa-eye-slash\";\r\n    }\r\n  }\r\n  /**\r\n   end\r\n   */\r\n\r\n  /**\r\n   * Validation Function\r\n   */\r\n  validation() {\r\n    var EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.loginModel.email.trim().length == 0) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter email\");\r\n      return false;\r\n    } else if (!EMAIL_REGEXP.test(this.loginModel.email.trim())) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Email is invalid\");\r\n      return false;\r\n    } else if (this.loginModel.password.trim().length == 0) {\r\n      CommonMethods.showErrorDialog(this.snackBar, \"Enter password\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n   * Login Api Call \r\n   */\r\n  callLoginApi() {\r\n    if (this.validation()) {\r\n      this.spinner.show();\r\n      this.adminServiceService.adminLoginAPI(this.loginModel.email, this.loginModel.password).subscribe(response => {\r\n        if (response.success) {\r\n          this.spinner.hide();\r\n          // Calling Routing Function Goto TO Dashborad \r\n          MyRoutingMethods.gotoAds(this.router);\r\n        }\r\n        else {\r\n          this.spinner.hide();\r\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n        * \r\n        * Open  Modal Function \r\n        */\r\n  openModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n  JoinAndClose() {\r\n    this.modalReference.close();\r\n  }\r\n\r\n  /**CallIng Modal Function */\r\n  CallModalForm(content) {\r\n    this.openModal(content)\r\n  }\r\n\r\n  /**\r\n   * method to send revocery mail on specific email\r\n   * @param email email to send recovery link\r\n   */\r\n  forgetPassword(email:string){\r\n    this.spinner.show();\r\n    this.adminServiceService.forgotPassword(email).subscribe(response => {\r\n      this.spinner.hide();\r\n      this.JoinAndClose();\r\n      if (response.success) {\r\n        CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n      }\r\n      else {\r\n        CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<main id=\"wrapper\">\r\n\r\n    <div class=\"backlayer\">\r\n        <div class=\"layerLeft\"\r\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\r\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\r\n        </div>\r\n        <div class=\"layerRight\"\r\n            style=\"background-image:url(./assets/imgs/mainBackGround.png); background-repeat:no-repeat;\">\r\n            <figure class=\"logo\"><img alt=\"\" src=\"./assets/imgs/mainLogo.png\"></figure>\r\n        </div>\r\n    </div>\r\n    <div class=\"panels\">\r\n        <div class=\"innerpanel\">\r\n            <!-- <div class=\"left\">\r\n                <div class=\"formcontainer\">\r\n                    <h5>Forgot your password? </h5>\r\n                    <h6>Enter The E-mail Address Associated With Your Account.</h6>\r\n                    <form class=\"web_form\" action=\"\">\r\n                        <div class=\"field_control fieldicon mail\">\r\n                            <label class=\"field_label\">Email <span class=\"mandatory\">*</span></label>\r\n                            <div class=\"field_cover\">\r\n                                <input type=\"text\">\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <a href=\"\" class=\"circlebutton\">Sign In</a>\r\n                        <a id=\"moveright\" href=\"javascript:void(0)\" class=\"linkright linkslide\">Back to Login</a>\r\n                    </form>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"right\">\r\n                <div class=\"formcontainer\">\r\n                    <h5>login</h5>\r\n                    <!-- <h6>Lorem ipsum dolor sit amet, consectetur adipiscing</h6> -->\r\n\r\n                    <form class=\"login100-form\">\r\n                        <div class=\"field\">\r\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\" \" autocomplete=\"off\"\r\n                                [(ngModel)]=\"loginModel.email\" required>\r\n                            <label for=\"email\">Email</label>\r\n                            <i class=\"fieldIcon fa fa-user\" aria-hidden=\"true\"></i>\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <input type=\"password\" name=\"password\" id=password placeholder=\" \"\r\n                                [(ngModel)]=\"loginModel.password\" required>\r\n                            <label for=\"password\">Password</label>\r\n                            <i class=\"fieldIcon fa fa-lock\" aria-hidden=\"true\"></i>\r\n                            <!-- <i class=\"fieldIcon password \" id=\"myiconconfirm\" aria-hidden=\"true\" (click)=\"showPassword()\"></i> -->\r\n                        </div>\r\n\r\n                        <div class=\"field\">\r\n                            <button type=\"submit\" class=\"submit button\" (click)=\"callLoginApi()\"><span></span>Log\r\n                                In</button>\r\n                        </div>\r\n\r\n                        <div class=\"field d-flex spcl-field\">\r\n                            <!-- <label class=\"checkbox leftlabel\"><input type=\"checkbox\"><i\r\n                                    class=\"input-helper\"></i>Remember me</label> -->\r\n                            <a id=\"moveleft\" href=\"javascript:void(0)\" class=\"linkright linkslide\"\r\n                                (click)=\"CallModalForm(content)\">Forgot Password?</a>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>Forgot Password?</h3>\r\n            <!-- <p>Lorem ipsum dolor sit amet, consectetur adipisicing</p> -->\r\n        </div>\r\n        <form class=\"login100-form\">\r\n            <div class=\"form-element\">\r\n                <label>Email</label>\r\n                <input placeholder=\"Enter Email\" type=\"email\" #inputEmail autocomplete=\"off\" />\r\n            </div>\r\n\r\n            <div class=\"field\" style=\"margin-bottom: 0;\">\r\n                <button type=\"submit\" class=\"submit button\" (click)=\"forgetPassword(inputEmail.value)\">Submit</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\n\r\n@Component({\r\n  selector: 'app-profile-setting-change',\r\n  templateUrl: './profile-setting-change.component.html',\r\n  styleUrls: ['./profile-setting-change.component.css']\r\n})\r\nexport class ProfileSettingChangeComponent implements OnInit {\r\n\r\n  public oldPwd:string;\r\n  public newPwd:string;\r\n  public confirmPwd:string;\r\n\r\n  \r\n  constructor(public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateAdminDetails(){\r\n    if(this.newPwd.toString()!='' && this.newPwd.toUpperCase().match(this.confirmPwd.toUpperCase())){\r\n      let adminDetails:any={};\r\n      adminDetails.oldPassword=this.oldPwd;\r\n      adminDetails.newPassword=this.newPwd;\r\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\r\n        if(response.success){\r\n          CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n          MyRoutingMethods.gotoAds(this.router);\r\n        }\r\n        else{\r\n          CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n        }\r\n      });\r\n    }else{\r\n      if(this.newPwd.toString()==''){\r\n        CommonMethods.showErrorDialog(this.snackBar,\"Password field can't be empty.\")\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,\"Oops, that's not the same password as the first one\");\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"form-outer\">\r\n    <div class=\"form-element\">\r\n        <label for=\"oldpassword\">Old Password</label>\r\n        <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"npassword\">New password</label>\r\n        <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\">\r\n        <label for=\"cpassword\">Confirm password</label>\r\n        <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" autocomplete=\"off\"/>\r\n    </div>\r\n    <div class=\"form-element\" style=\"text-align: center;\">\r\n        <a (click)=\"updateAdminDetails()\" class=\"submit-btn\">Submit</a>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { CookiesModel } from 'src/app/modalPackages/cookies';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { MyConstants } from 'src/app/utillpackage/constant';\r\n\r\n@Component({\r\n  selector: 'app-show-profile',\r\n  templateUrl: './show-profile.component.html',\r\n  styleUrls: ['./show-profile.component.css']\r\n})\r\nexport class ShowProfileComponent implements OnInit {\r\n\r\n  Tag=\"ShowProfileComponent\";\r\n  imageurl:any;\r\n  modalReference:NgbModalRef;\r\n  selectedImageUrl:File ;\r\n  public oldPwd:string;\r\n  public newPwd:string;\r\n  public confirmPwd:string;\r\n\r\n  public userName:string;\r\n  public email:string;\r\n\r\n  constructor(public modalService:NgbModal,public snackBar: MatSnackBar, public router: Router, public adminServiceService: AdminServiceService,\r\n    public cookiesService:CookieService,public spiner:NgxSpinnerService) {\r\n    this.selectedImageUrl=null;\r\n    this.checkLoginMethod();\r\n    this.imageurl=this.cookiesService.get('profilePic');\r\n    if(!this.imageurl){\r\n      this.imageurl=\"./assets/imgs/default-admin.jpg\";\r\n    }\r\n    else{\r\n      this.imageurl=MyConstants.serverURL+this.imageurl;\r\n    }\r\n   }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**Check Login */\r\n  checkLoginMethod() {\r\n    let logincheck = MyCookies.checkLoginStatus(this.cookiesService);\r\n    if (logincheck) {\r\n      this.email=MyCookies.getEmaild(this.cookiesService);\r\n      // this.email=MyCookies\r\n    } else {\r\n      MyRoutingMethods.gotoLogin(this.router);\r\n    }\r\n  }\r\n\r\n\r\n  onSelectFile(event) {\r\n  \r\n    if (event.target.files) {\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = (innerEvent) => {\r\n        this.imageurl = (<FileReader>innerEvent.target).result;\r\n\r\n        this.selectedImageUrl = event.target.files[0];\r\n        const adminDetails: FormData = new FormData();\r\n        adminDetails.append('file', this.selectedImageUrl, this.selectedImageUrl.name);\r\n        this.updateAdminDetails(adminDetails);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n        * \r\n        * Open  Modal Function \r\n        */\r\n  openModal(content) {\r\n    this.modalReference = this.modalService.open(content, { centered: true });\r\n    this.modalReference.result.then((result) => { }, (reson) => {\r\n      this.reset();\r\n    });\r\n    //  this. modalReference.componentInstance.actionMessage = this.actionmessage;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * close Modal Function \r\n   */\r\n  JoinAndClose() {\r\n    if (this.modalReference) {\r\n      this.reset();\r\n      this.modalReference.close();\r\n    }\r\n  }\r\n\r\n  showProileModal(content){\r\n    this.openModal(content);\r\n  }\r\n\r\n\r\n  // CHnage Proilfe \r\n  updatePassword() {\r\n    if (this.newPwd.toString() != '' && this.newPwd.toUpperCase() == this.confirmPwd.toUpperCase()\r\n      &&  this.oldPwd !='' && this.newPwd.toUpperCase() != this.oldPwd.toUpperCase()) {\r\n      this.spiner.show();\r\n      let adminDetails: any = {};\r\n      adminDetails.oldPassword = this.oldPwd;\r\n      adminDetails.newPassword = this.newPwd;\r\n      this.adminServiceService.updateDetails(adminDetails).subscribe(response => {\r\n        this.JoinAndClose();\r\n        if (response.success) {\r\n          this.spiner.hide();\r\n          CommonMethods.showSuccessDialog(this.snackBar, response.message);\r\n          MyCookies.deletecookies(this.cookiesService);\r\n          MyRoutingMethods.gotoLogin(this.router);\r\n          CommonMethods.showSuccessDialog(this.snackBar, response.message + \" please Login Again\");\r\n        }\r\n        else {\r\n          this.spiner.hide();\r\n          CommonMethods.showErrorDialog(this.snackBar, response.message);\r\n        }\r\n      });\r\n    } else {\r\n      if (this.newPwd.toString() == '') {\r\n        CommonMethods.showErrorDialog(this.snackBar, \"Password field can't be empty.\");\r\n      }\r\n      else if(this.newPwd.toUpperCase() == this.oldPwd.toUpperCase()){\r\n        CommonMethods.showErrorDialog(this.snackBar, \"New Password can't be same as Old Password\");\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar, \"Oops, New Password & Confirm Password are not same\");\r\n      }\r\n      this.JoinAndClose();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * method to update admin details\r\n   * @param adminDetails updated admin details object\r\n   */\r\n  updateAdminDetails(adminDetails:any){\r\n    this.spiner.show();\r\n    this.adminServiceService.updateDetails(adminDetails).subscribe(response =>{\r\n      this.spiner.hide();\r\n      if(response.success){\r\n        this.adminServiceService.setCurrentProfilePic(this.cookiesService.get('profilePic'));\r\n        CommonMethods.showSuccessDialog(this.snackBar,response.message);\r\n      }\r\n      else{\r\n        CommonMethods.showErrorDialog(this.snackBar,response.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * method to reset all variables of admindetail object\r\n   */\r\n  reset(){\r\n    this.oldPwd = '';\r\n    this.newPwd = '';\r\n    this.confirmPwd = '';\r\n  }\r\n}\r\n","<div class=\"card profile-section\">\r\n    <div class=\"card-body\">\r\n        <label class=\"cabinet center-block\">\r\n            <figure>\r\n            <img src=\"{{imageurl}}\" class=\"gambar img-responsive img-thumbnail\" id=\"item-img-output\" />\r\n          <figcaption><i class=\"fa fa-camera\"></i></figcaption>\r\n         </figure>\r\n        <input type=\"file\" class=\"item-img file center-block\"  (change)=\"onSelectFile($event)\" accept=\"image/*\" name=\"file_photo\"/>\r\n        </label>\r\n    </div>\r\n\r\n    <div class=\"profile-name\">\r\n        <h2>Admin</h2>\r\n        <p>{{email}}</p>\r\n        <a (click)=\"showProileModal(content)\">Change Password</a>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #content>\r\n    <div class=\"modal-body\" style=\"text-align: center; \">\r\n        <div class=\"close-icon\" (click)=\"JoinAndClose()\"><i class=\"fa fa-times\"></i></div>\r\n        <div class=\"title-heading\">\r\n            <h3>Change Password</h3>\r\n        </div>\r\n        <div class=\"form-outer\">\r\n            <div class=\"form-element\">\r\n                <label for=\"oldpassword\">Old Password</label>\r\n                <input placeholder=\"Old Password\" type=\"password\" id=\"oldpassword\" [(ngModel)]=\"oldPwd\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\">\r\n                <label for=\"npassword\">New password</label>\r\n                <input placeholder=\"New Password\" type=\"password\" id=\"npassword\" [(ngModel)]=\"newPwd\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\">\r\n                <label for=\"cpassword\">Confirm password</label>\r\n                <input placeholder=\"Confirm Password\" type=\"password\" id=\"cpassword\" [(ngModel)]=\"confirmPwd\" (keyup.enter)=\"updatePassword()\" autocomplete=\"off\" />\r\n            </div>\r\n            <div class=\"form-element\" style=\"text-align: center;\">\r\n                <a (click)=\"updatePassword()\" class=\"submit-btn\">Submit</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: ['./blank.component.css']\n})\nexport class BlankComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet>\n</router-outlet>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { CommonMethods } from 'src/app/commonmethod/common-method';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { SidebarService } from 'src/app/services/sidebar.service';\r\nimport { MyRoutingMethods } from 'src/app/utillpackage/my-routing-methods';\r\nimport { MyCookies } from 'src/app/utillpackage/my-cookies';\r\nimport { MyConstants } from 'src/app/utillpackage/constant';\r\nimport { AdminServiceService } from 'src/app/services/admin-service.service';\r\n\r\n@Component({\r\n  selector: 'app-full',\r\n  templateUrl: './full.component.html',\r\n  styleUrls: ['./full.component.css']\r\n})\r\nexport class FullComponent implements OnInit {\r\n\r\n  Tag = \"FullComponent\";\r\n\r\n  showprofile = false;\r\n  showSideBar = false;\r\n  topHeading: string;\r\n  menu: Array<any>;\r\n  user_Name: any;\r\n  showBackButtun = false;\r\n  searchTerm: string = \"\";\r\n  profilePic: any;\r\n  mobileView = false;\r\n\r\n  constructor(public router: Router, public cookiesService: CookieService, public navBarService: SidebarService, public adminServiceService: AdminServiceService,\r\n    public ngzone: NgZone) {\r\n    this.showprofile = false\r\n    this.showSideBar = false\r\n    this.showBackButtun = false;\r\n    this.mobileView = false;\r\n    this.menu = [];\r\n    this.user_Name = \"\";\r\n    // Set Menu List From Side Bar Service \r\n    this.menu = this.navBarService.getMenuList()\r\n    this.router.events.subscribe(value => {\r\n      if (value instanceof NavigationEnd) {\r\n\r\n        this.checkAndSetValue()\r\n\r\n      }\r\n    });\r\n    this.user_Name = \"Admin\"\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.adminServiceService.currentProfilePic.subscribe(profilePicUrl => {\r\n      this.profilePic = profilePicUrl;\r\n      if (profilePicUrl == '') {\r\n        this.profilePic = this.cookiesService.get('profilePic');\r\n      }\r\n      if (!this.profilePic) {\r\n        this.profilePic = \"./assets/imgs/default-admin.jpg\";\r\n      }\r\n      else {\r\n        this.profilePic = MyConstants.serverURL + this.profilePic;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * Profile Dialog Show Image\r\n   * \r\n   */\r\n  showProflieDown() {\r\n    this.showprofile = !this.showprofile;\r\n  }\r\n  /**End */\r\n\r\n  /**\r\n * \r\n * Menue Toggle Image\r\n * \r\n */\r\n\r\n  menueToggle() {\r\n    if (this.showSideBar == false) {\r\n      this.showSideBar = true;\r\n    } else {\r\n      this.showSideBar = false;\r\n    }\r\n  }\r\n\r\n  toggleButton() {\r\n    this.mobileView = !this.mobileView;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * Get Top HEading Function \r\n   * \r\n   */\r\n\r\n  checkAndSetValue() {\r\n    this.showprofile = false\r\n    this.ngzone.run(() => {\r\n      this.topHeading = \"\"\r\n      var currentUrl = this.router.url\r\n      var matched = false\r\n      this.menu.forEach((element, index) => {\r\n        element.status = \"inactive\"\r\n        if (!matched) {\r\n          if (currentUrl == element.url) {\r\n            matched = true\r\n            // this.toggleButton();\r\n            this.topHeading = element.title\r\n            element.status = \"active\"\r\n\r\n          }\r\n        } else {\r\n          element.status = \"inactive\"\r\n        }\r\n        // element.urlTitleList.forEach(pageInnerUrls => {\r\n        //   if (!matched) {\r\n        //     if (currentUrl.includes(pageInnerUrls.url)) {\r\n        //       matched = true\r\n        //       this.topHeading = pageInnerUrls.title\r\n        //       element.status = \"active\"\r\n        //     }\r\n        //   }\r\n        // });\r\n        // element.innerOptions.forEach((innerElement, innerIndex) => {\r\n        //   innerElement.status = \"inactive\"\r\n\r\n\r\n        //   if (!matched) {\r\n\r\n        //     if (currentUrl == \"/\" + innerElement.url) {\r\n        //       matched = true\r\n        //       this.topHeading = innerElement.title\r\n        //       innerElement.status = \"active\"\r\n        //       element.status = \"active\"\r\n        //       this.currentInnermenuIndex = innerIndex\r\n        //       this.currentmenuIndex = index\r\n        //       // CommonMethods.showconsole(this.Tag, \"Status:- \" + element.status)\r\n        //       CommonMethods.showconsole(this.Tag, \"Current main Menu Index :- \" + index)\r\n        //       CommonMethods.showconsole(this.Tag, \"Current main inner Menu Index :- \" + innerIndex)\r\n        //     }\r\n        //   }\r\n        //   innerElement.urlTitleList.forEach(pageInnerUrls => {\r\n        //     if (!matched) {\r\n        //       if (currentUrl.includes(pageInnerUrls.url) ) {\r\n        //         matched = true\r\n        //         this.topHeading = pageInnerUrls.title\r\n        //         innerElement.status = \"active\"\r\n        //         element.status = \"active\"\r\n        //       }\r\n        //     }\r\n        //   });\r\n        // })\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  /**End */\r\n\r\n\r\n\r\n\r\n  gotoRouting(index) {\r\n    this.toggleButton()\r\n    this.router.navigate([this.menu[index].url]);\r\n    this.topHeading = this.menu[index].title\r\n  }\r\n  // gotoSubmenuPage(oterindex: number, innerindex: number) {\r\n\r\n  //   this.router.navigate(['/' + this.menus[oterindex].innerOptions[innerindex].url])\r\n  //   this.topHeading = this.menus[oterindex].innerOptions[innerindex].title\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Logout Function\r\n   */\r\n  logout() {\r\n    MyCookies.deletecookies(this.cookiesService);\r\n    MyRoutingMethods.gotoLogin(this.router);\r\n  }\r\n  /**End */\r\n\r\n\r\n  /**\r\n   * Toggle Css CHnage \r\n   */\r\n  getCustomCss() {\r\n    if (this.showSideBar == true) {\r\n      return 'fa-toggle-off'\r\n\r\n    } else {\r\n      return 'fa-toggle-on'\r\n    }\r\n  }\r\n\r\n  /**Ng Class Icon Set */\r\n  setNgClass(className) {\r\n    return className;\r\n  }\r\n  /**End */\r\n\r\n}\r\n","<div [ngClass]=\"{'slide': showSideBar}\">\r\n    <div class=\"wrapper\" [ngClass]=\"{'mobile-slide': mobileView}\">\r\n        <div class=\"top-bar\">\r\n            <div class=\"left-section\">\r\n                <div class='left-side-section'>\r\n                    <div class=\"toggle-btn\" (click)=\"toggleButton()\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                    </div>\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"right-section\">\r\n                <ul>\r\n                    <!-- <li>\r\n                        <div class=\"notification\">\r\n                            <div class=\"navdrop-box custom-tooltip\" data-name=\"Notification\">\r\n                                <i class=\"mdi mdi-bell-ring\"></i>\r\n                                <span class=\"count-notification\">21</span>\r\n                            </div>\r\n                            <div class=\"dropdown-menu broadcast-notification\">\r\n                                <div class=\"notification-header\">\r\n                                    <h5>Notifications</h5>\r\n                                    <p>you have <span>21</span> unread Messages</p>\r\n\r\n                                </div>\r\n                                <div class=\"notification-message\">\r\n                                    <ul>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                        <li><a href=\"javascript:;\"><i class=\"mdi mdi-bell\"></i>New Notification\r\n                                                Message<span>11:00PM</span></a></li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"notification-footer\">\r\n                                    <a href=\"javascript:;\">View All Notifications</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li> -->\r\n                    <li>\r\n                        <div class=\"profile-settings\">\r\n                            <div class=\"navdrop-box\" style=\"display: flex;\r\n                            justify-content: center;\">\r\n                                <img src=\"{{profilePic}}\">\r\n                                <h5 style=\"position: relative;\r\n                                top: 3px;\r\n                                margin: 2px;\r\n                                font-weight: bold;\r\n                                font-size: 16px;\">{{user_Name}}</h5>\r\n                                <i style=\"position: relative;top: 9px;\r\n                                margin-left: 9px;\" class=\"fa fa-chevron-down\"></i>\r\n                            </div>\r\n                            <div class=\"dropdown-menu\">\r\n                                <!-- <h5>{{user_Name}}</h5> -->\r\n                                <a routerLink=\"/show/profile\">View Profile</a>\r\n                                <!-- <a routerLink=\"/settings\">Settings</a> -->\r\n                                <div class=\"dropdown-menu-footer\">\r\n                                    <a (click)=\"logout()\"> Logout </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"side-bar\">\r\n            <div class=\"backlayer-sidebar\" (click)=\"toggleButton()\"></div>\r\n            <div class=\"side-header\">\r\n                <a href=\"\" class=\"logo-text\">\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/Logo_car_black_and_white.png\" /></div>\r\n                    <span class=\"logo-name\">GetItHomeNow</span>\r\n                </a>\r\n                <i class=\"toggle-switch fa \" [ngClass]=\"getCustomCss()\" (click)=\"menueToggle()\"></i>\r\n\r\n                <div class=\"sidebar-header\">\r\n                    <div class=\"logo-img\"><img src=\"./assets/imgs/logo.png\" /></div>\r\n                    <a (click)=\"toggleButton()\"><i class=\"fa fa-times\"></i></a>\r\n                </div>\r\n            </div>\r\n            <perfect-scrollbar>\r\n                <ul class=\"nav-bar\">\r\n                    <!-- <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\r\n                        <a>{{menuList.title}}</a>\r\n                    </li> -->\r\n                    <li *ngFor=\"let menuList of menu; let i=index;\" (click)=\"gotoRouting(i)\" [ngClass]=\"{'active' : menuList.status == 'active'}\">\r\n                        <a><i class='side-icon' [ngClass]=\"setNgClass(menuList.icon)\"></i>\r\n                            <span>{{menuList.title}}</span></a>\r\n                    </li>\r\n                    <!-- <li class=\"active\">\r\n                        <a><i class='side-icon fa fa-home'></i> <span>Dashboard</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-list'></i><span>Orders</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-exchange-alt'></i> <span>Transactions</span></a>\r\n                    </li>\r\n                    <li>\r\n                        <a><i class='side-icon fa fa-shopping-cart'></i> <span>E- Commerce Sites</span></a>\r\n                    </li> -->\r\n                    <!-- <li class=\"child-menu\">\r\n                        <a>Users</a>\r\n                        <div class=\"menu-wrap\">\r\n                            <ul>\r\n                                <li><a>News &amp; Article</a></li>\r\n                                <li><a>Athletes</a></li>\r\n                                <li><a>Coach</a></li>\r\n                                <li><a>video</a></li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </li> -->\r\n                </ul>\r\n            </perfect-scrollbar>\r\n        </div>\r\n        <div class=\"main-container dashboard\">\r\n            <div class=\"main-title\">\r\n                <h1>{{topHeading}}</h1>\r\n            </div>\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>","import {NgModule} from'@angular/core'\nimport { CommonModule } from '@angular/common';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n@NgModule({\n    imports: [\n      CommonModule,\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule,\n      MatPaginatorModule\n  \n    \n    ],\n    exports: [\n      MatTooltipModule,\n      MatButtonModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatSnackBarModule,\n      MatCheckboxModule,\n      MatTableModule,\n      MatPaginatorModule\n    ],\n    declarations: []\n  })\n  export class MaterialModule { }","export class AdvertisementModel{\r\n    public _id:string;\r\n    public advertiseId:string;\r\n    public name:string;\r\n    public mainContent:string;\r\n    public phone: number;\r\n\r\n    constructor(){}\r\n}","export class CookiesModel {\r\n    public _id: string;\r\n    public email: string;\r\n    public token: string;\r\n    public profilePic: any;\r\n    public contact: string;\r\n\r\n    constructor(user: any) {\r\n        this._id = user._id;\r\n        this.email = user.email;\r\n        this.token = user.token;\r\n        this.profilePic = user.profilePic;\r\n        this.contact = user.contact;\r\n    }\r\n}\r\n","export class LoginModel{\r\n    constructor(\r\n        public email:string,\r\n        public password:string\r\n    )\r\n    {\r\n\r\n    }\r\n}","export class SideNavigationMain {\r\n    constructor(public id: string,\r\n        public title: string,\r\n        public url: string,\r\n        public icon: string,\r\n        public status: string,\r\n        public type: string,\r\n        public urlTitleList: Array<SideNavigationUrlTitle>,\r\n        public activeicon:any) {\r\n    }\r\n}\r\n\r\n\r\nexport class SideNavigationUrlTitle {\r\n    constructor(public url: string,\r\n        public title: string) {\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MyCookies } from '../utillpackage/my-cookies';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { MyConstants } from '../utillpackage/constant';\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { CookiesModel } from '../modalPackages/cookies';\r\nimport { AdvertisementModel } from '../modalPackages/advertisement';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminServiceService {\r\n\r\n  private loginUrl: string = MyConstants.BASEURL + \"admin/login\";\r\n  private createAdvertisementUrl: string = MyConstants.BASEURL + \"admin/createAdvertisement\";\r\n  private updateAdvertisementUrl: string = MyConstants.BASEURL + \"admin/updateAdvertisment\";\r\n  private deleteAdvertisementUrl: string = MyConstants.BASEURL + \"admin/deleteAdvertisment\";\r\n  private getAdvertisementUrl: string = MyConstants.BASEURL + \"admin/getAdvertisments?name=\";\r\n  private userForgotPasswordUrl: string = MyConstants.BASEURL + \"admin/forget-password\";\r\n  private updateAdminPwdUrl: string = MyConstants.BASEURL + \"admin/updateProfile\";\r\n\r\n\r\n  private userId: string;\r\n  private token: string;\r\n  header: HttpHeaders;\r\n  userIdRequestParam: HttpParams;\r\n\r\n  private profilePic = new BehaviorSubject<string>('');\r\n  readonly currentProfilePic=this.profilePic.asObservable();\r\n\r\n  constructor(private http: HttpClient, public cookiesServices: CookieService) { }\r\n\r\n\r\n  setCurrentProfilePic(profilePicUrl:string){\r\n    this.profilePic.next(profilePicUrl);\r\n  }\r\n\r\n  getCurrentProfilePic(): Observable<string>{\r\n    return this.profilePic.asObservable();\r\n  }\r\n\r\n  /**\r\n    * method to set token for header\r\n    */\r\n  setHeader() {\r\n    this.userId = MyCookies.getId(this.cookiesServices);\r\n    this.token = MyCookies.getToken(this.cookiesServices);\r\n    this.header = new HttpHeaders().append('token', this.token);\r\n    this.userIdRequestParam = new HttpParams().set(\"_id\", this.userId);\r\n  }\r\n\r\n  /**\r\n   * method to login for admin\r\n   * @param username username to login\r\n   * @param password password to login\r\n   */\r\n  adminLoginAPI(username: string, password: string): Observable<any> {\r\n    let data: any = {};\r\n    data.email = username;\r\n    data.password = password;\r\n    return this.http.post<any>(this.loginUrl, data)\r\n      .pipe(map(response => {\r\n        // login successful if there's a token in thedata response\r\n        if (response.success && response.data.token) {\r\n          MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\r\n          this.profilePic.next(this.cookiesServices.get('profilePic'));\r\n        }\r\n        return response;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * method to create new advertisement\r\n   * @param adData AdvertisementModel\r\n   */\r\n  createAdvertisement(adData: AdvertisementModel): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.post(this.createAdvertisementUrl, adData, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * method to update advertisement\r\n    * @param adData AdvertisementModel\r\n  */\r\n  updateAdvertisement(adData: AdvertisementModel): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.patch(this.updateAdvertisementUrl, adData, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * mw=ethod to create new advertisement\r\n    * @param advertiseId advertisement Id\r\n   */\r\n  deleteAdvertisement(advertiseId: string): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    let data: any = {};\r\n    data.advertiseId = advertiseId;\r\n    return this.http.patch(this.deleteAdvertisementUrl, data, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * mw=ethod to create new advertisement\r\n    * @param searchString string to search in advertisements\r\n  */\r\n  getAdvertisement(searchString:string,pageNo:number): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    let searchurl:string='';\r\n    searchurl=this.getAdvertisementUrl+searchString+\"&page=\"+pageNo;\r\n    return this.http.get(searchurl, httpOptions);\r\n  }\r\n\r\n  /**\r\n    * method to update admin details\r\n    * @param adminDetails admin details to update\r\n   */\r\n  updateDetails(adminDetails: any): Observable<any> {\r\n    //for setting token in headers\r\n    this.setHeader();\r\n    const httpOptions = {\r\n      headers: this.header\r\n    };\r\n    return this.http.patch<any>(this.updateAdminPwdUrl, adminDetails, httpOptions).pipe(map(response=>{\r\n      if (response.success && response.data.token) {\r\n        MyCookies.saveLoginDataInCookies(this.cookiesServices, new CookiesModel(response.data));\r\n        this.profilePic.next(this.cookiesServices.get('profilePic'));\r\n      }\r\n      return response;\r\n    }));\r\n\r\n  }\r\n\r\n  /**\r\n    * method for forgotpassword \r\n    * @param email email id to send reset link\r\n  */\r\n  forgotPassword(email: string): Observable<any> {\r\n    let data: any = {};\r\n    data.email = email;\r\n    return this.http.post<any>(this.userForgotPasswordUrl, data)\r\n      .pipe(map(data => {\r\n        return data;\r\n      }));\r\n  }\r\n\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { SideNavigationMain, SideNavigationUrlTitle } from '../modalPackages/sidenavBar';\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarService {\r\n\r\n  tag = \"SidebarService\"\r\n  toggled = false;\r\n  pageName = \"\"\r\n  accountType: string\r\n  menus: Array<SideNavigationMain> = []\r\n  storeid: string\r\n  constructor(public ngzone: NgZone, public router: Router, public cookiesservice: CookieService) {\r\n    this.accountType = \"\"\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * Add Side Bar Into Menu\r\n   * \r\n   */\r\n\r\n  addSideOption() {\r\n    this.menus = []\r\n \r\n         var pageInnerUrls: Array<SideNavigationUrlTitle> = []\r\n          this.menus.push(new SideNavigationMain(\"Advertisement\", \"All Advertisement\", '/advertisement', \"fa fa-puzzle-piece\", \"inactive\", \"header\", pageInnerUrls, \"\"));  \r\n          this.menus.push(new SideNavigationMain(\"View Profile\", \"View Profile\", '/show/profile', \"fa fa-cog\", \"inactive\", \"header\", [], \"\")); \r\n  }\r\n\r\n\r\n  getMenuList() {\r\n    this.addSideOption();\r\n    return this.menus;\r\n  }\r\n}\r\n","export class MyConstants {\r\n    // static BASEURL = \"http://localhost:8081/api/\";\r\n    // static serverURL = \"http://localhost:8081\";\r\n    static BASEURL = \"http://3.21.83.36:8081/api/\";\r\n    static serverURL = \"http://3.21.83.36:8081\";\r\n}","import { CookieService } from \"ngx-cookie-service\";\r\nimport { CommonMethods } from '../commonmethod/common-method';\r\nimport { CookiesModel } from '../modalPackages/cookies';\r\n\r\n\r\nexport class MyCookies {\r\n \r\n    static saveLoginDataInCookies(cookieService: CookieService, cookiesModel:CookiesModel) {\r\n        cookieService.set('_id',cookiesModel._id,this.getExpiryTime(),'');\r\n        cookieService.set('email',cookiesModel.email,this.getExpiryTime(),'');\r\n        cookieService.set('token',cookiesModel.token,this.getExpiryTime(),'');\r\n        cookieService.set('profilePic',cookiesModel.profilePic,this.getExpiryTime(),'');\r\n        cookieService.set('contact',cookiesModel.contact,this.getExpiryTime(),'');\r\n        \r\n    }\r\n  \r\n\r\n    static checkLoginStatus(cookieService: CookieService): boolean {\r\n        var cookieExists: boolean = cookieService.check('_id');\r\n        cookieExists = cookieService.get('_id') != \"\";\r\n        if (cookieExists) {\r\n            cookieExists = cookieService.check('email');\r\n            cookieExists = cookieService.get('email') != \"\";\r\n            if (cookieExists) {\r\n                cookieExists = cookieService.check('token');\r\n                cookieExists = cookieService.get('token') != \"\";\r\n                if (cookieExists) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static getId(cookieService: CookieService): string {\r\n        return cookieService.get('_id');\r\n    }\r\n    static getEmaild(cookieService: CookieService): string {\r\n        return cookieService.get('email');\r\n    }\r\n    static getToken(cookieService: CookieService): string {\r\n        return cookieService.get('token');\r\n    }\r\n       \r\n\r\n    static getExpiryTime() {\r\n        let date = new Date();\r\n        date.setDate(date.getDate() +1);\r\n        return date;\r\n    }\r\n\r\n    static deletecookies(cookieService: CookieService) {\r\n        cookieService.deleteAll();\r\n\r\n    }\r\n}","\nimport { Router } from '@angular/router';\n\n\nexport class MyRoutingMethods {\n    static gotoLogin(router: Router) {\n        router.navigate(['home']);\n    }\n    static gotoAds(router: Router) {\n        router.navigate(['advertisement']);\n    }\n  \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}